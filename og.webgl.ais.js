(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("og", [], factory);
	else if(typeof exports === 'object')
		exports["og"] = factory();
	else
		root["og"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/og/index.webgl.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/og/index.webgl.js":
/*!********************************************!*\
  !*** ./src/og/index.webgl.js + 30 modules ***!
  \********************************************/
/*! exports provided: Handler, Framebuffer, MultiFramebuffer, types, Program, TextureAtlas */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is an entry point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/og/ImageCanvas.js\n/**\r\n * @module og/ImageCanvas\r\n */\r\n\r\n\r\n\r\n/**\r\n * Usefull class for working with JS canvas object.\r\n * @class\r\n * @param {number} [width] - Canvas width. Default 256.\r\n * @param {number} [height] - Canvas height. Default 256.\r\n */\r\nclass ImageCanvas {\r\n    constructor(width, height) {\r\n        /**\r\n         * Canvas object.\r\n         * @protected\r\n         * @type {Object}\r\n         */\r\n        this._canvas = document.createElement(\"canvas\");\r\n        this._canvas.width = width || 256;\r\n        this._canvas.height = height || 256;\r\n\r\n        /**\r\n         * Canvas context.\r\n         * @protected\r\n         * @type {Object}\r\n         */\r\n        this._context = this._canvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * Returns canvas object.\r\n     * @public\r\n     * @returns {Object}\r\n     */\r\n    getCanvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * Returns canvas context pointer.\r\n     * @public\r\n     * @returns {Object}\r\n     */\r\n    getContext() {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Fills canvas RGBA with zeroes.\r\n     * @public\r\n     */\r\n    fillEmpty() {\r\n        var imgd = this._context.getImageData(0, 0, this._canvas.width, this._canvas.height);\r\n        var pixels = imgd.data;\r\n        for (var i = 0, n = pixels.length; i < n; i += 4) {\r\n            pixels[i] = pixels[i + 1] = pixels[i + 2] = pixels[i + 3] = 0;\r\n        }\r\n        this._context.putImageData(imgd, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Gets canvas pixels RGBA data.\r\n     * @public\r\n     * @returns {Array.<number>}\r\n     */\r\n    getData() {\r\n        var imgd = this._context.getImageData(0, 0, this._canvas.width, this._canvas.height);\r\n        return imgd.data;\r\n    }\r\n\r\n    /**\r\n     * Fill the canvas by color.\r\n     * @public\r\n     * @param {string} color - CSS string color.\r\n     */\r\n    fillColor(color) {\r\n        this._context.fillStyle = color;\r\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n    };\r\n\r\n    /**\r\n     * Sets RGBA pixel data.\r\n     * @public\r\n     * @param {Array.<number>} data - Array RGBA data.\r\n     */\r\n    setData(data) {\r\n        var imageData = this._context.createImageData(this._canvas.width, this._canvas.height);\r\n        imageData.data.set(data);\r\n        this._context.putImageData(imageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Resize canvas.\r\n     * @public\r\n     * @param {number} width - Width.\r\n     * @param {number} height - Height.\r\n     */\r\n    resize(width, height) {\r\n        this._canvas.width = width;\r\n        this._canvas.height = height;\r\n        this._context = this._canvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * Draw an image on the canvas.\r\n     * @public\r\n     * @param {Image} img - Draw image.\r\n     * @param {number} [x] - Left top image corner X coordinate on the canvas.\r\n     * @param {number} [y] - Left top image corner Y coordinate on the canvas.\r\n     * @param {number} [width] - Image width slice. Image width is default.\r\n     * @param {number} [height] - Image height slice. Image height is default.\r\n     */\r\n    drawImage(img, x, y, width, height) {\r\n        this._context = this._canvas.getContext('2d');\r\n        this._context.drawImage(img, x || 0, y || 0, width || img.width, height || img.height);\r\n    }\r\n\r\n    /**\r\n     * Converts canvas to JS image object.\r\n     * @public\r\n     * @returns {Image}\r\n     */\r\n    getImage() {\r\n        var img = new Image();\r\n        img.width = this.getWidth();\r\n        img.height = this.getHeight();\r\n        img.src = this._canvas.toDataURL(\"image/png\");\r\n        return img;\r\n    }\r\n\r\n    /**\r\n     * Get measured text width.\r\n     * @public\r\n     * @param {string} text - Measured text.\r\n     * @returns {number}\r\n     */\r\n    getTextWidth(text) {\r\n        var metrics = this._context.measureText(text);\r\n        return Math.round(metrics.width);\r\n    }\r\n\r\n    /**\r\n     * Draw a text on the canvas.\r\n     * @public\r\n     * @param {string} text - Text.\r\n     * @param {number} [x] - Canvas X - coordinate. 0 - default.\r\n     * @param {number} [y] - Canvas Y - coordinate. 0 - default.\r\n     * @param {string} [font] - Font style. 'normal 14px Verdana' - is default.\r\n     * @param {string} [color] - Css font color.\r\n     */\r\n    drawText(text, x, y, font, color) {\r\n        this._context.fillStyle = color || 'black';\r\n        this._context.font = font || 'normal 14px Verdana';\r\n        this._context.fillText(text, x || 0, y || 14);\r\n    }\r\n\r\n    /**\r\n     * Gets canvas width.\r\n     * @public\r\n     * @returns {number}\r\n     */\r\n    getWidth() {\r\n        return this._canvas.width;\r\n    }\r\n\r\n    /**\r\n     * Gets canvas height.\r\n     * @public\r\n     * @returns {number}\r\n     */\r\n    getHeight() {\r\n        return this._canvas.height;\r\n    }\r\n\r\n    /**\r\n     * Load image to canvas.\r\n     * @public\r\n     * @param {string} url - Image url.\r\n     * @pararm {imageCallback} [callback] - Image onload callback.\r\n     */\r\n    load(url, callback) {\r\n        var img = new Image();\r\n        var that = this;\r\n        img.onload = function () {\r\n            that.resize(img.width, img.height);\r\n            that._context.drawImage(img, 0, 0, img.width, img.height);\r\n            callback && callback(img);\r\n        }\r\n        img.src = url;\r\n    }\r\n\r\n    /**\r\n     * Open canvas image in the new window.\r\n     * @public\r\n     */\r\n    openImage() {\r\n        var img = this.getImage();\r\n        var dataUrl = img.src;\r\n        var windowContent = '<!DOCTYPE html>';\r\n        windowContent += '<html>'\r\n        windowContent += '<head><title>Print</title></head>';\r\n        windowContent += '<body>'\r\n        windowContent += '<img src=\"' + dataUrl + '\">';\r\n        windowContent += '</body>';\r\n        windowContent += '</html>';\r\n        var printWin = window.open('', '', 'width=' + img.width + 'px ,height=' + img.height + 'px');\r\n        printWin.document.open();\r\n        printWin.document.write(windowContent);\r\n        printWin.document.close();\r\n        printWin.focus();\r\n    }\r\n\r\n\r\n    destroy() {\r\n        this._canvas.width = 1;\r\n        this._canvas.height = 1;\r\n        this._canvas = null;\r\n        this._context = null;\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/webgl/Framebuffer.js\n/**\r\n * @module og/webgl/Framebuffer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents framebuffer.\r\n * @class\r\n * @param {og.webgl.Handler} handler - WebGL handler.\r\n * @param {Object} [options] - Framebuffer options:\r\n * @param {number} [options.width] - Framebuffer width. Default is handler canvas width.\r\n * @param {number} [options.height] - Framebuffer height. Default is handler canvas height.\r\n * @param {Object} [options.texture] - Texture to render.\r\n * @param {Boolean} [options.useDepth] - Using depth buffer during the rendering.\r\n */\r\nconst Framebuffer_Framebuffer = function (handler, options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * WebGL handler.\r\n     * @public\r\n     * @type {og.webgl.Handler}\r\n     */\r\n    this.handler = handler;\r\n\r\n    /**\r\n     * Framebuffer object.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._fbo = null;\r\n\r\n    /**\r\n     * Renderbuffer object.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._rbo = null;\r\n\r\n    /**\r\n     * Framebuffer width.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this._width = options.width || handler.canvas.width;\r\n\r\n    /**\r\n     * Framebuffer width.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this._height = options.height || handler.canvas.height;\r\n\r\n    this._useDepth = options.useDepth != undefined ? options.useDepth : true;\r\n\r\n    /**\r\n     * Framebuffer activity. \r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this._active = false;\r\n\r\n    /**\r\n     * Framebuffer texture.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.texture = options.texture || null;\r\n};\r\n\r\nFramebuffer_Framebuffer.prototype.destroy = function () {\r\n    var gl = this.handler.gl;\r\n    gl.deleteTexture(this.texture);\r\n    gl.deleteFramebuffer(this._fbo);\r\n    gl.deleteRenderbuffer(this._rbo);\r\n\r\n    this.texture = null;\r\n    this._rbo = null;\r\n    this._fbo = null;\r\n\r\n    this._active = false;\r\n};\r\n\r\n/**\r\n * Framebuffer initialization.\r\n * @private\r\n */\r\nFramebuffer_Framebuffer.prototype.init = function () {\r\n    var gl = this.handler.gl;\r\n\r\n    this._fbo = gl.createFramebuffer();\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n\r\n    if (!this.texture) {\r\n        this.bindOutputTexture(this.handler.createEmptyTexture_l(this._width, this._height));\r\n    }\r\n\r\n    if (this._useDepth) {\r\n        this._rbo = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._rbo);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this._width, this._height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this._rbo);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    }\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n};\r\n\r\n/**\r\n * Bind buffer texture.\r\n * @public\r\n * @param{Object} texture - Output texture.\r\n */\r\nFramebuffer_Framebuffer.prototype.bindOutputTexture = function (texture) {\r\n    var gl = this.handler.gl;\r\n    this.texture = texture;\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n};\r\n\r\n/**\r\n * Sets framebuffer viewport size.\r\n * @public\r\n * @param {number} width - Framebuffer width.\r\n * @param {number} height - Framebuffer height.\r\n */\r\nFramebuffer_Framebuffer.prototype.setSize = function (width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n    if (this._active) {\r\n        this.handler.gl.viewport(0, 0, this._width, this._height);\r\n    }\r\n    if (this._useDepth) {\r\n        this.destroy();\r\n        this.init();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns framebuffer completed.\r\n * @public\r\n * @returns {boolean} -\r\n */\r\nFramebuffer_Framebuffer.prototype.isComplete = function () {\r\n    var gl = this.handler.gl;\r\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE)\r\n        return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Gets pixel RBGA color from framebuffer by coordinates.\r\n * @public\r\n * @param {Uint8Array} res - Normalized x - coordinate.\r\n * @param {number} nx - Normalized x - coordinate.\r\n * @param {number} ny - Normalized y - coordinate.\r\n * @param {number} [w=1] - Normalized width.\r\n * @param {number} [h=1] - Normalized height.\r\n */\r\nFramebuffer_Framebuffer.prototype.readPixels = function (res, nx, ny, w, h) {\r\n    var gl = this.handler.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n    gl.readPixels(nx * this._width, ny * this._height, w || 1, h || 1, gl.RGBA, gl.UNSIGNED_BYTE, res);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n};\r\n\r\n/**\r\n * Reads all pixels(RGBA colors) from framebuffer.\r\n * @public\r\n * @param {Uint8Array} res - Result array\r\n */\r\nFramebuffer_Framebuffer.prototype.readAllPixels = function (res) {\r\n    var gl = this.handler.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n    gl.readPixels(0, 0, this._width, this._height, gl.RGBA, gl.UNSIGNED_BYTE, res);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n};\r\n\r\n/**\r\n * Activate framebuffer frame to draw.\r\n * @public\r\n * @returns {og.webgl.Framebuffer} Returns Current framebuffer.\r\n */\r\nFramebuffer_Framebuffer.prototype.activate = function () {\r\n    var gl = this.handler.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n    gl.viewport(0, 0, this._width, this._height);\r\n    this._active = true;\r\n    var c = this.handler.framebufferStack.current().data;\r\n    c && (c._active = false);\r\n    this.handler.framebufferStack.push(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deactivate framebuffer frame.\r\n * @public\r\n */\r\nFramebuffer_Framebuffer.prototype.deactivate = function () {\r\n    var h = this.handler,\r\n        gl = h.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    this._active = false;\r\n\r\n    var f = this.handler.framebufferStack.popPrev();\r\n\r\n    if (f) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, f._fbo);\r\n        gl.viewport(0, 0, f._width, f._height);\r\n    } else {\r\n        gl.viewport(0, 0, h.canvas.width, h.canvas.height);\r\n    }\r\n};\r\n\r\n/**\r\n * Gets JavaScript image object that framebuffer has drawn.\r\n * @public\r\n * @returns {Object} -\r\n */\r\nFramebuffer_Framebuffer.prototype.getImage = function () {\r\n    var data = new Uint8Array(4 * this._width * this._height);\r\n    this.readAllPixels(data);\r\n    var imageCanvas = new ImageCanvas(this._width, this._height);\r\n    imageCanvas.setData(data);\r\n    return imageCanvas.getImage();\r\n};\r\n\r\n/**\r\n * Open dialog window with framebuffer image.\r\n * @public\r\n */\r\nFramebuffer_Framebuffer.prototype.openImage = function () {\r\n    var img = this.getImage();\r\n    var dataUrl = img.src;\r\n    var windowContent = '<!DOCTYPE html>';\r\n    windowContent += '<html>'\r\n    windowContent += '<head><title>Print</title></head>';\r\n    windowContent += '<body>'\r\n    windowContent += '<img src=\"' + dataUrl + '\">';\r\n    windowContent += '</body>';\r\n    windowContent += '</html>';\r\n    var printWin = window.open('', '', 'width=' + img.width + 'px ,height=' + img.height + 'px');\r\n    printWin.document.open();\r\n    printWin.document.write(windowContent);\r\n    printWin.document.close();\r\n    printWin.focus();\r\n};\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/og/cons.js\n\r\n\r\n/**\r\n * Console logging singleton object.\r\n * @class\r\n */\r\nclass Cons {\r\n    constructor() {\r\n        this._container = document.createElement(\"div\");\r\n        this._container.classList.add(\"ogConsole\");\r\n        this._container.style.display = \"none\";\r\n        if (document.body) {\r\n            document.body.appendChild(this._container);\r\n        }\r\n\r\n        this._visibility = false;\r\n    }\r\n\r\n    getVisibility() {\r\n        return this._visibility;\r\n    }\r\n\r\n    setVisibility(visibility) {\r\n        if (this._visibility != visibility) {\r\n            this._visibility = visibility;\r\n            if (this._visibility) {\r\n                this.show();\r\n            } else {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show console panel.\r\n     * @public\r\n     */\r\n    show() {\r\n        if (!this._container.parentNode) {\r\n            if (document.body) {\r\n                document.body.appendChild(this._container);\r\n            }\r\n        }\r\n        this._container.style.display = \"block\";\r\n        this._visibility = true;\r\n    }\r\n\r\n    /**\r\n     * Hide console panel.\r\n     * @public\r\n     */\r\n    hide() {\r\n        this._container.style.display = \"none\";\r\n        this._visibility = false;\r\n    }\r\n\r\n    /**\r\n     * Adds error text in the console.\r\n     * @public\r\n     * @param {string} str - Error text.\r\n     */\r\n    logErr(str) {\r\n        var d = document.createElement(\"div\");\r\n        d.classList.add(\"ogConsole-text\");\r\n        d.classList.add(\"ogConsole-error\");\r\n        d.innerHTML = \"error: \" + str;\r\n        console.log(d.innerHTML);\r\n        this._container.appendChild(d);\r\n        this.show();\r\n    }\r\n\r\n    /**\r\n     * Adds warning text in the console.\r\n     * @public\r\n     * @param {string} str - Warning text.\r\n     */\r\n    logWrn(str) {\r\n        var d = document.createElement(\"div\");\r\n        d.classList.add(\"ogConsole-text\");\r\n        d.classList.add(\"ogConsole-warning\");\r\n        d.innerHTML = \"warning: \" + str;\r\n        console.log(d.innerHTML);\r\n        this._container.appendChild(d);\r\n        this.show();\r\n    }\r\n\r\n    /**\r\n     * Adds log text in the console.\r\n     * @public\r\n     * @param {string} str - Log text.\r\n     * @param {Object} [style] - HTML style.\r\n     */\r\n    log(str, style) {\r\n        var d = document.createElement(\"div\");\r\n        d.classList.add(\"ogConsole-text\");\r\n        if (style) {\r\n            for (var s in style) {\r\n                d.style[s] = style[s];\r\n            }\r\n        }\r\n        d.innerHTML = str;\r\n        console.log(str);\r\n        this._container.appendChild(d);\r\n        this.show();\r\n    }\r\n}\r\n\r\nconst cons = new Cons();\r\n\r\n\n// CONCATENATED MODULE: ./src/og/ajax.js\n/**\r\n * @module og/ajax\r\n */\r\n\r\n\r\n\r\n/**\r\n * Ajax parameters.\r\n * @namespace og.ajax\r\n */\r\nconst ajax = {\r\n    /**\r\n     * Ajax ready state result.\r\n     * @enum\r\n     */\r\n    ReadyState:\r\n    {\r\n        Uninitialized: 0,\r\n        Loading: 1,\r\n        Loaded: 2,\r\n        Interactive: 3,\r\n        Complete: 4\r\n    },\r\n    /**\r\n     * Ajax status code.\r\n     * @enum\r\n     */\r\n    Status:\r\n    {\r\n        OK: 200,\r\n        Created: 201,\r\n        Accepted: 202,\r\n        NoContent: 204,\r\n        BadRequest: 400,\r\n        Forbidden: 403,\r\n        NotFound: 404,\r\n        Gone: 410,\r\n        ServerError: 500\r\n    },\r\n    /**\r\n     * Ajax query method.\r\n     * @enum\r\n     */\r\n    Method: {\r\n        Get: \"GET\",\r\n        Post: \"POST\"\r\n    },\r\n    /**\r\n     * Ajax query type is asynchronous.\r\n     * @type {boolean}\r\n     */\r\n    Asynchronous: true,\r\n    /**\r\n     * Ajax query type is synchronous.\r\n     * @type {boolean}\r\n     */\r\n    Synchronous: false\r\n};\r\n\r\n/**\r\n * Xhr object that returned by ajax query.\r\n * @class\r\n * @param {Object} xhr - Current ActiveXObject object.\r\n */\r\nconst Xhr = function (xhr) {\r\n    /**\r\n     * ActiveXObject object.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    var _xhr = xhr;\r\n\r\n    /**\r\n     * Aborts current ajax.\r\n     * @public\r\n     */\r\n    this.abort = function () {\r\n        _xhr.aborted = true;\r\n        _xhr.abort();\r\n    };\r\n};\r\n\r\nconst defaultParams = {\r\n    type: ajax.Method.Get,\r\n    async: ajax.Asynchronous,\r\n    data: null,\r\n    sender: null,\r\n    responseType: \"text\"\r\n};\r\n\r\nfunction createXMLHttp() {\r\n    var xhr = null;\r\n    if (typeof XMLHttpRequest !== undefined) {\r\n        xhr = new XMLHttpRequest;\r\n        return xhr;\r\n    } else if (window.ActiveXObject) {\r\n        var ieXMLHttpVersions = ['MSXML2.XMLHttp.5.0', 'MSXML2.XMLHttp.4.0', 'MSXML2.XMLHttp.3.0', 'MSXML2.XMLHttp', 'Microsoft.XMLHttp'];\r\n        for (var i = 0; i < ieXMLHttpVersions.length; i++) {\r\n            try {\r\n                xhr = new ActiveXObject(ieXMLHttpVersions[i]);\r\n                return xhr;\r\n            } catch (e) {\r\n                console.log('error: og.ajax.createXMLHttp creation filed.');\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Send an ajax request.\r\n * @function\r\n * @param {string} url - Url path.\r\n * @param {Object} [params] - Ajax parameters:\r\n * @param {ajax.Method|string} [params.type] - 'POST' or 'GET' ajax method. 'GET' is default.\r\n * @param {boolean} [params.async] - Asynchronous ajax flag. True is default.\r\n * @param {Object} [params.data] - Qery data.\r\n * @param {Object} [params.sender] - Sender object, that success callback binded with. ActiveXObject is default.\r\n * @param {string} [params.responseType] - Responce data type. Culd be 'text', 'json', 'jsonp', 'html'. 'text' is default.\r\n * @param {ajax.Xhr~successCallback} [params.success] - The callback that handles the success response.\r\n * @param {ajax.Xhr~errorCallback} [params.error] - The callback that handles the failed response.\r\n * @param {ajax.Xhr~abortCallback} [params.abort] - The callback that handles aborted requests.\r\n * @returns {ajax.Xhr} - Returns object that could be aborted.\r\n */\r\najax.request = function (url, params) {\r\n\r\n    params = params || {};\r\n\r\n    var p = {}, i;\r\n\r\n    for (i in defaultParams) {\r\n        p[i] = defaultParams[i];\r\n    }\r\n\r\n    for (i in params) {\r\n        p[i] = params[i];\r\n    }\r\n\r\n    p.data = params.data;\r\n\r\n    var xhr = createXMLHttp();\r\n\r\n    var customXhr = new Xhr(xhr);\r\n\r\n    var body = null, d;\r\n\r\n    if (p.type === ajax.Method.Post) {\r\n        if (p.data) {\r\n            body = \"\";\r\n            for (let key in p.data) {\r\n                d = p.data[key];\r\n                body += key + \"=\" + encodeURIComponent(d instanceof Object ? JSON.stringify(d) : d) + \"&\";\r\n            }\r\n            body = body.slice(0, -1);\r\n        }\r\n        xhr.open(p.type, url, p.async);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    } else if (p.data) {\r\n        var tail = \"?\";\r\n        for (let key in p.data) {\r\n            d = p.data[key];\r\n            tail += key + \"=\" + encodeURIComponent(d instanceof Object ? JSON.stringify(d) : d) + \"&\";\r\n        }\r\n        tail = tail.slice(0, -1);\r\n        xhr.open(p.type, url + tail, p.async);\r\n    } else {\r\n        xhr.open(p.type, url, p.async);\r\n    }\r\n\r\n    if (p.async)\r\n        xhr.responseType = p.responseType;\r\n\r\n    xhr.overrideMimeType(\"text/plain\");\r\n\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === ajax.ReadyState.Complete) {\r\n            if (xhr.status === ajax.Status.OK) {\r\n                if (params.success)\r\n                    /**\r\n                     * Success callback.\r\n                     * @callback ajax.Xhr~successCallback\r\n                     * @param {Object} Response data\r\n                     */\r\n                    params.success.call(params.sender || customXhr, xhr.response);\r\n            } else if (xhr.aborted) {\r\n                /**\r\n                 * Abort callback.\r\n                 * @callback ajax.Xhr~abortCallback\r\n                 * @param {Object} Response data\r\n                 * @param {Object} Status object\r\n                 */\r\n                params.abort && params.abort.call(params.sender || customXhr, xhr.response, xhr.status);\r\n            } else {\r\n                /**\r\n                 * Error callback.\r\n                 * @callback ajax.Xhr~errorCallback\r\n                 * @param {Object} Response data\r\n                 * @param {Object} Status object\r\n                 */\r\n                params.error && params.error.call(params.sender || customXhr, xhr.response, xhr.status);\r\n            }\r\n            delete xhr['onreadystatechange'];\r\n            xhr.onreadystatechange = null;\r\n            xhr = null;\r\n        } else {\r\n            //still loading\r\n        }\r\n    };\r\n\r\n    xhr.send(body);\r\n\r\n    return customXhr;\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/utils/colorTable.js\n\r\n\r\nconst colorTable = {\r\n    \"aliceblue\": \"#f0f8ff\", \"antiquewhite\": \"#faebd7\", \"aqua\": \"#00ffff\", \"aquamarine\": \"#7fffd4\", \"azure\": \"#f0ffff\",\r\n    \"beige\": \"#f5f5dc\", \"bisque\": \"#ffe4c4\", \"black\": \"#000000\", \"blanchedalmond\": \"#ffebcd\", \"blue\": \"#0000ff\", \"blueviolet\": \"#8a2be2\", \"brown\": \"#a52a2a\", \"burlywood\": \"#deb887\",\r\n    \"cadetblue\": \"#5f9ea0\", \"chartreuse\": \"#7fff00\", \"chocolate\": \"#d2691e\", \"coral\": \"#ff7f50\", \"cornflowerblue\": \"#6495ed\", \"cornsilk\": \"#fff8dc\", \"crimson\": \"#dc143c\", \"cyan\": \"#00ffff\",\r\n    \"darkblue\": \"#00008b\", \"darkcyan\": \"#008b8b\", \"darkgoldenrod\": \"#b8860b\", \"darkgray\": \"#a9a9a9\", \"darkgreen\": \"#006400\", \"darkkhaki\": \"#bdb76b\", \"darkmagenta\": \"#8b008b\", \"darkolivegreen\": \"#556b2f\",\r\n    \"darkorange\": \"#ff8c00\", \"darkorchid\": \"#9932cc\", \"darkred\": \"#8b0000\", \"darksalmon\": \"#e9967a\", \"darkseagreen\": \"#8fbc8f\", \"darkslateblue\": \"#483d8b\", \"darkslategray\": \"#2f4f4f\", \"darkturquoise\": \"#00ced1\",\r\n    \"darkviolet\": \"#9400d3\", \"deeppink\": \"#ff1493\", \"deepskyblue\": \"#00bfff\", \"dimgray\": \"#696969\", \"dodgerblue\": \"#1e90ff\",\r\n    \"firebrick\": \"#b22222\", \"floralwhite\": \"#fffaf0\", \"forestgreen\": \"#228b22\", \"fuchsia\": \"#ff00ff\",\r\n    \"gainsboro\": \"#dcdcdc\", \"ghostwhite\": \"#f8f8ff\", \"gold\": \"#ffd700\", \"goldenrod\": \"#daa520\", \"gray\": \"#808080\", \"green\": \"#008000\", \"greenyellow\": \"#adff2f\",\r\n    \"honeydew\": \"#f0fff0\", \"hotpink\": \"#ff69b4\",\r\n    \"indianred \": \"#cd5c5c\", \"indigo\": \"#4b0082\", \"ivory\": \"#fffff0\", \"khaki\": \"#f0e68c\",\r\n    \"lavender\": \"#e6e6fa\", \"lavenderblush\": \"#fff0f5\", \"lawngreen\": \"#7cfc00\", \"lemonchiffon\": \"#fffacd\", \"lightblue\": \"#add8e6\", \"lightcoral\": \"#f08080\", \"lightcyan\": \"#e0ffff\", \"lightgoldenrodyellow\": \"#fafad2\",\r\n    \"lightgrey\": \"#d3d3d3\", \"lightgreen\": \"#90ee90\", \"lightpink\": \"#ffb6c1\", \"lightsalmon\": \"#ffa07a\", \"lightseagreen\": \"#20b2aa\", \"lightskyblue\": \"#87cefa\", \"lightslategray\": \"#778899\", \"lightsteelblue\": \"#b0c4de\",\r\n    \"lightyellow\": \"#ffffe0\", \"lime\": \"#00ff00\", \"limegreen\": \"#32cd32\", \"linen\": \"#faf0e6\",\r\n    \"magenta\": \"#ff00ff\", \"maroon\": \"#800000\", \"mediumaquamarine\": \"#66cdaa\", \"mediumblue\": \"#0000cd\", \"mediumorchid\": \"#ba55d3\", \"mediumpurple\": \"#9370d8\", \"mediumseagreen\": \"#3cb371\", \"mediumslateblue\": \"#7b68ee\",\r\n    \"mediumspringgreen\": \"#00fa9a\", \"mediumturquoise\": \"#48d1cc\", \"mediumvioletred\": \"#c71585\", \"midnightblue\": \"#191970\", \"mintcream\": \"#f5fffa\", \"mistyrose\": \"#ffe4e1\", \"moccasin\": \"#ffe4b5\",\r\n    \"navajowhite\": \"#ffdead\", \"navy\": \"#000080\",\r\n    \"oldlace\": \"#fdf5e6\", \"olive\": \"#808000\", \"olivedrab\": \"#6b8e23\", \"orange\": \"#ffa500\", \"orangered\": \"#ff4500\", \"orchid\": \"#da70d6\",\r\n    \"palegoldenrod\": \"#eee8aa\", \"palegreen\": \"#98fb98\", \"paleturquoise\": \"#afeeee\", \"palevioletred\": \"#d87093\", \"papayawhip\": \"#ffefd5\", \"peachpuff\": \"#ffdab9\", \"peru\": \"#cd853f\", \"pink\": \"#ffc0cb\", \"plum\": \"#dda0dd\", \"powderblue\": \"#b0e0e6\", \"purple\": \"#800080\",\r\n    \"rebeccapurple\": \"#663399\", \"red\": \"#ff0000\", \"rosybrown\": \"#bc8f8f\", \"royalblue\": \"#4169e1\",\r\n    \"saddlebrown\": \"#8b4513\", \"salmon\": \"#fa8072\", \"sandybrown\": \"#f4a460\", \"seagreen\": \"#2e8b57\", \"seashell\": \"#fff5ee\", \"sienna\": \"#a0522d\", \"silver\": \"#c0c0c0\", \"skyblue\": \"#87ceeb\", \"slateblue\": \"#6a5acd\", \"slategray\": \"#708090\", \"snow\": \"#fffafa\", \"springgreen\": \"#00ff7f\", \"steelblue\": \"#4682b4\",\r\n    \"tan\": \"#d2b48c\", \"teal\": \"#008080\", \"thistle\": \"#d8bfd8\", \"tomato\": \"#ff6347\", \"turquoise\": \"#40e0d0\",\r\n    \"violet\": \"#ee82ee\",\r\n    \"wheat\": \"#f5deb3\", \"white\": \"#ffffff\", \"whitesmoke\": \"#f5f5f5\",\r\n    \"yellow\": \"#ffff00\", \"yellowgreen\": \"#9acd32\"\r\n}\n// CONCATENATED MODULE: ./src/og/math.js\n/**\r\n * @module og/math\r\n */\r\n\r\n\r\n\r\n/** @const */\r\nconst TWO_PI = 2.0 * Math.PI;\r\n\r\n/** @const */\r\nconst PI_TWO = Math.PI / 2.0;\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\nconst math_W = 3;\r\n\r\nconst MAX_FLOAT = Number.MAX_VALUE || 1.7976931348623157e+308;\r\n\r\n/** @const */\r\nconst LOG2 = Math.log(2);\r\n/** @const */\r\nconst MAX32 = 2147483647;\r\n/** @const */\r\nconst MAX = 549755748352;\r\n/** @const */\r\nconst MIN = -MAX;\r\n\r\n/** @const */\r\nconst RADIANS = Math.PI / 180.0;\r\n/** @const */\r\nconst DEGREES = 180.0 / Math.PI;\r\n\r\n/** @const */\r\nconst DEGREES_DOUBLE = 2.0 * DEGREES;\r\n/** @const */\r\nconst RADIANS_HALF = 0.5 * RADIANS;\r\n\r\n/** @const */\r\nconst ARCSECONDS_TO_RADIANS = 0.00000484813681109536;\r\n/** @const */\r\nconst RADIANS_TO_HOURS = 3.8197186342054880584532103209403;\r\n/** @const */\r\nconst HOURS_TO_RADIANS = 0.26179938779914943653855361527329;\r\n/** @const */\r\nconst HOURS_TO_DEGREES = 15.0;\r\n/** @const */\r\nconst DEGREES_TO_HOURS = 1.0 / 15.0;\r\n\r\n/** @const */\r\nconst SQRT_HALF = Math.sqrt(0.5);\r\n\r\nconst EPSILON1 = 0.1;\r\nconst EPSILON2 = 0.01;\r\nconst EPSILON3 = 0.001;\r\nconst EPSILON4 = 0.0001;\r\nconst EPSILON5 = 0.00001;\r\nconst EPSILON6 = 0.000001;\r\nconst EPSILON7 = 1e-7;\r\nconst EPSILON8 = 1e-8;\r\nconst EPSILON9 = 1e-9;\r\nconst EPSILON10 = 1e-10;\r\nconst EPSILON11 = 1e-11;\r\nconst EPSILON12 = 1e-12;\r\nconst EPSILON13 = 1e-13;\r\nconst EPSILON14 = 1e-14;\r\nconst EPSILON15 = 1e-15;\r\nconst EPSILON16 = 1e-16;\r\nconst EPSILON17 = 1e-17;\r\nconst EPSILON18 = 1e-18;\r\nconst EPSILON19 = 1e-19;\r\nconst EPSILON20 = 1e-20;\r\n\r\n/** \r\n * The log function returns the power to which the base value has to be raised to produce n.\r\n * @function\r\n * @param {number} n - Produce value.\r\n * @param {number} base - Base value.\r\n * @returns {number} -\r\n * @example\r\n * og.math.log(64, 2)\r\n * //returns 6\r\n */\r\nfunction log(n, base) {\r\n    return Math.log(n) / Math.log(base);\r\n};\r\n\r\n/**\r\n * Clamp the number.\r\n * @function\r\n * @param {number} number - Input number.\r\n * @param {number} min - Minimal edge.\r\n * @param {number} max - Maximal edge.\r\n * @returns {number} -\r\n * @example\r\n * og.math.clamp(12, 1, 5)\r\n * //returns 5\r\n */\r\nfunction clamp(number, min, max) {\r\n    return Math.max(min, Math.min(number, max));\r\n};\r\n\r\n/**\r\n * Converts degrees value to radians.\r\n * @function\r\n * @param {number} degrees - Degree value.\r\n * @returns {number} -\r\n */\r\nfunction DEG2RAD(degrees) {\r\n    return degrees * RADIANS;\r\n};\r\n\r\n/**\r\n * Converts radians value to degrees.\r\n * @function\r\n * @param {number} angle - Degree value.\r\n * @returns {number} -\r\n */\r\nfunction RAD2DEG(angle) {\r\n    return angle * DEGREES;\r\n};\r\n\r\n/**\r\n * Check the number is a power of two.\r\n * @function\r\n * @param {number} x - Input value.\r\n * @returns {boolean} -\r\n */\r\nfunction isPowerOfTwo(x) {\r\n    return (x & (x - 1)) === 0;\r\n};\r\n\r\n/**\r\n * Returns next value that is power of two.\r\n * @function\r\n * @param {number} x - Input value.\r\n * @returns {number} -\r\n */\r\nfunction nextHighestPowerOfTwo(x) {\r\n    --x;\r\n    for (var i = 1; i < 32; i <<= 1) {\r\n        x = x | x >> i;\r\n    }\r\n    return x + 1;\r\n};\r\n\r\n/**\r\n * Returns random integer number within the bounds.\r\n * @function\r\n * @param {number} min - Minimal bound.\r\n * @param {number} max - Maximal bound.\r\n * @returns {number} -\r\n */\r\nfunction randomi(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\n/**\r\n * Returns random number within the bounds.\r\n * @function\r\n * @param {number} min - Minimal bound.\r\n * @param {number} max - Maximal bound.\r\n * @returns {number} -\r\n */\r\nfunction random(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n};\r\n\r\n/**\r\n * Converts degrees value to decimal.\r\n * @function\r\n * @param {number} d - Degrees.\r\n * @param {number} m - Minutes.\r\n * @param {number} s - Seconds.\r\n * @param {boolean} [p] - Positive flag. False - default.\r\n * @returns {number} -\r\n **/\r\nfunction degToDec(d, m, s, p) {\r\n    if (p)\r\n        return d + m / 60.0 + s / 3600.0;\r\n    else\r\n        return -d - m / 60.0 - s / 3600.0;\r\n};\r\n\r\n/**\r\n * The modulo operation that also works for negative dividends.\r\n * @function\r\n * @param {number} m - The dividend.\r\n * @param {number} n - The divisor.\r\n * @returns {number} The remainder.\r\n */\r\nfunction mod(m, n) {\r\n    return ((m % n) + n) % n;\r\n};\r\n\r\n/**\r\n * Returns an angle in the range 0 <= angle <= 2Pi which is equivalent to the provided angle.\r\n * @function\r\n * @param {number} a - Angle in radians\r\n * @returns {number} -\r\n */\r\nfunction zeroTwoPI(a) {\r\n    var mod = og.math.mod(a, og.math.TWO_PI);\r\n    if (Math.abs(mod) < og.math.EPSILON14 && Math.abs(a) > og.math.EPSILON14) {\r\n        return og.math.TWO_PI;\r\n    }\r\n    return mod;\r\n};\r\n\r\n/**\r\n * Returns 0.0 if x is smaller then edge and otherwise 1.0.\r\n * @function\r\n * @param {number} edge -\r\n * @param {number} x - Value to edge.\r\n * @returns {number} -\r\n */\r\nfunction step(edge, x) {\r\n    return x < edge ? 0.0 : 1.0;\r\n};\r\n\r\n/** \r\n * The fract function returns the fractional part of x, i.e. x minus floor(x).\r\n * @function\r\n * @param {number} x - Input value.\r\n * @returns {number} -\r\n */\r\nfunction frac(x) {\r\n    return x - Math.floor(x);\r\n};\r\n\r\n/**\r\n * Returns Math.log(x) / Math.log(2)\r\n * @function\r\n * @param {number} x - Input value.\r\n * @returns {number} -\r\n */\r\nfunction log2(x) {\r\n    return Math.log(x) / og.math.LOG2;\r\n};\r\n\r\n/**\r\n * Returns two power of n.\r\n * @function\r\n * @param {number} n - Power value.\r\n * @returns {number} -\r\n */\r\nfunction exp2(n) {\r\n    return Math.pow(2, n);\r\n};\r\n\r\n/**\r\n * Returns two power of integer n.\r\n * @function\r\n * @param {number} n - Integer power value.\r\n * @returns {number} -\r\n */\r\nfunction pow2i(n) {\r\n    return 2 << (n - 1);\r\n};\r\n\r\n/**\r\n * Returns a slice of linear interpolation t * (h1 - h0)\r\n * @param {number} t - A value that linearly interpolates between the h0 parameter and the h1 parameter.\r\n * @param {number} h1 - End value.\r\n * @param {number} h0 - Start value.\r\n * @returns {number} -\r\n */\r\nfunction slice(t, h1, h0) {\r\n    return t * (h1 - h0);\r\n};\r\n\r\n/**\r\n * Performs a linear interpolation.\r\n * @function\r\n * @param {number} t - A value that linearly interpolates between the h0 parameter and the h1 parameter.\r\n * @param {number} h1 - End value.\r\n * @param {number} h0 - Start value.\r\n * @returns {number} -\r\n */\r\nfunction lerp(t, h1, h0) {\r\n    return h0 + t * (h1 - h0);\r\n};\r\n\r\n/**\r\n * Performs a 3D bezier interpolation.\r\n * @function\r\n * @param {number} t - Interpolation value.\r\n * @param {og.Vec3} p0 - First control point.\r\n * @param {og.Vec3} p1 - Second control point.\r\n * @param {og.Vec3} p2 - Third control point.\r\n * @param {og.Vec3} p3 - Fourth control point.\r\n * @returns {og.Vec3} -\r\n */\r\nfunction bezier(t, p0, p1, p2, p3) {\r\n    var u = 1 - t;\r\n    var tt = t * t;\r\n    var uu = u * u;\r\n    var uuu = uu * u;\r\n    var ttt = tt * t;\r\n\r\n    return p0.scaleTo(uuu).addA(p1.scaleTo(3 * uu * t))\r\n        .addA(p2.scaleTo(3 * u * tt)).addA(p3.scaleTo(ttt));\r\n};\r\n\r\n/**\r\n * Clamp angle value within 360.\r\n * @function\r\n * @param {number} x - Input angle.\r\n * @returns {number} -\r\n */\r\nfunction rev(x) {\r\n    return x - Math.floor(x / 360.0) * 360.0;\r\n};\r\n\r\n/**\r\n * Clamp longitude within: -180 to +180 degrees.\r\n * @function\r\n * @param {number} lon - Longitude.\r\n * @returns {number} -\r\n */\r\nfunction norm_lon(lon) {\r\n    return lon > 180 ? ((lon + 180) % 360) - 180 :\r\n        lon < -180 ? ((lon - 180) % 360) + 180 : lon;\r\n};\r\n\r\n/**\r\n * Returns an angle in the range -Pi <= angle <= Pi which is equivalent to the provided angle.\r\n * @function\r\n * @param {number} a - Angle in radians.\r\n * @returns {number} -\r\n */\r\nfunction negativePItoPI(a) {\r\n    return og.math.zeroTwoPI(a + Math.PI) - Math.PI;\r\n};\r\n\r\n/**\r\n * Solve using iteration method and a fixed number of steps.\r\n * @function\r\n * @param {equationCallback} f - Equation. Used in Euler's equation(see og.orbit) solving.\r\n * @param {number} x0 - First approximation.\r\n * @param {number} maxIter - Maximum iterations.\r\n * @returns {number} -\r\n */\r\nfunction solve_iteration_fixed(f, x0, maxIter) {\r\n    var x = 0;\r\n    var x2 = x0;\r\n    for (var i = 0; i < maxIter; i++) {\r\n        x = x2;\r\n        x2 = f(x);\r\n    }\r\n    return x2;\r\n};\r\n\r\n/**\r\n * Solve using iteration; terminate when error is below err or the maximum\r\n * number of iterations is reached. Used in Euler's equation(see og.orbit) solving.\r\n * @function\r\n * @param {equationCallback} f - Equation.\r\n * @param {number} x0 - First approximation.\r\n * @param {number} err - Maximal accepted error value.\r\n * @param {number} maxIter - Maximum iterations.\r\n * @returns {number} -\r\n */\r\nfunction solve_iteration(f, x0, err, maxIter) {\r\n    maxIter = maxIter || 50;\r\n    var x = 0;\r\n    var x2 = x0;\r\n    for (var i = 0; i < maxIter; i++) {\r\n        x = x2;\r\n        x2 = f(x);\r\n        if (Math.abs(x2 - x) < err)\r\n            return x2;\r\n    }\r\n    return x2;\r\n};\r\n\r\n/**\r\n * Equation function.\r\n * @callback equationCallback\r\n * @param {number} x - Equation variable.\r\n */\n// CONCATENATED MODULE: ./src/og/mercator.js\n/**\r\n * @module og/mercator\r\n */\r\n\r\n\r\n\r\n/**\r\n * Mercator size.\r\n * @const\r\n * @type {number}\r\n */\r\nconst POLE = 20037508.34;\r\n\r\nconst PI_BY_POLE = Math.PI / POLE;\r\n\r\nconst POLE_BY_PI = POLE / Math.PI;\r\n\r\nconst mercator_HALF_PI = Math.PI * 0.5;\r\n\r\nconst POLE_BY_180 = POLE / 180.0;\r\n\r\nconst INV_POLE_BY_180 = 180.0 / POLE;\r\n\r\nconst mercator_PI_BY_360 = Math.PI / 360.0;\r\n\r\nconst mercator_PI_BY_180 = Math.PI / 180.0;\r\n\r\nconst mercator_INV_PI_BY_180 = 180.0 / Math.PI;\r\n\r\n/**\r\n * Double mercator size.\r\n * @const\r\n * @type {number}\r\n */\r\nconst POLE_DOUBLE = 2.0 * POLE;\r\n\r\n/**\r\n * One by mercator double size.\r\n * @const\r\n * @type {number}\r\n */\r\nconst ONE_BY_POLE_DOUBLE = 1.0 / POLE_DOUBLE;\r\n\r\n/**\r\n * Converts degrees longitude to mercator coordinate.\r\n * @function\r\n * @param {number} lon - Degrees geodetic longitude.\r\n * @returns {number} -\r\n */\r\nfunction forward_lon(lon) {\r\n    return lon * POLE / 180;\r\n};\r\n\r\n/**\r\n * Converts degrees latitude to mercator coordinate.\r\n * @function\r\n * @param {number} lat - Degrees geodetic latitude.\r\n * @returns {number} -\r\n */\r\nfunction forward_lat(lat) {\r\n    return Math.log(Math.tan((90 + lat) * mercator_PI_BY_360)) * POLE_BY_PI;\r\n};\r\n\r\n/**\r\n * Converts mercator longitude to degrees coordinate.\r\n * @function\r\n * @param {number} lon - Mercator longitude.\r\n * @returns {number} -\r\n */\r\nfunction inverse_lon(lon) {\r\n    return 180 * lon / POLE;\r\n};\r\n\r\n/**\r\n * Converts mercator latitude to degrees coordinate.\r\n * @function\r\n * @param {number} lon - Mercator latitude.\r\n * @returns {number} -\r\n */\r\nfunction inverse_lat(lat) {\r\n    return mercator_INV_PI_BY_180 * (2.0 * Math.atan(Math.exp(lat * PI_BY_POLE)) - mercator_HALF_PI);\r\n};\r\n\r\n/**\r\n * Returns mercator map tile grid horizontal coordinate index by geodetic \r\n * longitude and zoom level. Where top left corner of the grid is 0 coordinate index.\r\n * @function\r\n * @param {number} lon - Geodetic degrees longitude.\r\n * @param {number} zoom - Zoom level.\r\n * @returns {number}\r\n */\r\nfunction getTileX(lon, zoom) {\r\n    return Math.floor((lon + 180) / 360.0 * Math.pow(2, zoom));\r\n};\r\n\r\n/**\r\n * Returns mercator map tile grid vertical coordinate index by geodetic \r\n * latitude and zoom level. Where top left corner of the grid is 0 coordinate index.\r\n * @function\r\n * @param {number} lat - Geodetic degrees latitude.\r\n * @param {number} zoom - Zoom level.\r\n * @returns {number}\r\n */\r\nfunction getTileY(lat, zoom) {\r\n    return Math.floor((1.0 - Math.log(Math.tan(lat * mercator_PI_BY_180) + 1.0 / Math.cos(lat * mercator_PI_BY_180)) / Math.PI) * 0.5 * Math.pow(2, zoom));\r\n};\r\n\r\n/**\r\n * Converts geodetic coordinate array to mercator coordinate array.\r\n * @function\r\n * @param {Array.<og.LonLat>} lonLatArr - LonLat array to convert.\r\n * @returns {Array.<og.LonLat>}\r\n */\r\nfunction forwardArray(lonlatArr) {\r\n    var res = [];\r\n    for (var i = 0; i < lonlatArr.length; i++) {\r\n        res.push(lonlatArr[i].forwardMercator());\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Max mercator latitude.\r\n * @const\r\n * @type {number}\r\n */\r\nconst MAX_LAT = inverse_lat(POLE);\r\n\r\n/**\r\n * Min mercator latitude.\r\n * @const\r\n * @type {number}\r\n */\r\nconst MIN_LAT = -MAX_LAT;\r\n\n// CONCATENATED MODULE: ./src/og/LonLat.js\n/**\r\n * @module og/LonLat\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LonLat_HALF_PI = Math.PI * 0.5;\r\n\r\nconst LonLat_PI_BY_180 = Math.PI / 180.0;\r\n\r\nconst LonLat_INV_PI_BY_180 = 180.0 / Math.PI;\r\n\r\nconst LonLat_INV_PI_BY_360 = LonLat_INV_PI_BY_180 * 2.0;\r\n\r\nconst LonLat_PI_BY_360 = Math.PI / 360.0;\r\n\r\nconst LonLat_INV_PI_BY_180_HALF_PI = LonLat_INV_PI_BY_180 * LonLat_HALF_PI;\r\n\r\n\r\n/**\r\n * Represents a geographical point with a certain latitude, longitude and height.\r\n * @class\r\n * @param {number} [lon] - Longitude.\r\n * @param {number} [lat] - Latitude.\r\n * @param {number} [height] - Height over the surface.\r\n */\r\nconst LonLat_LonLat = function (lon, lat, height) {\r\n\r\n    /**\r\n     * Longitude.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.lon = lon || 0;\r\n\r\n    /**\r\n     * Latitude.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.lat = lat || 0;\r\n\r\n    /**\r\n     * Height.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.height = height || 0;\r\n};\r\n\r\nLonLat_LonLat.prototype.isZero = function () {\r\n    return this.lon === 0.0 && this.lat === 0.0 && this.height === 0.0;\r\n};\r\n\r\n/**\r\n * Creates coordinates array.\r\n * @static\r\n * @param{Array.<Array<number,number,number>>} arr - Coordinates array data.\r\n * @return{Array.<og.LonLat>} the same coordinates array but each element is LonLat instance.\r\n */\r\nLonLat_LonLat.join = function (arr) {\r\n    var res = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var ai = arr[i];\r\n        res[i] = new LonLat_LonLat(ai[0], ai[1], ai[2]);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Creates an object by coordinate array.\r\n * @static\r\n * @param {Array.<number,number,number>} arr - Coordiante array, where first is longitude, second is latitude and third is a height.\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.createFromArray = function (arr) {\r\n    return new LonLat_LonLat(arr[0], arr[1], arr[2]);\r\n};\r\n\r\n/**\r\n * Converts degrees to mercator coordinates.\r\n * @static\r\n * @param {number} lon - Degrees longitude.\r\n * @param {number} lat - Degrees latitude.\r\n * @param {number} [height] - Height.\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.forwardMercator = function (lon, lat, height) {\r\n    return new LonLat_LonLat(lon * POLE_BY_180,\r\n        Math.log(Math.tan((90.0 + lat) * LonLat_PI_BY_360)) * POLE_BY_PI,\r\n        height);\r\n};\r\n\r\n/**\r\n * Converts mercator to degrees coordinates.\r\n * @static\r\n * @param {number} x - Mercator longitude.\r\n * @param {number} y - Mercator latitude.\r\n * @param {number} [height] - Height.\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.inverseMercator = function (x, y, height) {\r\n    return new LonLat_LonLat(x * INV_POLE_BY_180,\r\n        LonLat_INV_PI_BY_360 * Math.atan(Math.exp(y * PI_BY_POLE)) - LonLat_INV_PI_BY_180_HALF_PI,\r\n        height);\r\n};\r\n\r\n/**\r\n * Sets coordinates.\r\n * @public\r\n * @param {number} [lon] - Longitude.\r\n * @param {number} [lat] - Latitude.\r\n * @param {number} [height] - Height.\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.prototype.set = function (lon, lat, height) {\r\n    this.lon = lon || 0;\r\n    this.lat = lat || 0;\r\n    this.height = height || 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Copy coordinates.\r\n * @public\r\n * @param {og.LonLat} [lonLat] - Coordinates to copy.\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.prototype.copy = function (lonLat) {\r\n    this.lon = lonLat.lon;\r\n    this.lat = lonLat.lat;\r\n    this.height = lonLat.height;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Clone the coordiante.\r\n * @public\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.prototype.clone = function () {\r\n    return new LonLat_LonLat(this.lon, this.lat, this.height);\r\n};\r\n\r\n/**\r\n * Converts to mercator coordinates.\r\n * @public\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.prototype.forwardMercator = function () {\r\n    return LonLat_LonLat.forwardMercator(this.lon, this.lat, this.height);\r\n};\r\n\r\nLonLat_LonLat.prototype.forwardMercatorEPS01 = function () {\r\n    var lat = this.lat;\r\n    if (lat > 89.9) {\r\n        lat = 89.9;\r\n    } else if (lat < -89.9) {\r\n        lat = -89.9;\r\n    }\r\n    return new LonLat_LonLat(\r\n        this.lon * POLE_BY_180,\r\n        Math.log(Math.tan((90.0 + lat) * LonLat_PI_BY_360)) * POLE_BY_PI);\r\n};\r\n\r\n\r\n/**\r\n * Converts from mercator coordinates.\r\n * @public\r\n * @returns {og.LonLat} -\r\n */\r\nLonLat_LonLat.prototype.inverseMercator = function () {\r\n    return LonLat_LonLat.inverseMercator(this.lon, this.lat, this.height);\r\n};\r\n\r\n/**\r\n * Compares coordinates.\r\n * @public\r\n * @param {og.LonLat} b - Coordinate to compare with.\r\n * @returns {boolean} -\r\n */\r\nLonLat_LonLat.prototype.equal = function (b) {\r\n    if (b.height) {\r\n        return this.lon === b.lon && this.lat === b.lat && this.height === b.height;\r\n    } else {\r\n        return this.lon === b.lon && this.lat === b.lat;\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/Extent.js\n/**\r\n * @module og/Extent\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Represents geographical coordinates extent.\r\n * @class\r\n * @param {og.LonLat} [sw] - South West extent corner coordiantes.\r\n * @param {og.LonLat} [ne] - North East extent corner coordiantes.\r\n */\r\nconst Extent_Extent = function (sw, ne) {\r\n    /**\r\n     * @public\r\n     */\r\n    this.southWest = sw || new LonLat_LonLat();\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    this.northEast = ne || new LonLat_LonLat();\r\n};\r\n\r\n/**\r\n * Whole mercator extent.\r\n * @const\r\n */\r\nExtent_Extent.FULL_MERC = new Extent_Extent(LonLat_LonLat.SW_MERC, LonLat_LonLat.NE_MERC);\r\n\r\n/**\r\n * Degrees extent from north mercator limit to north pole.\r\n * @const\r\n */\r\nExtent_Extent.NORTH_POLE_DEG = new Extent_Extent(LonLat_LonLat.NW_MERC_DEG, new LonLat_LonLat(180.0, 90.0));\r\n\r\n/**\r\n * Degrees extent from south pole to south mercator limit.\r\n * @const\r\n */\r\nExtent_Extent.SOUTH_POLE_DEG = new Extent_Extent(new LonLat_LonLat(-180.0, -90.0), LonLat_LonLat.SE_MERC_DEG);\r\n\r\n/**\r\n * Creates extent instance from values in array.\r\n * @static\r\n * @param {Array.<number,number,number,number>} arr - South west and north east longitude and latidudes packed in array.\r\n * @return {og.Extent} Extent object.\r\n */\r\nExtent_Extent.createFromArray = function (arr) {\r\n    return new Extent_Extent(new LonLat_LonLat(arr[0], arr[1]), new LonLat_LonLat(arr[2], arr[3]));\r\n};\r\n\r\n/**\r\n * Creates bound extent instance by coordinate array.\r\n * @static\r\n * @param {Array.<og.LonLat>} arr - Coordinate array.\r\n * @return {og.Extent} Extent object.\r\n */\r\nExtent_Extent.createByCoordinates = function (arr) {\r\n    var lonmin = MAX, lonmax = MIN,\r\n        latmin = MAX, latmax = MIN;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var vi = arr[i];\r\n        if (vi.lon < lonmin) lonmin = vi.lon;\r\n        if (vi.lon > lonmax) lonmax = vi.lon;\r\n        if (vi.lat < latmin) latmin = vi.lat;\r\n        if (vi.lat > latmax) latmax = vi.lat;\r\n    }\r\n    return new Extent_Extent(new LonLat_LonLat(lonmin, latmin), new LonLat_LonLat(lonmax, latmax));\r\n};\r\n\r\n/**\r\n * Creates bound extent instance by coordinate array.\r\n * @static\r\n * @param {Array.<Array<number,number>>} arr - Coordinate array.\r\n * @return {og.Extent} Extent object.\r\n */\r\nExtent_Extent.createByCoordinatesArr = function (arr) {\r\n    var lonmin = MAX, lonmax = MIN,\r\n        latmin = MAX, latmax = MIN;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var vi = arr[i];\r\n        if (vi[0] < lonmin) lonmin = vi[0];\r\n        if (vi[0] > lonmax) lonmax = vi[0];\r\n        if (vi[1] < latmin) latmin = vi[1];\r\n        if (vi[1] > latmax) latmax = vi[1];\r\n    }\r\n    return new Extent_Extent(new LonLat_LonLat(lonmin, latmin), new LonLat_LonLat(lonmax, latmax));\r\n};\r\n\r\n/**\r\n * Creates extent by meractor grid tile coordinates.\r\n * @static\r\n * @param {number} x -\r\n * @param {number} y -\r\n * @param {number} z -\r\n * @param {number} width -\r\n * @param {number} height -\r\n * @returns {og.Extent} -\r\n */\r\nExtent_Extent.fromTile = function (x, y, z, width, height) {\r\n    width = width || POLE_DOUBLE;\r\n    height = height || POLE_DOUBLE;\r\n    var H = Math.pow(2, z),\r\n        W = Math.pow(2, z),\r\n        lnSize = width / W,\r\n        ltSize = height / H;\r\n\r\n    var left = -width * 0.5 + x * lnSize,\r\n        top = height * 0.5 - y * ltSize,\r\n        bottom = top - ltSize,\r\n        right = left + lnSize;\r\n\r\n    return new Extent_Extent(new LonLat_LonLat(left, bottom), new LonLat_LonLat(right, top));\r\n};\r\n\r\n/**\r\n * Sets current bounding extent object by coordinate array.\r\n * @public\r\n * @param {Array.<og.LonLat>} arr - Coordinate array.\r\n * @return {og.Extent} Current extent.\r\n */\r\nExtent_Extent.prototype.setByCoordinates = function (arr) {\r\n    var lonmin = MAX, lonmax = MIN,\r\n        latmin = MAX, latmax = MIN;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var vi = arr[i];\r\n        if (vi.lon < lonmin) lonmin = vi.lon;\r\n        if (vi.lon > lonmax) lonmax = vi.lon;\r\n        if (vi.lat < latmin) latmin = vi.lat;\r\n        if (vi.lat > latmax) latmax = vi.lat;\r\n    }\r\n    this.southWest.lon = lonmin;\r\n    this.southWest.lat = latmin;\r\n    this.northEast.lon = lonmax;\r\n    this.northEast.lat = latmax;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Determines if point inside extent.\r\n * @public\r\n * @param {LonLat} lonlat - Coordinate point.\r\n * @return {boolean} Returns true if point inside extent.\r\n */\r\nExtent_Extent.prototype.isInside = function (lonlat) {\r\n    var sw = this.southWest,\r\n        ne = this.northEast;\r\n    return lonlat.lon >= sw.lon && lonlat.lon <= ne.lon &&\r\n        lonlat.lat >= sw.lat && lonlat.lat <= ne.lat;\r\n};\r\n\r\n/**\r\n * Returns true if two extent overlap each other.\r\n * @public\r\n * @param {Extent} e - Another extent.\r\n * @return {boolean} -\r\n */\r\nExtent_Extent.prototype.overlaps = function (e) {\r\n    var sw = this.southWest,\r\n        ne = this.northEast;\r\n    return sw.lon <= e.northEast.lon && ne.lon >= e.southWest.lon &&\r\n        sw.lat <= e.northEast.lat && ne.lat >= e.southWest.lat;\r\n};\r\n\r\n/**\r\n * Gets extent width.\r\n * @public\r\n * @return {number} Extent width.\r\n */\r\nExtent_Extent.prototype.getWidth = function () {\r\n    return this.northEast.lon - this.southWest.lon;\r\n};\r\n\r\n/**\r\n * Gets extent height.\r\n * @public\r\n * @return {number} Extent height.\r\n */\r\nExtent_Extent.prototype.getHeight = function () {\r\n    return this.northEast.lat - this.southWest.lat\r\n};\r\n\r\n/**\r\n * Creates clone instance of the current extent.\r\n * @public\r\n * @return {og.Extent} Extent clone.\r\n */\r\nExtent_Extent.prototype.clone = function () {\r\n    return new Extent_Extent(this.southWest.clone(), this.northEast.clone());\r\n};\r\n\r\n/**\r\n * Gets the center coordinate of the extent.\r\n * @public\r\n * @return {number} Center coordinate.\r\n */\r\nExtent_Extent.prototype.getCenter = function () {\r\n    var sw = this.southWest, ne = this.northEast;\r\n    return new LonLat_LonLat(sw.lon + (ne.lon - sw.lon) * 0.5, sw.lat + (ne.lat - sw.lat) * 0.5);\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nExtent_Extent.prototype.getNorthWest = function () {\r\n    return new LonLat_LonLat(this.southWest.lon, this.northEast.lat);\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nExtent_Extent.prototype.getNorthEast = function () {\r\n    return new LonLat_LonLat(this.northEast.lon, this.northEast.lat);\r\n};\r\n\r\nExtent_Extent.prototype.getSouthWest = function () {\r\n    return new LonLat_LonLat(this.southWest.lon, this.southWest.lat);\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nExtent_Extent.prototype.getSouthEast = function () {\r\n    return new LonLat_LonLat(this.northEast.lon, this.southWest.lat);\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nExtent_Extent.prototype.getNorth = function () {\r\n    return this.northEast.lat;\r\n};\r\n\r\nExtent_Extent.prototype.getEast = function () {\r\n    return this.northEast.lon;\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nExtent_Extent.prototype.getWest = function () {\r\n    return this.southWest.lon;\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nExtent_Extent.prototype.getSouth = function () {\r\n    return this.southWest.lat;\r\n};\r\n\r\n/**\r\n * Returns extents are equals.\r\n * @param {og.Extent} extent - Extent.\r\n * @returns {boolean} -\r\n */\r\nExtent_Extent.prototype.equals = function (extent) {\r\n    return this.southWest.lon === extent.southWest.lon && this.southWest.lat === extent.southWest.lat &&\r\n        this.northEast.lon === extent.northEast.lon && this.northEast.lat === extent.northEast.lat;\r\n};\r\n\r\n/**\r\n * Converts extent coordinates to mercator projection coordinates.\r\n * @public\r\n * @return {og.Extent} New instance of the current extent.\r\n */\r\nExtent_Extent.prototype.forwardMercator = function () {\r\n    return new Extent_Extent(this.southWest.forwardMercator(), this.northEast.forwardMercator());\r\n};\r\n\r\n/**\r\n * Converts extent coordinates from mercator projection to degrees.\r\n * @public\r\n * @return {og.Extent} New instance of the current extent.\r\n */\r\nExtent_Extent.prototype.inverseMercator = function () {\r\n    return new Extent_Extent(this.southWest.inverseMercator(), this.northEast.inverseMercator());\r\n};\r\n\r\n/**\r\n * Gets cartesian bounding bounds of the current ellipsoid.\r\n * @public\r\n * @param {og.Ellipsoid} ellipsoid - Ellipsoid.\r\n * @return {Array.<number,number,number,number,number,number>} Cartesian 3d coordinate array.\r\n */\r\nExtent_Extent.prototype.getCartesianBounds = function (ellipsoid) {\r\n    var xmin = MAX, xmax = MIN, ymin = MAX,\r\n        ymax = MIN, zmin = MAX, zmax = MIN;\r\n\r\n    var v = [new LonLat_LonLat(this.southWest.lon, this.southWest.lat),\r\n    new LonLat_LonLat(this.southWest.lon, this.northEast.lat),\r\n    new LonLat_LonLat(this.northEast.lon, this.northEast.lat),\r\n    new LonLat_LonLat(this.northEast.lon, this.southWest.lat)];\r\n\r\n    for (var i = 0; i < v.length; i++) {\r\n        var coord = ellipsoid.lonLatToCartesian(v[i]);\r\n        var x = coord.x, y = coord.y, z = coord.z;\r\n        if (x < xmin) xmin = x;\r\n        if (x > xmax) xmax = x;\r\n        if (y < ymin) ymin = y;\r\n        if (y > ymax) ymax = y;\r\n        if (z < zmin) zmin = z;\r\n        if (z > zmax) zmax = z;\r\n    }\r\n\r\n    return [xmin, ymin, zmin, xmax, ymax, zmax];\r\n};\r\n\r\nExtent_Extent.prototype.toString = function () {\r\n    return \"[\" + this.southWest.lon + \", \" + this.southWest.lat + \", \" + this.northEast.lon + \", \" + this.northEast.lat + \"]\";\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/math/Vec4.js\n/**\r\n * @module og/math/Vec4\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents a 4d vector.\r\n * @class\r\n * @param {number} [x] - First value.\r\n * @param {number} [y] - Second value.\r\n * @param {number} [z] - Third value.\r\n * @param {number} [w] - Fourth value.\r\n */\r\nconst Vec4_Vec4 = function (x, y, z, w) {\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.x = x || 0.0;\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.y = y || 0.0;\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.z = z || 0.0;\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.w = w || 0.0;\r\n};\r\n\r\n/**\r\n * Identity vector [0,0,0,1].\r\n * @const\r\n * @type {og.math.Vec4}\r\n */\r\nVec4_Vec4.identity = new Vec4_Vec4(0, 0, 0, 1);\r\n\r\n/**\r\n * Vector 4d object creator.\r\n * @function\r\n * @param {number} [x] - First cvalue.\r\n * @param {number} [y] - Second value.\r\n * @param {number} [z] - Third value.\r\n * @param {number} [w] - Fourth value.\r\n * @returns {og.math.Vec4}\r\n */\r\nfunction Vec4_vec4(x, y, z, w) {\r\n    return new og.math.Vec4(x, y, z, w);\r\n};\r\n\r\n/**\r\n * Creates 4d vector from array.\r\n * @function\r\n * @param {Array.<number,number,number,number>}\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.fromVec = function (arr) {\r\n    return new Vec4_Vec4(arr[0], arr[1], arr[2], arr[3]);\r\n};\r\n\r\n/**\r\n * Converts to 3d vector, without fourth value.\r\n * @public\r\n * @returns {og.Vec3}\r\n */\r\nVec4_Vec4.prototype.toVec3 = function () {\r\n    return new Vec3_Vec3(this.x, this.y, this.z);\r\n};\r\n\r\n/**\r\n * Returns clone vector.\r\n * @public\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.clone = function (v) {\r\n    return new Vec4_Vec4(this.x, this.y, this.z, this.w);\r\n};\r\n\r\n/**\r\n * Compares with vector. Returns true if it equals another.\r\n * @public\r\n * @param {og.math.Vec4} p - Vector to compare.\r\n * @returns {boolean}\r\n */\r\nVec4_Vec4.prototype.equal = function (v) {\r\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\r\n};\r\n\r\n/**\r\n * Copy input vector's values.\r\n * @param {og.math.Vec4} v - Vector to copy.\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.copy = function (v) {\r\n    this.x = v.x;\r\n    this.y = v.y;\r\n    this.z = v.z;\r\n    this.w = v.w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts vector to a number array.\r\n * @public\r\n * @returns {Array.<number,number,number,number>}\r\n * @deprecated\r\n */\r\nVec4_Vec4.prototype.toVec = function () {\r\n    return [this.x, this.y, this.z, this.w];\r\n};\r\n\r\n\r\n/**\r\n * Converts vector to a number array.\r\n * @public\r\n * @returns {Array.<number,number,number,number>}\r\n */\r\nVec4_Vec4.prototype.toArray = function () {\r\n    return [this.x, this.y, this.z, this.w];\r\n};\r\n\r\n/**\r\n * Sets vector's values.\r\n * @public\r\n * @param {number} x - Value X.\r\n * @param {number} y - Value Y.\r\n * @param {number} z - Value Z.\r\n * @param {number} w - Value W.\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.set = function (x, y, z, w) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.w = w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Adds vector to the current.\r\n * @public\r\n * @param {og.math.Vec4}\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.addA = function (v) {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    this.z += v.z;\r\n    this.w += v.w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Subtract vector from the current.\r\n * @public\r\n * @param {og.math.Vec4} v - Subtract vector.\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.subA = function (v) {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    this.z -= v.z;\r\n    this.w -= v.w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Scale current vector.\r\n * @public\r\n * @param {number} scale - Scale value.\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.scale = function (scale) {\r\n    this.x *= scale;\r\n    this.y *= scale;\r\n    this.z *= scale;\r\n    this.w *= scale;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Makes vector affinity. Thereby fourh component becomes to 1.0.\r\n * @public\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.affinity = function () {\r\n    var iw = 1 / this.w;\r\n    this.x *= iw;\r\n    this.y *= iw;\r\n    this.z *= iw;\r\n    this.w = 1.0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Scale current vector to another instance.\r\n * @public\r\n * @param {number} scale - Scale value.\r\n * @returns {og.Vec3}\r\n */\r\nVec4_Vec4.prototype.scaleTo = function (scale) {\r\n    return new Vec4_Vec4(this.x * scale, this.y * scale, this.z * scale, this.w * scale);\r\n};\r\n\r\n/**\r\n * Vector's edge function that returns vector where each component is 0.0 if it's smaller then edge and otherwise 1.0.\r\n * @public\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.getStep = function (edge) {\r\n    return new Vec4_Vec4(\r\n        this.x < edge ? 0.0 : 1.0,\r\n        this.y < edge ? 0.0 : 1.0,\r\n        this.z < edge ? 0.0 : 1.0,\r\n        this.w < edge ? 0.0 : 1.0\r\n    );\r\n};\r\n\r\n/**\r\n * The vector fract function returns the vector of fractional parts of each value, i.e. x minus floor(x).\r\n * @public\r\n * @returns {og.math.Vec4}\r\n */\r\nVec4_Vec4.prototype.getFrac = function (v) {\r\n    return new Vec4_Vec4(\r\n        og.math.frac(v.x),\r\n        og.math.frac(v.y),\r\n        og.math.frac(v.z),\r\n        og.math.frac(v.w)\r\n    );\r\n};\r\n\r\n/**\r\n * Gets vectors dot production.\r\n * @public\r\n * @param {og.math.Vec4} v - Another vector.\r\n * @returns {number} - Dot product.\r\n */\r\nVec4_Vec4.prototype.dot = function (v) {\r\n    return v.x * this.x + v.y * this.y + v.z * this.z + v.w * this.w;\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/math/Mat3.js\n/**\r\n * @module og/math/Mat3\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents a 3x3 matrix.\r\n * @class\r\n */\r\nconst Mat3_Mat3 = function () {\r\n    /**\r\n     * A 3x3 matrix, indexable as a column-major order array.\r\n     * @public\r\n     * @type {Array.<number>}\r\n     */\r\n    this._m = new Array(9);\r\n};\r\n\r\n/**\r\n * Mat3 factory.\r\n * @static\r\n * @return {og.Mat3}\r\n */\r\n\r\nfunction Mat3_mat3() {\r\n    return new Mat3_Mat3();\r\n};\r\n\r\n/**\r\n * Sets column-major order array matrix.\r\n * @public\r\n * @param {Array.<number>} m - Matrix array.\r\n * @returns {og.Mat3}\r\n */\r\nMat3_Mat3.prototype.set = function (m) {\r\n    this._m[0] = m[0];\r\n    this._m[1] = m[1];\r\n    this._m[2] = m[2];\r\n    this._m[3] = m[3];\r\n    this._m[4] = m[4];\r\n    this._m[5] = m[5];\r\n    this._m[6] = m[6];\r\n    this._m[7] = m[7];\r\n    this._m[8] = m[8];\r\n    return this;\r\n};\r\n\r\n/**\r\n * Duplicates a Mat3 instance.\r\n * @public\r\n * @returns {og.Mat3}\r\n */\r\nMat3_Mat3.prototype.clone = function () {\r\n    var res = new Mat3_Mat3();\r\n    res.set(this);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Copy matrix.\r\n * @public\r\n * @param {og.Mat3} a - Matrix to copy.\r\n * @returns {og.Mat3}\r\n */\r\nMat3_Mat3.prototype.copy = function (a) {\r\n    return this.set(a._m);\r\n};\r\n\r\n/**\r\n * Creates trasposed matrix from the current.\r\n * @public\r\n * @returns {og.Mat3}\r\n */\r\nMat3_Mat3.prototype.transposeTo = function () {\r\n    var res = new Mat3_Mat3();\r\n    var m = this._m;\r\n    res._m[0] = m[0]; res._m[1] = m[3]; res._m[2] = m[6];\r\n    res._m[3] = m[1]; res._m[4] = m[4]; res._m[5] = m[7];\r\n    res._m[6] = m[2]; res._m[7] = m[5]; res._m[8] = m[8];\r\n    return res;\r\n};\r\n\r\n/**\r\n * Sets matrix to identity.\r\n * @public\r\n * @returns {og.Mat3}\r\n */\r\nMat3_Mat3.prototype.setIdentity = function () {\r\n    this._m[0] = 1; this._m[1] = 0; this._m[2] = 0;\r\n    this._m[3] = 0; this._m[4] = 1; this._m[5] = 0;\r\n    this._m[6] = 0; this._m[7] = 0; this._m[8] = 1;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Multiply to 3d vector.\r\n * @public\r\n * @params {og.Vec3} p - 3d vector.\r\n * @returns {og.Vec3}\r\n */\r\nMat3_Mat3.prototype.mulVec = function (p) {\r\n    var d = p.x, e = p.y, g = p.z;\r\n    var m = this._m;\r\n    return new Vec3_Vec3(\r\n        m[0] * d + m[3] * e + m[6] * g,\r\n        m[1] * d + m[4] * e + m[7] * g,\r\n        m[2] * d + m[5] * e + m[8] * g\r\n    );\r\n};\r\n\r\n/**\r\n * Converts to 4x4 matrix.\r\n * @public\r\n * @returns {og.Mat4}\r\n */\r\nMat3_Mat3.prototype.toMatrix4 = function () {\r\n    var res = new Mat4_Mat4();\r\n    var b = res._m;\r\n    var a = this._m;\r\n    b[0] = a[0];\r\n    b[1] = a[1];\r\n    b[2] = a[2];\r\n    b[3] = 0;\r\n    b[4] = a[3];\r\n    b[5] = a[4];\r\n    b[6] = a[5];\r\n    b[7] = 0;\r\n    b[8] = a[6];\r\n    b[9] = a[7];\r\n    b[10] = a[8];\r\n    b[11] = 0;\r\n    b[12] = 0;\r\n    b[13] = 0;\r\n    b[14] = 0;\r\n    b[15] = 1;\r\n    return res;\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/math/Mat4.js\n/**\r\n * @module og/math/Mat4\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents a 4x4 matrix.\r\n * @class\r\n */\r\nconst Mat4_Mat4 = function () {\r\n    /**\r\n     * A 4x4 matrix, indexable as a column-major order array.\r\n     * @public\r\n     * @type {Array.<number>}\r\n     */\r\n    this._m = new Array(16);\r\n\r\n    /**\r\n     * Projection frustum left value.\r\n     * @public\r\n     */\r\n    this.left;\r\n    /**\r\n     * Projection frustum right value.\r\n     * @public\r\n     */\r\n    this.right;\r\n    /**\r\n     * Projection frustum bottom value.\r\n     * @public\r\n     */\r\n    this.bottom;\r\n    /**\r\n     * Projection frustum top value.\r\n     * @public\r\n     */\r\n    this.top;\r\n    /**\r\n     * Projection frustum near value.\r\n     * @public\r\n     */\r\n    this.near;\r\n    /**\r\n     * Projection frustum far value.\r\n     * @public\r\n     */\r\n    this.far;\r\n};\r\n\r\n/**\r\n * Mat4 factory.\r\n * @static\r\n * @returns {og.Mat4}\r\n */\r\nfunction Mat4_mat4() {\r\n    return new og.Mat4();\r\n};\r\n\r\n/**\r\n * Returns identity matrix instance.\r\n * @static\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.identity = function () {\r\n    var res = new Mat4_Mat4();\r\n    res._m[0] = 1; res._m[1] = 0; res._m[2] = 0; res._m[3] = 0;\r\n    res._m[4] = 0; res._m[5] = 1; res._m[6] = 0; res._m[7] = 0;\r\n    res._m[8] = 0; res._m[9] = 0; res._m[10] = 1; res._m[11] = 0;\r\n    res._m[12] = 0; res._m[13] = 0; res._m[14] = 0; res._m[15] = 1;\r\n    return res;\r\n};\r\n\r\n/**\r\n * Sets column-major order array matrix.\r\n * @public\r\n * @param {Array.<number>} m - Matrix array.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.set = function (m) {\r\n    this._m[0] = m[0];\r\n    this._m[1] = m[1];\r\n    this._m[2] = m[2];\r\n    this._m[3] = m[3];\r\n    this._m[4] = m[4];\r\n    this._m[5] = m[5];\r\n    this._m[6] = m[6];\r\n    this._m[7] = m[7];\r\n    this._m[8] = m[8];\r\n    this._m[9] = m[9];\r\n    this._m[10] = m[10];\r\n    this._m[11] = m[11];\r\n    this._m[12] = m[12];\r\n    this._m[13] = m[13];\r\n    this._m[14] = m[14];\r\n    this._m[15] = m[15];\r\n    return this;\r\n};\r\n\r\n/**\r\n * Duplicates a Matrix3 instance.\r\n * @public\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.clone = function () {\r\n    var res = new Mat4_Mat4();\r\n    res.set(this);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Copy matrix.\r\n * @public\r\n * @param {og.Mat3} a - Matrix to copy.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.copy = function (a) {\r\n    this.set(a._m);\r\n};\r\n\r\n/**\r\n * Converts to 3x3 matrix.\r\n * @public\r\n * @returns {og.Mat3}\r\n */\r\nMat4_Mat4.prototype.toMatrix3 = function () {\r\n    var res = new Mat3_Mat3();\r\n    var a = this._m,\r\n        b = res._m;\r\n    b[0] = a[0];\r\n    b[1] = a[1];\r\n    b[2] = a[2];\r\n    b[3] = a[4];\r\n    b[4] = a[5];\r\n    b[5] = a[6];\r\n    b[6] = a[8];\r\n    b[7] = a[9];\r\n    b[8] = a[10];\r\n    return res;\r\n};\r\n\r\n/**\r\n * Multiply to 3d vector.\r\n * @public\r\n * @param {og.Vec3} p - 3d vector.\r\n * @returns {og.Vec3}\r\n */\r\nMat4_Mat4.prototype.mulVec3 = function (p) {\r\n    var d = p.x, e = p.y, g = p.z;\r\n    return new Vec3_Vec3(\r\n        this._m[0] * d + this._m[4] * e + this._m[8] * g + this._m[12],\r\n        this._m[1] * d + this._m[5] * e + this._m[9] * g + this._m[13],\r\n        this._m[2] * d + this._m[6] * e + this._m[10] * g + this._m[14]\r\n    );\r\n};\r\n\r\n/**\r\n * Multiply to 4d vector.\r\n * @public\r\n * @param {og.Vec4} p - 4d vector.\r\n * @returns {og.Vec4}\r\n */\r\nMat4_Mat4.prototype.mulVec4 = function (p) {\r\n    var d = p.x, e = p.y, g = p.z, f = p.w;\r\n    return new Vec4_Vec4(\r\n        this._m[0] * d + this._m[4] * e + this._m[8] * g + this._m[12] * f,\r\n        this._m[1] * d + this._m[5] * e + this._m[9] * g + this._m[13] * f,\r\n        this._m[2] * d + this._m[6] * e + this._m[10] * g + this._m[14] * f,\r\n        this._m[3] * d + this._m[7] * e + this._m[11] * g + this._m[15] * f\r\n    );\r\n};\r\n\r\n/**\r\n * Creates an inversed 3x3 matrix of the current.\r\n * @public\r\n * @returns {og.Mat3}\r\n */\r\nMat4_Mat4.prototype.toInverseMatrix3 = function () {\r\n    var a = this._m;\r\n    var c = a[0], d = a[1], e = a[2],\r\n        g = a[4], f = a[5], h = a[6],\r\n        i = a[8], j = a[9], k = a[10],\r\n        l = k * f - h * j,\r\n        o = -k * g + h * i,\r\n        m = j * g - f * i,\r\n        n = c * l + d * o + e * m;\r\n    if (!n)\r\n        return null;\r\n    n = 1 / n;\r\n\r\n    var res = new Mat3_Mat3();\r\n    res._m[0] = l * n;\r\n    res._m[1] = (-k * d + e * j) * n;\r\n    res._m[2] = (h * d - e * f) * n;\r\n    res._m[3] = o * n;\r\n    res._m[4] = (k * c - e * i) * n;\r\n    res._m[5] = (-h * c + e * g) * n;\r\n    res._m[6] = m * n;\r\n    res._m[7] = (-j * c + d * i) * n;\r\n    res._m[8] = (f * c - d * g) * n;\r\n    return res;\r\n};\r\n\r\n/**\r\n * Creates an inversed matrix of the current.\r\n * @public\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.inverseTo = function () {\r\n    var c = this._m[0], d = this._m[1], e = this._m[2], g = this._m[3],\r\n        f = this._m[4], h = this._m[5], i = this._m[6], j = this._m[7],\r\n        k = this._m[8], l = this._m[9], o = this._m[10], m = this._m[11],\r\n        n = this._m[12], p = this._m[13], r = this._m[14], s = this._m[15],\r\n        A = c * h - d * f,\r\n        B = c * i - e * f,\r\n        t = c * j - g * f,\r\n        u = d * i - e * h,\r\n        v = d * j - g * h,\r\n        w = e * j - g * i,\r\n        x = k * p - l * n,\r\n        y = k * r - o * n,\r\n        z = k * s - m * n,\r\n        C = l * r - o * p,\r\n        D = l * s - m * p,\r\n        E = o * s - m * r,\r\n        q = 1 / (A * E - B * D + t * C + u * z - v * y + w * x),\r\n        res = new Mat4_Mat4();\r\n\r\n    res._m[0] = (h * E - i * D + j * C) * q; res._m[1] = (-d * E + e * D - g * C) * q; res._m[2] = (p * w - r * v + s * u) * q; res._m[3] = (-l * w + o * v - m * u) * q;\r\n    res._m[4] = (-f * E + i * z - j * y) * q; res._m[5] = (c * E - e * z + g * y) * q; res._m[6] = (-n * w + r * t - s * B) * q; res._m[7] = (k * w - o * t + m * B) * q;\r\n    res._m[8] = (f * D - h * z + j * x) * q; res._m[9] = (-c * D + d * z - g * x) * q; res._m[10] = (n * v - p * t + s * A) * q; res._m[11] = (-k * v + l * t - m * A) * q;\r\n    res._m[12] = (-f * C + h * y - i * x) * q; res._m[13] = (c * C - d * y + e * x) * q; res._m[14] = (-n * u + p * B - r * A) * q; res._m[15] = (k * u - l * B + o * A) * q;\r\n    return res;\r\n};\r\n\r\n/**\r\n * Creates a trasposed matrix of the current.\r\n * @public\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.transposeTo = function () {\r\n    var res = new Mat4_Mat4();\r\n    res._m[0] = this._m[0]; res._m[1] = this._m[4]; res._m[2] = this._m[8]; res._m[3] = this._m[12];\r\n    res._m[4] = this._m[1]; res._m[5] = this._m[5]; res._m[6] = this._m[9]; res._m[7] = this._m[13];\r\n    res._m[8] = this._m[2]; res._m[9] = this._m[6]; res._m[10] = this._m[10]; res._m[11] = this._m[14];\r\n    res._m[12] = this._m[3]; res._m[13] = this._m[7]; res._m[14] = this._m[11]; res._m[15] = this._m[15];\r\n    return res;\r\n};\r\n\r\n/**\r\n * Sets matrix to identity.\r\n * @public\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.setIdentity = function () {\r\n    this._m[0] = 1; this._m[1] = 0; this._m[2] = 0; this._m[3] = 0;\r\n    this._m[4] = 0; this._m[5] = 1; this._m[6] = 0; this._m[7] = 0;\r\n    this._m[8] = 0; this._m[9] = 0; this._m[10] = 1; this._m[11] = 0;\r\n    this._m[12] = 0; this._m[13] = 0; this._m[14] = 0; this._m[15] = 1;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Computes the product of two matrices.\r\n * @public\r\n * @param {og.Mat4} mx - Matrix to multiply.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.mul = function (mx) {\r\n    let d = this._m[0], e = this._m[1], g = this._m[2], f = this._m[3],\r\n        h = this._m[4], i = this._m[5], j = this._m[6], k = this._m[7],\r\n        l = this._m[8], o = this._m[9], m = this._m[10], n = this._m[11],\r\n        p = this._m[12], r = this._m[13], s = this._m[14], a = this._m[15];\r\n\r\n    let A = mx._m[0], B = mx._m[1], t = mx._m[2], u = mx._m[3],\r\n        v = mx._m[4], w = mx._m[5], x = mx._m[6], y = mx._m[7],\r\n        z = mx._m[8], C = mx._m[9], D = mx._m[10], E = mx._m[11],\r\n        q = mx._m[12], F = mx._m[13], G = mx._m[14], b = mx._m[15];\r\n\r\n    var res = new Mat4_Mat4();\r\n    res._m[0] = A * d + B * h + t * l + u * p; res._m[1] = A * e + B * i + t * o + u * r; res._m[2] = A * g + B * j + t * m + u * s; res._m[3] = A * f + B * k + t * n + u * a;\r\n    res._m[4] = v * d + w * h + x * l + y * p; res._m[5] = v * e + w * i + x * o + y * r; res._m[6] = v * g + w * j + x * m + y * s; res._m[7] = v * f + w * k + x * n + y * a;\r\n    res._m[8] = z * d + C * h + D * l + E * p; res._m[9] = z * e + C * i + D * o + E * r; res._m[10] = z * g + C * j + D * m + E * s; res._m[11] = z * f + C * k + D * n + E * a;\r\n    res._m[12] = q * d + F * h + G * l + b * p; res._m[13] = q * e + F * i + G * o + b * r; res._m[14] = q * g + F * j + G * m + b * s; res._m[15] = q * f + F * k + G * n + b * a;\r\n    return res;\r\n};\r\n\r\n/**\r\n * Add translation vector to the current matrix.\r\n * @public\r\n * @param {og.Vec3} v - Translate vector.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.translate = function (v) {\r\n    var d = v.x, e = v.y, b = v.z;\r\n    var a = this._m;\r\n    a[12] = a[0] * d + a[4] * e + a[8] * b + a[12];\r\n    a[13] = a[1] * d + a[5] * e + a[9] * b + a[13];\r\n    a[14] = a[2] * d + a[6] * e + a[10] * b + a[14];\r\n    a[15] = a[3] * d + a[7] * e + a[11] * b + a[15];\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets translation matrix to the position.\r\n * @public\r\n * @param {og.Vec3} v - Translate to position.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.translateToPosition = function (v) {\r\n    var a = this._m;\r\n    a[12] = v.x;\r\n    a[13] = v.y;\r\n    a[14] = v.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Rotate currrent matrix around the aligned axis and angle.\r\n * @public\r\n * @param {og.Vec3} u - Aligned axis.\r\n * @param {number} angle - Aligned axis angle in radians.\r\n * @returns {og.Mat4}\r\n * @todo: OPTIMIZE: reveal multiplication\r\n */\r\nMat4_Mat4.prototype.rotate = function (u, angle) {\r\n    var c = Math.cos(angle),\r\n        s = Math.sin(angle);\r\n    var rot = new Mat4_Mat4();\r\n    var mx = rot._m;\r\n    mx[0] = c + (1 - c) * u.x * u.x; mx[1] = (1 - c) * u.y * u.x - s * u.z; mx[2] = (1 - c) * u.z * u.x + s * u.y; mx[3] = 0;\r\n    mx[4] = (1 - c) * u.x * u.y + s * u.z; mx[5] = c + (1 - c) * u.y * u.y; mx[6] = (1 - c) * u.z * u.y - s * u.x; mx[7] = 0;\r\n    mx[8] = (1 - c) * u.x * u.z - s * u.y; mx[9] = (1 - c) * u.y * u.z + s * u.x; mx[10] = c + (1 - c) * u.z * u.z; mx[11] = 0;\r\n    mx[12] = 0; mx[13] = 0; mx[14] = 0; mx[15] = 1;\r\n    return this.mul(rot);\r\n};\r\n\r\n/**\r\n * Sets current rotation matrix around the aligned axis and angle.\r\n * @public\r\n * @param {og.Vec3} u - Aligned axis.\r\n * @param {number} angle - Aligned axis angle in radians.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.setRotation = function (u, angle) {\r\n    var c = Math.cos(angle),\r\n        s = Math.sin(angle);\r\n    var mx = this._m;\r\n    mx[0] = c + (1 - c) * u.x * u.x; mx[1] = (1 - c) * u.y * u.x - s * u.z; mx[2] = (1 - c) * u.z * u.x + s * u.y; mx[3] = 0;\r\n    mx[4] = (1 - c) * u.x * u.y + s * u.z; mx[5] = c + (1 - c) * u.y * u.y; mx[6] = (1 - c) * u.z * u.y - s * u.x; mx[7] = 0;\r\n    mx[8] = (1 - c) * u.x * u.z - s * u.y; mx[9] = (1 - c) * u.y * u.z + s * u.x; mx[10] = c + (1 - c) * u.z * u.z; mx[11] = 0;\r\n    mx[12] = 0; mx[13] = 0; mx[14] = 0; mx[15] = 1;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the rotation matrix from one vector to another.\r\n * @public\r\n * @param {og.Vec3} a - Firtst vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.rotateBetweenVectors = function (a, b) {\r\n    var q = Quat_Quat.getRotationBetweenVectors(a, b);\r\n    return q.getMat4();\r\n};\r\n\r\n/**\r\n * Scale current matrix to the vector values.\r\n * @public\r\n * @param {og.Vec3} v - Scale vector.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.scale = function (v) {\r\n    var mx = this._m;\r\n    mx[0] = mx[0] * v.x; mx[1] = mx[1] * v.x; mx[2] = mx[2] * v.x; mx[3] = mx[3] * v.x;\r\n    mx[4] = mx[4] * v.y; mx[5] = mx[5] * v.y; mx[6] = mx[6] * v.y; mx[7] = mx[7] * v.y;\r\n    mx[8] = mx[8] * v.z; mx[9] = mx[9] * v.z; mx[10] = mx[10] * v.z; mx[11] = mx[11] * v.z;\r\n    mx[12] = mx[12]; mx[13] = mx[13]; mx[14] = mx[14]; mx[15] = mx[15];\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets perspective projection matrix frustum values.\r\n * @public\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} bottom\r\n * @param {number} top\r\n * @param {number} near\r\n * @param {number} far\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.setFrustum = function (left, right, bottom, top, near, far) {\r\n\r\n    this.left = left;\r\n    this.right = right;\r\n    this.bottom = bottom;\r\n    this.top = top;\r\n    this.near = near;\r\n    this.far = far;\r\n\r\n    var h = right - left, i = top - bottom, j = far - near;\r\n    this._m[0] = near * 2 / h;\r\n    this._m[1] = 0;\r\n    this._m[2] = 0;\r\n    this._m[3] = 0;\r\n    this._m[4] = 0;\r\n    this._m[5] = near * 2 / i;\r\n    this._m[6] = 0;\r\n    this._m[7] = 0;\r\n    this._m[8] = (right + left) / h;\r\n    this._m[9] = (top + bottom) / i;\r\n    this._m[10] = -(far + near) / j;\r\n    this._m[11] = -1;\r\n    this._m[12] = 0;\r\n    this._m[13] = 0;\r\n    this._m[14] = -(far * near * 2) / j;\r\n    this._m[15] = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Creates current percpective projection matrix.\r\n * @public\r\n * @param {number} angle - View angle in degrees.\r\n * @param {number} aspect - Screen aspect ratio.\r\n * @param {number} near - Near clip plane.\r\n * @param {number} far - Far clip plane.\r\n * @retuns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.setPerspective = function (angle, aspect, near, far) {\r\n    angle = near * Math.tan(angle * Math.PI / 360);\r\n    aspect = angle * aspect;\r\n    return this.setFrustum(-aspect, aspect, -angle, angle, near, far)\r\n};\r\n\r\n/**\r\n * Creates current orthographic projection matrix.\r\n * @public\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} bottom\r\n * @param {number} top\r\n * @param {number} near\r\n * @param {number} far\r\n * @retuns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.setOrtho = function (left, right, bottom, top, near, far) {\r\n    this.left = left;\r\n    this.right = right;\r\n    this.bottom = bottom;\r\n    this.top = top;\r\n    this.near = near;\r\n    this.far = far;\r\n\r\n    var lr = 1.0 / (left - right),\r\n        bt = 1.0 / (bottom - top),\r\n        nf = 1.0 / (near - far),\r\n        m = this._m;\r\n\r\n    m[0] = -2.0 * lr;\r\n    m[1] = 0;\r\n    m[2] = 0;\r\n    m[3] = 0;\r\n    m[4] = 0;\r\n    m[5] = -2.0 * bt;\r\n    m[6] = 0;\r\n    m[7] = 0;\r\n    m[8] = 0;\r\n    m[9] = 0;\r\n    m[10] = 2.0 * nf;\r\n    m[11] = 0;\r\n    m[12] = (left + right) * lr;\r\n    m[13] = (top + bottom) * bt;\r\n    m[14] = (far + near) * nf;\r\n    m[15] = 1.0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets current rotation matrix by euler's angles.\r\n * @public\r\n * @param {number} ax - Rotation angle in radians arond X axis.\r\n * @param {number} ay - Rotation angle in radians arond Y axis.\r\n * @param {number} az - Rotation angle in radians arond Z axis.\r\n * @returns {og.Mat4}\r\n */\r\nMat4_Mat4.prototype.eulerToMatrix = function (ax, ay, az) {\r\n    var a = Math.cos(ax),\r\n        b = Math.sin(ax),\r\n        c = Math.cos(ay),\r\n        d = Math.sin(ay),\r\n        e = Math.cos(az),\r\n        f = Math.sin(az);\r\n\r\n    var ad = a * d,\r\n        bd = b * d;\r\n\r\n    var mat = this._m;\r\n\r\n    mat[0] = c * e;\r\n    mat[1] = -c * f;\r\n    mat[2] = -d;\r\n    mat[4] = -bd * e + a * f;\r\n    mat[5] = bd * f + a * e;\r\n    mat[6] = -b * c;\r\n    mat[8] = ad * e + b * f;\r\n    mat[9] = -ad * f + b * e;\r\n    mat[10] = a * c;\r\n    mat[3] = mat[7] = mat[11] = mat[12] = mat[13] = mat[14] = 0;\r\n    mat[15] = 1;\r\n\r\n    return this;\r\n};\r\n\r\nMat4_Mat4.prototype.getEulerAngles = function () {\r\n    //TODO\r\n};\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/og/math/Quat.js\n/**\r\n * @module og/math/Quat\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A set of 4-dimensional coordinates used to represent rotation in 3-dimensional space.\r\n * @constructor\r\n * @param {Number} [x=0.0] The X component.\r\n * @param {Number} [y=0.0] The Y component.\r\n * @param {Number} [z=0.0] The Z component.\r\n * @param {Number} [w=0.0] The W component.\r\n */\r\nconst Quat_Quat = function (x, y, z, w) {\r\n\r\n    /**\r\n     * The X component.\r\n     * @public\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.x = x || 0.0;\r\n\r\n    /**\r\n     * The Y component.\r\n     * @public\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.y = y || 0.0;\r\n\r\n    /**\r\n     * The Z component.\r\n     * @public\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.z = z || 0.0;\r\n\r\n    /**\r\n     * The W component.\r\n     * @public\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.w = w || 0.0;\r\n};\r\n\r\n/**\r\n * Creates Quat instance.\r\n * @function\r\n * @param {Number} [x=0.0] The X component.\r\n * @param {Number} [y=0.0] The Y component.\r\n * @param {Number} [z=0.0] The Z component.\r\n * @param {Number} [w=0.0] The W component.\r\n * @returns {og.Quat}\r\n */\r\nfunction Quat_quat(x, y, z, w) {\r\n    return new Quat_Quat(x, y, z, w);\r\n};\r\n\r\n/**\r\n * Identity Quat.\r\n * @const\r\n * @type {og.Quat}\r\n */\r\nQuat_Quat.IDENTITY = new Quat_Quat(0.0, 0.0, 0.0, 1.0);\r\n\r\n/**\r\n * Returns a Quat represents rotation around X axis.\r\n * @static\r\n * @param {number} a - The angle in radians to rotate around the axis.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.xRotation = function (a) {\r\n    a *= 0.5;\r\n    return new Quat_Quat(Math.sin(a), 0.0, 0.0, Math.cos(a));\r\n};\r\n\r\n/**\r\n * Returns a Quat represents rotation around Y axis.\r\n * @static\r\n * @param {number} a - The angle in radians to rotate around the axis.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.yRotation = function (a) {\r\n    a *= 0.5;\r\n    return new Quat_Quat(0.0, Math.sin(a), 0.0, Math.cos(a));\r\n};\r\n\r\n/**\r\n * Returns a Quat represents rotation around Z axis.\r\n * @static\r\n * @param {number} a - The angle in radians to rotate around the axis.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.zRotation = function (a) {\r\n    a *= 0.5;\r\n    return new Quat_Quat(0.0, 0.0, Math.sin(a), Math.cos(a));\r\n};\r\n\r\n/**\r\n * Computes a Quat representing a rotation around an axis.\r\n * @static\r\n * @param {og.Vec3} axis - The axis of rotation.\r\n * @param {number} angle The angle in radians to rotate around the axis.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.axisAngleToQuat = function (axis, angle) {\r\n    var res = new Quat_Quat();\r\n    var v = axis.normal();\r\n    var half_angle = angle * 0.5;\r\n    var sin_a = Math.sin(half_angle);\r\n    res.set(v.x * sin_a, v.y * sin_a, v.z * sin_a, Math.cos(half_angle));\r\n    return res;\r\n};\r\n\r\n/**\r\n * Computes a rotation from the given heading and up vector.\r\n * @static\r\n * @param {og.Vec3} target - Heading target coordinates.\r\n * @param {og.Vec3} up - Up vector.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.getLookAtTargetUp = function (target, up) {\r\n    var forward = target.normal();\r\n    forward = Vec3_Vec3.OrthoNormalize(up, forward); // Keeps up the same, make forward orthogonal to up\r\n    var right = up.cross(forward);\r\n    var ret = new Quat_Quat();\r\n    ret.w = Math.sqrt(1.0 + right.x + up.y + forward.z) * 0.5;\r\n    var w4_recip = 1.0 / (4.0 * ret.w);\r\n    ret.x = (forward.y - up.z) * w4_recip;\r\n    ret.y = (right.z - forward.x) * w4_recip;\r\n    ret.z = (up.x - right.y) * w4_recip;\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Computes a Quat from from source point heading to the destination point.\r\n * @static\r\n * @param {og.Vec3} sourcePoint - Source coordinate.\r\n * @param {og.Vec3} destPoint - Destination coordinate.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.getLookAtSourceDest = function (sourcePoint, destPoint) {\r\n    var forwardVector = destPoint.subA(sourcePoint).normalize();\r\n    var dot = Vec3_Vec3.FORWARD.dot(forwardVector);\r\n    if (Math.abs(dot - (-1.0)) < 0.000001) {\r\n        return Quat_Quat.axisAngleToQuat(Vec3_Vec3.UP, Math.PI);\r\n    }\r\n    if (Math.abs(dot - (1.0)) < 0.000001) {\r\n        return new Quat_Quat(0, 0, 0, 1);\r\n    }\r\n    var rotAngle = Math.acos(dot);\r\n    var rotAxis = Vec3_Vec3.FORWARD.cross(forwardVector).normalize();\r\n    return Quat_Quat.axisAngleToQuat(rotAxis, rotAngle);\r\n};\r\n\r\n/**\r\n * Compute rotation between two vectors.\r\n * @static\r\n * @param {og.Vec3} u - First vector.\r\n * @param {og.Vec3} v - Second vector.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.getRotationBetweenVectors = function (u, v) {\r\n    var w = u.cross(v);\r\n    var q = new Quat_Quat(w.x, w.y, w.z, 1.0 + u.dot(v));\r\n    return q.normalize();\r\n};\r\n\r\n/**\r\n * Compute rotation between two vectors with around vector up for exactly opposite vectors. If vectors exaclty in the same direction than returns identity Quat.\r\n * @static\r\n * @param {og.Vec3} source - First vector.\r\n * @param {og.Vec3} dest - Second vector.\r\n * @param {og.Vec3} up - Up vector.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.getRotationBetweenVectorsUp = function (source, dest, up) {\r\n    var dot = source.dot(dest);\r\n    if (Math.abs(dot + 1.0) < 0.000001) {\r\n        // vector source and dest point exactly in the opposite direction, \r\n        // so it is a 180 degrees turn around the up-axis\r\n        return Quat_Quat.axisAngleToQuat(up, Math.PI);\r\n    }\r\n    if (Math.abs(dot - 1.0) < 0.000001) {\r\n        // vector source and dest point exactly in the same direction\r\n        // so we return the identity Quat\r\n        return new Quat_Quat(0, 0, 0, 1);\r\n    }\r\n    var rotAngle = Math.acos(dot);\r\n    var rotAxis = source.cross(dest).normalize();\r\n    return Quat_Quat.axisAngleToQuat(rotAxis, rotAngle);\r\n};\r\n\r\n/**\r\n * Clear Quat. Sets zeroes.\r\n * @public\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.clear = function () {\r\n    this.x = this.y = this.z = this.w = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets Quat values.\r\n * @public\r\n * @param {Number} [x=0.0] The X component.\r\n * @param {Number} [y=0.0] The Y component.\r\n * @param {Number} [z=0.0] The Z component.\r\n * @param {Number} [w=0.0] The W component.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.set = function (x, y, z, w) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.w = w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Copy Quat values.\r\n * @public\r\n * @param {og.Quat} q - Copy Quat.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.copy = function (q) {\r\n    this.x = q.x;\r\n    this.y = q.y;\r\n    this.z = q.z;\r\n    this.w = q.w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set current Quat instance to identity Quat.\r\n * @public\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.setIdentity = function () {\r\n    this.x = 0.0;\r\n    this.y = 0.0;\r\n    this.z = 0.0;\r\n    this.w = 1.0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Duplicates a Quat instance.\r\n * @public\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.clone = function () {\r\n    return new Quat_Quat(this.x, this.y, this.z, this.w);\r\n};\r\n\r\n/**\r\n * Computes the componentwise sum of two Quats.\r\n * @public\r\n * @param {og.Quat} q - Quat to add.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.add = function (q) {\r\n    return new Quat_Quat(this.x + q.x, this.y + q.y, this.z + q.z, this.w + q.w);\r\n};\r\n\r\n/**\r\n * Computes the componentwise difference of two Quats.\r\n * @public\r\n * @param {og.Quat} q - Quat to subtract.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.sub = function (q) {\r\n    return new Quat_Quat(this.x - q.x, this.y - q.y, this.z - q.z, this.w - q.w);\r\n};\r\n\r\n/**\r\n * Multiplies the provided Quat componentwise by the provided scalar.\r\n * @public\r\n * @param {Number} scale - The scalar to multiply with.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.scaleTo = function (scale) {\r\n    return new Quat_Quat(this.x * scale, this.y * scale, this.z * scale, this.w * scale);\r\n};\r\n\r\n/**\r\n * Converts Quat values to array.\r\n * @public\r\n * @returns {Array.<number,number,number,number>}\r\n */\r\nQuat_Quat.prototype.toVec = function () {\r\n    return [this.x, this.y, this.z, this.w];\r\n};\r\n\r\n/**\r\n * Sets current cuaternion by spherical coordinates.\r\n * @public\r\n * @param {number} lat - Latitude.\r\n * @param {number} lon - Longitude.\r\n * @param {number} angle - Angle in radians.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.setFromSphericalCoords = function (lat, lon, angle) {\r\n    var sin_a = Math.sin(angle / 2);\r\n    var cos_a = Math.cos(angle / 2);\r\n    var sin_lat = Math.sin(lat);\r\n    var cos_lat = Math.cos(lat);\r\n    var sin_long = Math.sin(lon);\r\n    var cos_long = Math.cos(lon);\r\n    this.x = sin_a * cos_lat * sin_long;\r\n    this.y = sin_a * sin_lat;\r\n    this.z = sin_a * sin_lat * cos_long;\r\n    this.w = cos_a;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets spherical coordinates.\r\n * @public\r\n * @returns {Object} Returns object with latitude, longitude and alpha. \r\n */\r\nQuat_Quat.prototype.toSphericalCoords = function () {\r\n    var cos_a = this.w;\r\n    var sin_a = Math.sqrt(1.0 - cos_a * cos_a);\r\n    var angle = Math.acos(cos_a) * 2;\r\n    if (Math.abs(sin_a) < 0.0005)\r\n        sin_a = 1;\r\n    var tx = this.x / sin_a;\r\n    var ty = this.y / sin_a;\r\n    var tz = this.z / sin_a;\r\n\r\n    var lon, lat = -Math.asin(ty);\r\n    if (tx * tx + tz * tz < 0.0005)\r\n        lon = 0;\r\n    else\r\n        lon = Math.atan2(tx, tz);\r\n    if (lon < 0)\r\n        lon += 360.0;\r\n\r\n    return { lat: lat, lon: lon, alpha: Math.acos(cos_a) };\r\n};\r\n\r\n/**\r\n * Sets current Quat representing a rotation around an axis.\r\n * @public\r\n * @param {og.Vec3} axis - The axis of rotation.\r\n * @param {number} angle The angle in radians to rotate around the axis.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.setFromAxisAngle = function (axis, angle) {\r\n    var v = axis.normal();\r\n    var half_angle = angle * 0.5;\r\n    var sin_a = Math.sin(half_angle);\r\n    this.set(v.x * sin_a, v.y * sin_a, v.z * sin_a, Math.cos(half_angle));\r\n    return this;\r\n};\r\n\r\n/**\r\n * Returns axis and angle of the current Quat.\r\n * @public\r\n * @returns {Object}\r\n */\r\nQuat_Quat.prototype.getAxisAngle = function () {\r\n    var vl = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    var axis, angle;\r\n    if (vl > 0.0000001) {\r\n        var ivl = 1.0 / vl;\r\n        axis = new Vec3_Vec3(x * ivl, y * ivl, z * ivl);\r\n        if (this.w < 0)\r\n            angle = 2.0 * Math.atan2(-vl, -w); //-PI,0 \r\n        else\r\n            angle = 2.0 * Math.atan2(vl, w); //0,PI \r\n    } else {\r\n        axis = new Vec3_Vec3(0, 0, 0);\r\n        angle = 0;\r\n    }\r\n    return { axis: axis, angle: angle };\r\n};\r\n\r\n/**\r\n * Sets current Quat by Euler's angles.\r\n * @public\r\n * @param {number} pitch - Pitch angle in degrees.\r\n * @param {number} yaw - Yaw angle in degrees.\r\n * @param {number} roll - Roll angle in degrees.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.setFromEulerAngles = function (pitch, yaw, roll) {\r\n    var ex, ey, ez;\r\n    var cr, cp, cy, sr, sp, sy, cpcy, spsy;\r\n\r\n    ex = pitch * RADIANS / 2.0;\r\n    ey = yaw * RADIANS / 2.0;\r\n    ez = roll * RADIANS / 2.0;\r\n\r\n    cr = Math.cos(ex);\r\n    cp = Math.cos(ey);\r\n    cy = Math.cos(ez);\r\n\r\n    sr = Math.sin(ex);\r\n    sp = Math.sin(ey);\r\n    sy = Math.sin(ez);\r\n\r\n    cpcy = cp * cy;\r\n    spsy = sp * sy;\r\n\r\n    this.w = cr * cpcy + sr * spsy;\r\n    this.x = sr * cpcy - cr * spsy;\r\n    this.y = cr * sp * cy + sr * cp * sy;\r\n    this.z = cr * cp * sy - sr * sp * cy;\r\n\r\n    return this.normalize();\r\n};\r\n\r\n/**\r\n * Returns Euler's angles of the current Quat.\r\n * @public\r\n * @returns {Object}\r\n */\r\nQuat_Quat.prototype.getEulerAngles = function () {\r\n    var matrix = this.getMat4();\r\n    return matrix.getEulerAngles();\r\n};\r\n\r\n/**\r\n * Computes a Quat from the provided 4x4 matrix instance.\r\n * @public\r\n * @param {og.Mat4} m - The rotation matrix.\r\n */\r\nQuat_Quat.prototype.setFromMatrix4 = function (m) {\r\n    var tr, s, q = [];\r\n    var i, j, k;\r\n    m = m._m;\r\n\r\n    var nxt = [1, 2, 0];\r\n\r\n    tr = m[0] + m[5] + m[10];\r\n\r\n    if (tr > 0.0) {\r\n        s = Math.sqrt(tr + 1.0);\r\n        this.w = s / 2.0;\r\n        s = 0.5 / s;\r\n        this.x = (m[6] - m[9]) * s;\r\n        this.y = (m[8] - m[2]) * s;\r\n        this.z = (m[1] - m[4]) * s;\r\n    } else {\r\n        i = 0;\r\n        if (m[5] > m[0]) i = 1;\r\n        if (m[10] > m[i * 5]) i = 2;\r\n        j = nxt[i];\r\n        k = nxt[j];\r\n\r\n        s = Math.sqrt((m[i * 5] - (m[j * 5] + m[k * 5])) + 1.0);\r\n\r\n        q[i] = s * 0.5;\r\n\r\n        if (s != 0.0) s = 0.5 / s;\r\n\r\n        q[3] = (m[j * 4 + k] - m[k * 4 + j]) * s;\r\n        q[j] = (m[i * 4 + j] + m[j * 4 + i]) * s;\r\n        q[k] = (m[i * 4 + k] + m[k * 4 + i]) * s;\r\n\r\n        this.x = q[0];\r\n        this.y = q[1];\r\n        this.z = q[2];\r\n        this.w = q[3];\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts current Quat to the rotation matrix.\r\n * @public\r\n * @returns {og.Mat4}\r\n */\r\nQuat_Quat.prototype.getMat4 = function () {\r\n    var m = new Mat4_Mat4();\r\n    var mx = m._m;\r\n    var c = this.x, d = this.y, e = this.z, g = this.w, f = c + c, h = d + d, i = e + e, j = c * f, k = c * h;\r\n    c = c * i;\r\n    var l = d * h;\r\n    d = d * i;\r\n    e = e * i;\r\n    f = g * f;\r\n    h = g * h;\r\n    g = g * i;\r\n    mx[0] = 1 - (l + e); mx[1] = k - g; mx[2] = c + h; mx[3] = 0;\r\n    mx[4] = k + g; mx[5] = 1 - (j + e); mx[6] = d - f; mx[7] = 0;\r\n    mx[8] = c - h; mx[9] = d + f; mx[10] = 1 - (j + l); mx[11] = 0;\r\n    mx[12] = 0; mx[13] = 0; mx[14] = 0; mx[15] = 1;\r\n    return m;\r\n};\r\n\r\n/**\r\n * Returns quatrenion and vector production.\r\n * @public\r\n * @param {og.Vec3} v - 3d Vector.\r\n * @returns {og.Vec3}\r\n */\r\nQuat_Quat.prototype.mulVec3 = function (v) {\r\n    var d = v.x, e = v.y, g = v.z;\r\n    var b = this.x, f = this.y, h = this.z, a = this.w;\r\n    var i = a * d + f * g - h * e,\r\n        j = a * e + h * d - b * g,\r\n        k = a * g + b * e - f * d;\r\n    d = -b * d - f * e - h * g;\r\n    return new Vec3_Vec3(\r\n        i * a + d * -b + j * -h - k * -f,\r\n        j * a + d * -f + k * -b - i * -h,\r\n        k * a + d * -h + i * -f - j * -b);\r\n};\r\n\r\n/**\r\n * Computes the product of two Quats.\r\n * @public\r\n * @param {og.Quat} q - Quat to multiply.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.mul = function (q) {\r\n    var d = this.x, e = this.y, g = this.z, a = this.w;\r\n    var f = q.x, h = q.y, i = q.z, b = q.w;\r\n    return new Quat_Quat(\r\n        d * b + a * f + e * i - g * h,\r\n        e * b + a * h + g * f - d * i,\r\n        g * b + a * i + d * h - e * f,\r\n        a * b - d * f - e * h - g * i);\r\n};\r\n\r\n/**\r\n * Gets the conjugate of the Quat.\r\n * @public\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.conjugate = function () {\r\n    return new Quat_Quat(-this.x, -this.y, -this.z, this.w);\r\n};\r\n\r\n/** \r\n * Computes the inverse of the Quat.\r\n * @public\r\n * @retuns {og.Quat}\r\n */\r\nQuat_Quat.prototype.inverse = function () {\r\n    var n = 1 / this.magnitude2();\r\n    return new Quat_Quat(-this.x * n, -this.y * n, -this.z * n, this.w * n);\r\n};\r\n\r\n/**\r\n * Computes a magnitude of the Quat.\r\n * @public\r\n * @returns {number}\r\n */\r\nQuat_Quat.prototype.magnitude = function () {\r\n    var b = this.x, c = this.y, d = this.z, a = this.w;\r\n    return Math.sqrt(b * b + c * c + d * d + a * a);\r\n};\r\n\r\n/**\r\n * Computes a squared magnitude of the Quat.\r\n * @public\r\n * @returns {number}\r\n */\r\nQuat_Quat.prototype.magnitude2 = function () {\r\n    var b = this.x, c = this.y, d = this.z, a = this.w;\r\n    return b * b + c * c + d * d + a * a;\r\n};\r\n\r\n/**\r\n * Computes the dot (scalar) product of two Quats.\r\n * @public\r\n * @param {og.Quat} q - Second quatrnion.\r\n * @returns {number}\r\n */\r\nQuat_Quat.prototype.dot = function (q) {\r\n    return this.x * q.x + this.y * q.y + this.z * q.z;\r\n};\r\n\r\n/**\r\n * Current Quat normalization.\r\n * @public\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.normalize = function () {\r\n    var c = this.x, d = this.y, e = this.z, g = this.w,\r\n        f = Math.sqrt(c * c + d * d + e * e + g * g);\r\n    if (f == 0) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n        return this;\r\n    }\r\n    f = 1 / f;\r\n    this.x = c * f;\r\n    this.y = d * f;\r\n    this.z = e * f;\r\n    this.w = g * f;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Compares two Quats.\r\n * @public\r\n * @param {og.Quat} q - Second quatrnion.\r\n * @returns {boolean}\r\n */\r\nQuat_Quat.prototype.isEqual = function (q) {\r\n    var matching = this.dot(q);\r\n    if (Math.abs(matching - 1.0) < 0.001) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two Quats.\r\n * @public\r\n * @param {og.Quat} b - The end rotation Quat.\r\n * @param {number} t - interpolation amount between the two Quats.\r\n * @returns {og.Quat}\r\n */\r\nQuat_Quat.prototype.slerp = function (b, t) {\r\n\r\n    var ax = this.x, ay = this.y, az = this.z, aw = this.w,\r\n        bx = b.x, by = b.y, bz = b.z, bw = b.w;\r\n\r\n    var omega, cosom, sinom, scale0, scale1;\r\n\r\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n\r\n    if (cosom < 0.0) {\r\n        cosom = -cosom;\r\n        bx = -bx;\r\n        by = -by;\r\n        bz = -bz;\r\n        bw = -bw;\r\n    }\r\n\r\n    if ((1.0 - cosom) > 0.000001) {\r\n        omega = Math.acos(cosom);\r\n        sinom = Math.sin(omega);\r\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n        scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n        scale0 = 1.0 - t;\r\n        scale1 = t;\r\n    }\r\n\r\n    return new Quat_Quat(\r\n        scale0 * ax + scale1 * bx,\r\n        scale0 * ay + scale1 * by,\r\n        scale0 * az + scale1 * bz,\r\n        scale0 * aw + scale1 * bw\r\n    );\r\n};\r\n\r\n/**\r\n * Returns a roll angle in radians.\r\n * @public\r\n * @returns {number}\r\n */\r\nQuat_Quat.prototype.getRoll = function (reprojectAxis) {\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n    if (reprojectAxis) {\r\n        var fTy = 2.0 * y;\r\n        var fTz = 2.0 * z;\r\n        var fTwz = fTz * w;\r\n        var fTxy = fTy * x;\r\n        var fTyy = fTy * y;\r\n        var fTzz = fTz * z;\r\n        return Math.atan2(fTxy + fTwz, 1.0 - (fTyy + fTzz));\r\n    } else {\r\n        return Math.atan2(2 * (x * y + w * z), w * w + x * x - y * y - z * z);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns a pitch angle in radians.\r\n * @public\r\n * @returns {number}\r\n */\r\nQuat_Quat.prototype.getPitch = function (reprojectAxis) {\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n    if (reprojectAxis) {\r\n        var fTx = 2.0 * x;\r\n        var fTz = 2.0 * z;\r\n        var fTwx = fTx * w;\r\n        var fTxx = fTx * x;\r\n        var fTyz = fTz * y;\r\n        var fTzz = fTz * z;\r\n        return Math.atan2(fTyz + fTwx, 1.0 - (fTxx + fTzz));\r\n    } else {\r\n        return Math.atan2(2 * (y * z + w * x), w * w - x * x - y * y + z * z);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns a yaw angle in radians.\r\n * @public\r\n * @returns {number}\r\n */\r\nQuat_Quat.prototype.getYaw = function (reprojectAxis) {\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n    if (reprojectAxis) {\r\n        var fTx = 2.0 * x;\r\n        var fTy = 2.0 * y;\r\n        var fTz = 2.0 * z;\r\n        var fTwy = fTy * w;\r\n        var fTxx = fTx * x;\r\n        var fTxz = fTz * x;\r\n        var fTyy = fTy * y;\r\n        return Math.atan2(fTxz + fTwy, 1.0 - (fTxx + fTyy));\r\n    } else {\r\n        return Math.asin(-2 * (x * z - w * y));\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/math/Vec3.js\n/**\r\n * @module og/math/Vec3\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents a 3d vector.\r\n * @class\r\n * @param {number} [x] - First value.\r\n * @param {number} [y] - Second value.\r\n * @param {number} [z] - Third value.\r\n */\r\nconst Vec3_Vec3 = function (x, y, z) {\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.x = x || 0.0;\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.y = y || 0.0;\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.z = z || 0.0;\r\n};\r\n\r\n/** @const */\r\nVec3_Vec3.UP = new Vec3_Vec3(0, 1, 0);\r\n/** @const */\r\nVec3_Vec3.DOWN = new Vec3_Vec3(0, -1, 0);\r\n/** @const */\r\nVec3_Vec3.RIGHT = new Vec3_Vec3(1, 0, 0);\r\n/** @const */\r\nVec3_Vec3.LEFT = new Vec3_Vec3(-1, 0, 0);\r\n/** @const */\r\nVec3_Vec3.FORWARD = new Vec3_Vec3(0, 0, -1);\r\n/** @const */\r\nVec3_Vec3.BACKWARD = new Vec3_Vec3(0, 0, 1);\r\n/** @const */\r\nVec3_Vec3.ZERO = new Vec3_Vec3();\r\n\r\n/**\r\n * Vector 3d object creator.\r\n * @function\r\n * @param {number} [x] - First cvalue.\r\n * @param {number} [y] - Second value.\r\n * @param {number} [z] - Third value.\r\n * @returns {og.Vec3} -\r\n */\r\nfunction Vec3_vec3(x, y, z) {\r\n    return new Vec3_Vec3(x, y, z);\r\n};\r\n\r\n/**\r\n * Creates 3d vector from array.\r\n * @function\r\n * @param {Array.<number,number,number>}\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.fromVec = function (arr) {\r\n    return new Vec3_Vec3(arr[0], arr[1], arr[2]);\r\n};\r\n\r\n/**\r\n * Gets angle between two vectors.\r\n * @static\r\n * @param {og.Vec3} a - First vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.angle = function (a, b) {\r\n    return Math.acos(a.dot(b) / Math.sqrt(a.length2() * b.length2()));\r\n};\r\n\r\n/**\r\n * Returns two vectors linear interpolation.\r\n * @static\r\n * @param {og.Vec3} v1 - Start vector.\r\n * @param {og.Vec3} v2 - End vector.\r\n * @param {number} l - Interpolate value.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.lerp = function (v1, v2, l) {\r\n    return Vec3_Vec3(v1.x + (v2.x - v1.x) * l, v1.y + (v2.y - v1.y) * l, v1.z + (v2.z - v1.z) * l);\r\n};\r\n\r\n/**\r\n * Returns summary vector.\r\n * @static\r\n * @param {og.Vec3} a - First vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {og.Vec3} - Summary vector.\r\n */\r\nVec3_Vec3.add = function (a, b) {\r\n    var res = new Vec3_Vec3(a.x, a.y, a.z);\r\n    res.addA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns two vectors subtraction.\r\n * @static\r\n * @param {og.Vec3} a - First vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {og.Vec3} - Vectors subtraction.\r\n */\r\nVec3_Vec3.sub = function (a, b) {\r\n    var res = new Vec3_Vec3(a.x, a.y, a.z);\r\n    res.subA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns scaled vector.\r\n * @static\r\n * @param {og.Vec3} a - Input vector.\r\n * @param {number} scale - Scale value.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.scale = function (a, scale) {\r\n    var res = new Vec3_Vec3(a.x, a.y, a.z);\r\n    res.scale(scale)\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns two vectors production.\r\n * @static\r\n * @param {og.Vec3} a - First vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.mul = function (a, b) {\r\n    var res = new Vec3_Vec3(a.x, a.y, a.z);\r\n    res.mulA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns true if two vectors are non collinear.\r\n * @public\r\n * @param {og.Vec3} a - First vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.noncollinear = function (a, b) {\r\n    return a.y * b.z - a.z * b.y || a.z * b.x - a.x * b.z || a.x * b.y - a.y * b.z;\r\n};\r\n\r\n/**\r\n * Get projection of the vector to plane where n - normal to the plane.\r\n * @static\r\n * @param {og.Vec3} b - Vector to project.\r\n * @param {og.Vec3} n - Plane normal.\r\n* @param {og.Vec3} [def] - Default value for non existed result.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.proj_b_to_plane = function (b, n, def) {\r\n    var res = b.sub(n.scaleTo(n.dot(b) / n.dot(n)));\r\n    if (def && res.isZero()) {\r\n        return new Vec3_Vec3(def.x, def.y, def.z);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Get projection of the first vector to the second.\r\n * @static\r\n * @param {og.Vec3} b - First vector.\r\n * @param {og.Vec3} a - Second vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.proj_b_to_a = function (b, a) {\r\n    return a.scaleTo(a.dot(b) / a.dot(a));\r\n};\r\n\r\n/**\r\n * Makes vectors normalized and orthogonal to each other.\r\n * Normalizes normal. Normalizes tangent and makes sure it is orthogonal to normal (that is, angle between them is 90 degrees).\r\n * @static\r\n * @param {og.Vec3} normal - Normal vector.\r\n * @param {og.Vec3} tangent - Tangent vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.orthoNormalize = function (normal, tangent) {\r\n    normal = normal.normal();\r\n    normal.scale(tangent.dot(normal));\r\n    return tangent.subA(normal).normalize();\r\n};\r\n\r\n/**\r\n * Returns vector components division product one to another.\r\n * @static\r\n * @param {og.Vec3} a - First vector.\r\n * @param {og.Vec3} b - Second vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.div = function (a, b) {\r\n    var res = new Vec3_Vec3(a.x, a.y, a.z);\r\n    res.divA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Converts to 4d vector, Fourth value is 1.0.\r\n * @public\r\n * @returns {og.Vec4} -\r\n */\r\nVec3_Vec3.prototype.toVec4 = function () {\r\n    return new Vec4_Vec4(this.x, this.y, this.z, 1.0);\r\n};\r\n\r\n/**\r\n * Returns clone vector.\r\n * @public\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.clone = function () {\r\n    return new Vec3_Vec3(this.x, this.y, this.z);\r\n};\r\n\r\n/**\r\n * Converts vector to text string.\r\n * @public\r\n * @returns {string} -\r\n */\r\nVec3_Vec3.prototype.toString = function () {\r\n    return \"(\" + this.x + \",\" + this.y + \",\" + this.z + \")\";\r\n};\r\n\r\n/**\r\n * Returns true if vector's values are zero.\r\n * @public\r\n * @returns {boolean} -\r\n */\r\nVec3_Vec3.prototype.isZero = function () {\r\n    return !(this.x || this.y || this.z);\r\n};\r\n\r\n/**\r\n * Get projection of the first vector to the second.\r\n * @static\r\n * @param {og.Vec3} a - Project vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.projToVec = function (a) {\r\n    return a.scaleTo(a.dot(this) / a.dot(a));\r\n};\r\n\r\n/**\r\n * Compares with vector. Returns true if it equals another.\r\n * @public\r\n * @param {og.Vec3} p - Vector to compare.\r\n * @returns {boolean} -\r\n */\r\nVec3_Vec3.prototype.equal = function (p) {\r\n    return this.x === p.x && this.y === p.y && this.z === p.z;\r\n};\r\n\r\n/**\r\n * Copy input vector's values.\r\n * @param {og.Vec3} point3 - Vector to copy.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.copy = function (point3) {\r\n    this.x = point3.x;\r\n    this.y = point3.y;\r\n    this.z = point3.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets vector's length.\r\n * @public\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.prototype.length = function () {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n};\r\n\r\n/**\r\n * Returns squared vector's length.\r\n * @public\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.prototype.length2 = function () {\r\n    return this.x * this.x + this.y * this.y + this.z * this.z;\r\n};\r\n\r\n/**\r\n * Converts vector's values to a quaternion object.\r\n * @public\r\n * @returns {og.Quat} -\r\n */\r\nVec3_Vec3.prototype.getQuat = function () {\r\n    return new Quat_Quat(this.x, this.y, this.z);\r\n};\r\n\r\n/**\r\n * Adds vector to the current.\r\n * @public\r\n * @param {og.Vec3} point3 - Point to add.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.addA = function (point3) {\r\n    this.x += point3.x;\r\n    this.y += point3.y;\r\n    this.z += point3.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets two vectors summarization.\r\n * @public\r\n * @param {og.Vec3} point3 - Vector to add.\r\n * @returns {og.Vec3} Returns a sum vector.\r\n */\r\nVec3_Vec3.prototype.add = function (point3) {\r\n    return new Vec3_Vec3(this.x + point3.x, this.y + point3.y, this.z + point3.z);\r\n};\r\n\r\n/**\r\n * Subtract vector from the current.\r\n * @public\r\n * @param {og.Vec3} point3 - Subtract vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.subA = function (point3) {\r\n    this.x -= point3.x;\r\n    this.y -= point3.y;\r\n    this.z -= point3.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets vector subtraction.\r\n * @public\r\n * @param {og.Vec3} point3 - Subtract vector.\r\n * @return {og.Vec3} Returns new instance of a subtraction\r\n */\r\nVec3_Vec3.prototype.sub = function (point3) {\r\n    return new Vec3_Vec3(this.x - point3.x, this.y - point3.y, this.z - point3.z);\r\n};\r\n\r\n/**\r\n * Scale current vector.\r\n * @public\r\n * @param {number} scale - Scale value.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.scale = function (scale) {\r\n    this.x *= scale;\r\n    this.y *= scale;\r\n    this.z *= scale;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Scale current vector to another instance.\r\n * @public\r\n * @param {number} scale - Scale value.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.scaleTo = function (scale) {\r\n    return new Vec3_Vec3(this.x * scale, this.y * scale, this.z * scale);\r\n};\r\n\r\n/**\r\n * Multiply current vector object to another and store result in the current instance.\r\n * @public\r\n * @param {og.Vec3} vec - Multiply vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.mulA = function (vec) {\r\n    this.x *= vec.x;\r\n    this.y *= vec.y;\r\n    this.z *= vec.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Multiply current vector object to another and returns new vector instance.\r\n * @public\r\n * @param {og.Vec3} vec - Multiply vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.mul = function (vec) {\r\n    return new Vec3_Vec3(this.x * vec.x, this.y * vec.y, this.z * vec.z);\r\n};\r\n\r\n/**\r\n * Divide current vector's components to another. Results stores in the current vector object.\r\n * @public\r\n * @param {og.Vec3} vec - Div vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.divA = function (vec) {\r\n    this.x /= vec.x;\r\n    this.y /= vec.y;\r\n    this.z /= vec.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Divide current vector's components to another and returns new vector instance.\r\n * @public\r\n * @param {og.Vec3} vec - Div vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.div = function (vec) {\r\n    return new Vec3_Vec3(this.x / vec.x, this.y / vec.y, this.z / vec.z);\r\n};\r\n\r\n/**\r\n * Gets vectors dot production.\r\n * @public\r\n * @param {og.Vec3} point3 - Another vector.\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.prototype.dot = function (point3) {\r\n    return point3.x * this.x + point3.y * this.y + point3.z * this.z;\r\n};\r\n\r\n/**\r\n * Gets vectors dot production.\r\n * @public\r\n * @param {Array.<number,number,number>} arr - Array vector.\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.prototype.dotArr = function (arr) {\r\n    return arr[0] * this.x + arr[1] * this.y + arr[2] * this.z;\r\n};\r\n\r\n\r\n/**\r\n * Gets vectors cross production.\r\n * @public\r\n * @param {og.Vec3} point3 - Another vector.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.cross = function (point3) {\r\n    return new Vec3_Vec3(\r\n        this.y * point3.z - this.z * point3.y,\r\n        this.z * point3.x - this.x * point3.z,\r\n        this.x * point3.y - this.y * point3.x\r\n    );\r\n};\r\n\r\n/**\r\n * Sets vector to zero.\r\n * @public\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.clear = function () {\r\n    this.x = this.y = this.z = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Returns normalized vector.\r\n * @public\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.normal = function () {\r\n    var res = new Vec3_Vec3();\r\n    res.copy(this);\r\n\r\n    var length = 1.0 / res.length();\r\n\r\n    res.x *= length;\r\n    res.y *= length;\r\n    res.z *= length;\r\n\r\n    return res;\r\n};\r\n\r\n/**\r\n * Normalize current vector.\r\n * @public\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.normalize = function () {\r\n    var length = 1.0 / this.length();\r\n\r\n    this.x *= length;\r\n    this.y *= length;\r\n    this.z *= length;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts vector to a number array.\r\n * @public\r\n * @returns {Array.<number,number,number>} -\r\n * @deprecated\r\n */\r\nVec3_Vec3.prototype.toVec = function () {\r\n    return [this.x, this.y, this.z];\r\n};\r\n\r\n/**\r\n * Converts vector to a number array.\r\n * @public\r\n * @returns {Array.<number,number,number>} -\r\n */\r\nVec3_Vec3.prototype.toArray = function () {\r\n    return [this.x, this.y, this.z];\r\n};\r\n\r\n/**\r\n * Gets distance to point.\r\n * @public\r\n * @param {og.Vec3} point3 - Distant point.\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.prototype.distance = function (point3) {\r\n    return Vec3_Vec3.sub(this, point3).length();\r\n};\r\n\r\n/**\r\n * Sets vector's values.\r\n * @public\r\n * @param {number} x - Value X.\r\n * @param {number} y - Value Y.\r\n * @param {number} z - Value Z.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.set = function (x, y, z) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Negate current vector.\r\n * @public\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.negate = function () {\r\n    this.x = -this.x;\r\n    this.y = -this.y;\r\n    this.z = -this.z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Negate current vector to another instance.\r\n * @public\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.negateTo = function () {\r\n    return new Vec3_Vec3(-this.x, -this.y, -this.z);\r\n};\r\n\r\n/**\r\n * Gets projected point coordinates of the current vector on the ray.\r\n * @public\r\n * @param {og.Vec3} pos - Ray position.\r\n * @param {og.Vec3} direction - Ray direction.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.projToRay = function (pos, direction) {\r\n    var v = Vec3_Vec3.proj_b_to_a(Vec3_Vec3.sub(this, pos), direction);\r\n    v.addA(pos);\r\n    return v;\r\n};\r\n\r\n/**\r\n * Gets angle between two vectors.\r\n * @public\r\n * @param {og.Vec3} a - Another vector.\r\n * @returns {number} -\r\n */\r\nVec3_Vec3.prototype.angle = function (a) {\r\n    return Vec3_Vec3.angle(this, a);\r\n};\r\n\r\n/**\r\n * Returns two vectors linear interpolation.\r\n * @public\r\n * @param {og.Vec3} v2 - End vector.\r\n * @param {number} l - Interpolate value.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.lerp = function (v2, l) {\r\n    return new Vec3_Vec3(this.x + (v2.x - this.x) * l, this.y + (v2.y - this.y) * l, this.z + (v2.z - this.z) * l);\r\n};\r\n\r\n/**\r\n * Returns vector interpolation by v(t) = v1 * t + v2 * (1 - t)\r\n * @public\r\n * @param {og.Vec3} v2 - End vector.\r\n * @param {number} t - Interpolate value.\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.smerp = function (v2, t) {\r\n    var one_d = 1 - t;\r\n    return new Vec3_Vec3(this.x * t + v2.x * one_d, this.y * t + v2.y * one_d, this.z * t + v2.z * one_d);\r\n};\r\n\r\nVec3_Vec3.LERP_DELTA = 1e-6;\r\n\r\n/**\r\n * Spherically interpolates between two vectors.\r\n * Interpolates between current and v2 vector by amount t. The difference between this and linear interpolation (aka, \"lerp\") is that \r\n * the vectors are treated as directions rather than points in space. The direction of the returned vector is interpolated \r\n * by the angle and its magnitude is interpolated between the magnitudes of from and to.\r\n * @public\r\n * @param {og.Vec3} v2 - \r\n * @param {number} t - The parameter t is clamped to the range [0, 1].\r\n * @returns {og.Vec3} -\r\n */\r\nVec3_Vec3.prototype.slerp = function (v2, t) {\r\n    var res = new Vec3_Vec3();\r\n\r\n    if (t <= 0.0) {\r\n        res.copy(this);\r\n        return;\r\n    } else if (t >= 1.0) {\r\n        res.copy(v2);\r\n        return;\r\n    }\r\n\r\n    var omega, sinom, scale0, scale1;\r\n    var cosom = this.dot(v2);\r\n\r\n    if ((1.0 - cosom) > Vec3_Vec3.LERP_DELTA) {\r\n        omega = Math.acos(cosom);\r\n        sinom = Math.sin(omega);\r\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n        scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n        scale0 = 1.0 - t;\r\n        scale1 = t;\r\n    }\r\n\r\n    return Vec3_Vec3.add(this.scaleTo(scale0), v2.scale(scale1));\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/math/Vec2.js\n/**\r\n * @module og/math/Vec2\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents a 3d vector.\r\n * @class\r\n * @param {number} [x] - First value.\r\n * @param {number} [y] - Second value.\r\n */\r\nconst Vec2_Vec2 = function (x, y) {\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.x = x || 0.0;\r\n\r\n    /**\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    this.y = y || 0.0;\r\n};\r\n\r\n/**\r\n * Vector 2d object creator.\r\n * @function\r\n * @param {number} [x] - First cvalue.\r\n * @param {number} [y] - Second value.\r\n * @returns {og.math.Vec2}\r\n */\r\nfunction Vec2_vec2(x, y) {\r\n    return new Vec2_Vec2(x, y);\r\n};\r\n\r\n/** @const */\r\nVec2_Vec2.UP = new Vec2_Vec2(0, 1);\r\n/** @const */\r\nVec2_Vec2.DOWN = new Vec2_Vec2(0, -1);\r\n/** @const */\r\nVec2_Vec2.RIGHT = new Vec2_Vec2(1, 0);\r\n/** @const */\r\nVec2_Vec2.LEFT = new Vec2_Vec2(-1, 0);\r\n/** @const */\r\nVec2_Vec2.ZERO = new Vec2_Vec2();\r\n\r\n/**\r\n * Returns summary vector.\r\n * @static\r\n * @param {og.math.Vec2} a - First vector.\r\n * @param {og.math.Vec2} b - Second vector.\r\n * @returns {og.math.Vec2} - Summary vector.\r\n */\r\nVec2_Vec2.add = function (a, b) {\r\n    var res = new Vec2_Vec2(a.x, a.y);\r\n    res.addA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns two vectors subtraction.\r\n * @static\r\n * @param {og.math.Vec2} a - First vector.\r\n * @param {og.math.Vec2} b - Second vector.\r\n * @returns {og.math.Vec2} - Vectors subtraction.\r\n */\r\nVec2_Vec2.sub = function (a, b) {\r\n    var res = new oVec2(a.x, a.y);\r\n    res.subA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns scaled vector.\r\n * @static\r\n * @param {og.math.Vec2} a - Input vector.\r\n * @param {number} scale - Scale value.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.scale = function (a, scale) {\r\n    var res = new Vec2_Vec2(a.x, a.y);\r\n    res.scale(scale)\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns two vectors production.\r\n * @static\r\n * @param {og.math.Vec2} a - First vector.\r\n * @param {og.math.Vec2} b - Second vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.mul = function (a, b) {\r\n    var res = new Vec2_Vec2(a.x, a.y);\r\n    res.mulA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns vector components division product one to another.\r\n * @static\r\n * @param {og.math.Vec2} a - First vector.\r\n * @param {og.math.Vec2} b - Second vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.div = function (a, b) {\r\n    var res = new Vec2_Vec2(a.x, a.y);\r\n    res.divA(b);\r\n    return res;\r\n};\r\n\r\n/**\r\n * Get projection of the first vector to the second.\r\n * @static\r\n * @param {og.math.Vec2} b - First vector.\r\n * @param {og.math.Vec2} a - Second vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.proj_b_to_a = function (b, a) {\r\n    return a.scaleTo(a.dot(b) / a.dot(a));\r\n};\r\n\r\n/**\r\n * Gets angle between two vectors.\r\n * @static\r\n * @param {og.math.Vec2} a - First vector.\r\n * @param {og.math.Vec2} b - Second vector.\r\n * @returns {number}\r\n */\r\nVec2_Vec2.angle = function (a, b) {\r\n    return Math.acos(a.dot(b) / Math.sqrt(a.length2() * b.length2()));\r\n};\r\n\r\n/**\r\n * Makes vectors normalized and orthogonal to each other.\r\n * @static\r\n * @param {og.math.Vec2} normal - Normal vector.\r\n * @param {og.math.Vec2} tangent - Tangent vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.orthoNormalize = function (normal, tangent) {\r\n    normal = normal.norm();\r\n    normal.scale(tangent.dot(normal));\r\n    return tangent.sub(normal).normalize();\r\n};\r\n\r\n/**\r\n * Converts to 3d vector, third value is 0.0.\r\n * @public\r\n * @returns {og.Vec3}\r\n */\r\nVec2_Vec2.prototype.toVector3 = function () {\r\n    return new Vec3_Vec3(this.x, this.y, 0);\r\n};\r\n\r\n/**\r\n * Returns clone vector.\r\n * @public\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.clone = function () {\r\n    return new Vec2_Vec2(this.x, this.y);\r\n};\r\n\r\n/**\r\n * Compares with vector. Returns true if it equals another.\r\n * @public\r\n * @param {og.math.Vec2} p - Vector to compare.\r\n * @returns {boolean}\r\n */\r\nVec2_Vec2.prototype.equal = function (p) {\r\n    return this.x === p.x && this.y === p.y;\r\n};\r\n\r\n/**\r\n * Copy input vector's values.\r\n * @param {og.math.Vec2} point2 - Vector to copy.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.copy = function (point2) {\r\n    this.x = point2.x;\r\n    this.y = point2.y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets vector's length.\r\n * @public\r\n * @returns {number}\r\n */\r\nVec2_Vec2.prototype.length = function () {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n};\r\n\r\n/**\r\n * Returns squared vector's length.\r\n * @public\r\n * @returns {number}\r\n */\r\nVec2_Vec2.prototype.length2 = function () {\r\n    return this.x * this.x + this.y * this.y;\r\n};\r\n\r\n/**\r\n * Adds vector to the current.\r\n * @public\r\n * @param {og.math.Vec2}\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.addA = function (v) {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Summarize two vectors.\r\n * @public\r\n * @param {og.math.Vec2}\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.add = function (v) {\r\n    return new Vec2_Vec2(this.x + v.x, this.y + v.y);\r\n};\r\n\r\n/**\r\n * Subtract vector from the current where results saved on the current instance.\r\n * @public\r\n * @param {og.math.Vec2} v - Subtract vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.subA = function (v) {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Subtract vector from the current.\r\n * @public\r\n * @param {og.math.Vec2} v - Subtract vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.sub = function (v) {\r\n    return new Vec2_Vec2(this.x - v.x, this.y - v.y);\r\n};\r\n\r\n/**\r\n * Scale current vector.\r\n * @public\r\n * @param {number} scale - Scale value.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.scale = function (scale) {\r\n    this.x *= scale;\r\n    this.y *= scale;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Scale current vector to another instance.\r\n * @public\r\n * @param {number} scale - Scale value.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.scaleTo = function (scale) {\r\n    return new Vec2_Vec2(this.x * scale, this.y * scale);\r\n};\r\n\r\n/**\r\n * Multiply current vector object to another and store result in the current instance.\r\n * @public\r\n * @param {og.math.Vec2} vec - Multiply vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.mulA = function (vec) {\r\n    this.x *= vec.x;\r\n    this.y *= vec.y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Multiply current vector object to another and returns new vector instance.\r\n * @public\r\n * @param {og.math.Vec2} vec - Multiply vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.mul = function (vec) {\r\n    return new Vec2_Vec2(this.x * vec.x, this.y * vec.y);\r\n};\r\n\r\n\r\n/**\r\n * Divide current vector's components to another. Results stores in the current vector object.\r\n * @public\r\n * @param {og.math.Vec2}\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.divA = function (vec) {\r\n    this.x /= vec.x;\r\n    this.y /= vec.y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets vectors dot production.\r\n * @public\r\n * @param {og.math.Vec2} v - Another vector.\r\n * @returns {number}\r\n */\r\nVec2_Vec2.prototype.dot = function (v) {\r\n    return v.x * this.x + v.y * this.y;\r\n};\r\n\r\n/**\r\n * Gets vectors dot production.\r\n * @public\r\n * @param {Array.<number,number>} arr - Array vector.\r\n * @returns {number}\r\n */\r\nVec2_Vec2.prototype.dotArr = function (arr) {\r\n    return arr[0] * this.x + arr[1] * this.y;\r\n};\r\n\r\n/**\r\n * Gets vectors cross production.\r\n * @public\r\n * @param {og.math.Vec2} v - Another vector.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.cross = function (v) {\r\n    return this.x * v.y - this.y * v.x;\r\n};\r\n\r\n/**\r\n * Sets vector to zero.\r\n * @public\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.clear = function () {\r\n    this.x = this.y = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Returns normalized vector.\r\n * @public\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.normal = function () {\r\n    var res = new Vec2_Vec2();\r\n    res.copy(this);\r\n\r\n    var length = 1.0 / res.length();\r\n\r\n    res.x *= length;\r\n    res.y *= length;\r\n\r\n    return res;\r\n};\r\n\r\n/**\r\n * Normalize current vector.\r\n * @public\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.normalize = function () {\r\n    var length = 1.0 / this.length();\r\n\r\n    this.x *= length;\r\n    this.y *= length;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts vector to a number array.\r\n * @public\r\n * @returns {Array.<number,number>}\r\n */\r\nVec2_Vec2.prototype.toVec = function () {\r\n    return [this.x, this.y];\r\n};\r\n\r\n/**\r\n * Gets distance to point.\r\n * @public\r\n * @param {og.math.Vec2} p - Distant point.\r\n * @returns {number}\r\n */\r\nVec2_Vec2.prototype.distance = function (p) {\r\n    var vec = Vec2_Vec2.sub(this, p);\r\n    return vec.length();\r\n};\r\n\r\n/**\r\n * Sets vector's values.\r\n * @public\r\n * @param {number} x - Value X.\r\n * @param {number} y - Value Y.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.set = function (x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Negate current vector.\r\n * @public\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.negate = function () {\r\n    this.x = -this.x;\r\n    this.y = -this.y;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Negate current vector to another instance.\r\n * @public\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.negateTo = function () {\r\n    return new Vec2_Vec2(-this.x, -this.y);\r\n};\r\n\r\n/**\r\n * Gets projected point coordinates of the current vector on the ray.\r\n * @public\r\n * @param {og.math.Vec2} pos - Ray position.\r\n * @param {og.math.Vec2} direction - Ray direction.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.projToRay = function (pos, direction) {\r\n    var v = Vec2_Vec2.proj_b_to_a(Vec2_Vec2.sub(this, pos), direction);\r\n    v.add(pos);\r\n    return v;\r\n};\r\n\r\n/**\r\n * Gets angle between two vectors.\r\n * @public\r\n * @param {og.math.Vec2} a - Another vector.\r\n * @returns {number}\r\n */\r\nVec2_Vec2.prototype.angle = function (a) {\r\n    return Vec2_Vec2.angle(this, a);\r\n};\r\n\r\n/**\r\n * Returns two vectors linear interpolation.\r\n * @public\r\n * @param {og.math.Vec2} v2 - End vector.\r\n * @param {number} l - Interpolate value.\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.lerp = function (v1, v2, l) {\r\n    var res = Vec2_Vec2.clone(this);\r\n    if (l <= 0.0) {\r\n        res.copy(v1);\r\n    } else if (l >= 1.0) {\r\n        res.copy(v2);\r\n    } else {\r\n        res = Vec2_Vec2.add(v1, Vec2_Vec2.sub(v2, v1).scale(l));\r\n    }\r\n    return res;\r\n};\r\n\r\nVec2_Vec2.LERP_DELTA = 1e-6;\r\n\r\n/**\r\n * Spherically interpolates between two vectors.\r\n * Interpolates between current and v2 vector by amount t. The difference between this and linear interpolation (aka, \"lerp\") is that \r\n * the vectors are treated as directions rather than points in space. The direction of the returned vector is interpolated \r\n * by the angle and its magnitude is interpolated between the magnitudes of from and to.\r\n * @public\r\n * @param {og.math.Vec2} v2 - \r\n * @param {number} t - The parameter t is clamped to the range [0, 1].\r\n * @returns {og.math.Vec2}\r\n */\r\nVec2_Vec2.prototype.slerp = function (v2, t) {\r\n    var res = new Vec2_Vec2();\r\n\r\n    if (t <= 0.0) {\r\n        res.copy(this);\r\n        return;\r\n    } else if (t >= 1.0) {\r\n        res.copy(v2);\r\n        return;\r\n    }\r\n\r\n    var omega, sinom, scale0, scale1;\r\n    var cosom = this.dot(v2);\r\n\r\n    if ((1.0 - cosom) > Vec2_Vec2.LERP_DELTA) {\r\n        omega = Math.acos(cosom);\r\n        sinom = Math.sin(omega);\r\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n        scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n        scale0 = 1.0 - t;\r\n        scale1 = t;\r\n    }\r\n\r\n    return Vec2_Vec2.add(this.scale(scale0), v2.scale(scale1));\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/utils/shared.js\n/**\r\n * @module og/utils/shared\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nif (!('createImageBitmap' in window)) {\r\n    window.createImageBitmap = function(blob) {\r\n        return new Promise((resolve,reject) => {\r\n            let img = document.createElement('img');\r\n            img.addEventListener('load', function() {\r\n                resolve(this);\r\n            });\r\n            img.src = URL.createObjectURL(blob);\r\n        });\r\n    }\r\n};\r\n\r\nfunction shared_isEmpty(v) {\r\n    return v == null;\r\n};\r\n\r\nlet shared_stampCounter = 0;\r\nfunction shared_stamp(obj) {\r\n    var stamp = obj._openglobus_id;\r\n    if (!stamp) {\r\n        stamp = obj._openglobus_id = ++shared_stampCounter;\r\n    }\r\n    return stamp;\r\n};\r\n\r\nfunction shared_isString(s) {\r\n    return typeof (s) === 'string' || s instanceof String;\r\n};\r\n\r\n/**\r\n * Synchronous text file loading. Returns file text.\r\n * @param {string} fileUrl - File name path.\r\n * @returns {string} -\r\n */\r\nfunction shared_readTextFile(fileUrl) {\r\n    var res = \"\";\r\n\r\n    ajax.request(fileUrl, {\r\n        async: false,\r\n        success: function (data) {\r\n            res = data;\r\n        }\r\n    });\r\n\r\n    return res;\r\n};\r\n\r\n/**\r\n * Convert html color string to the RGBA number vector.\r\n * @param {string} htmlColor - HTML string(\"#C6C6C6\" or \"#EF5\" or \"rgb(8,8,8)\" or \"rgba(8,8,8)\") color.\r\n * @param {number} [opacity] - Opacity for the output vector.\r\n * @returns {og.math.Vec4} -\r\n */\r\nfunction shared_htmlColorToRgba(htmlColor, opacity) {\r\n    var hColor = colorTable[htmlColor];\r\n    if (hColor) {\r\n        htmlColor = hColor;\r\n    }\r\n\r\n    if (htmlColor[0] === \"#\") {\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        var hex = htmlColor.replace(shorthandRegex, function (m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return new Vec4_Vec4(parseInt(result[1], 16) / 255, parseInt(result[2], 16) / 255, parseInt(result[3], 16) / 255, shared_isEmpty(opacity) ? 1.0 : opacity);\r\n    } else {\r\n        if (shared_isEmpty(opacity)) {\r\n            opacity = 1.0;\r\n        }\r\n        var m = htmlColor.split(\",\");\r\n        return new Vec4_Vec4(parseInt(m[0].split(\"(\")[1]) / 255, parseInt(m[1]) / 255, parseInt(m[2]) / 255, !shared_isEmpty(m[3]) ? parseFloat(m[3]) : opacity);\r\n    }\r\n};\r\n\r\n/**\r\n * Convert html color string to the RGB number vector.\r\n * @param {string} htmlColor - HTML string(\"#C6C6C6\" or \"#EF5\" or \"rgb(8,8,8)\" or \"rgba(8,8,8)\") color.\r\n * @param {number} [opacity] - Opacity for the output vector.\r\n * @returns {og.Vec3} -\r\n */\r\nfunction shared_htmlColorToRgb(htmlColor) {\r\n    var hColor = colorTable[htmlColor];\r\n    if (hColor) {\r\n        htmlColor = hColor;\r\n    }\r\n\r\n    if (htmlColor[0] === '#') {\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        var hex = htmlColor.replace(shorthandRegex, function (m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return new Vec4_Vec4(parseInt(result[1], 16) / 255, parseInt(result[2], 16) / 255, parseInt(result[3], 16) / 255);\r\n    } else {\r\n        var m = htmlColor.split(\",\");\r\n        return new Vec3_Vec3(parseInt(m[0].split(\"(\")[1]) / 255, parseInt(m[1]) / 255, parseInt(m[2]) / 255);\r\n    }\r\n};\r\n\r\n/**\r\n * Replace template substrings between '{' and '}' tokens.\r\n * @param {string} template - String with templates in \"{\" and \"}\"\r\n * @param {Object} params - Template named object with subsrtings.\r\n * @returns {string} -\r\n * \r\n * @example <caption>Example from og.terrain that replaces tile indexes in url:</caption>\r\n * var substrings = {\r\n *       \"x\": 12,\r\n *       \"y\": 15,\r\n *       \"z\": 8\r\n * }\r\n * og.utils.stringTemplate(\"http://earth3.openglobus.org/{z}/{y}/{x}.ddm\", substrins);\r\n * //returns http://earth3.openglobus.org/8/15/12.ddm\r\n */\r\nfunction shared_stringTemplate(template, params) {\r\n    return template.replace(/{[^{}]+}/g, function (key) {\r\n        return params[key.replace(/[{}]+/g, \"\")] || \"\";\r\n    });\r\n};\r\n\r\nfunction shared_print2d(id, text, x, y) {\r\n    var el = document.getElementById(id);\r\n    if (!el) {\r\n        el = document.createElement(\"div\");\r\n        el.id = id;\r\n        el.classList.add(\"defaultText\");\r\n        document.body.appendChild(el);\r\n    }\r\n    el.innerHTML = text;\r\n    el.style.left = x;\r\n    el.style.top = y;\r\n};\r\n\r\nfunction shared_defaultString(str, def) {\r\n    return str ? str.trim().toLowerCase() : def;\r\n};\r\n\r\nfunction shared_createVector3(v, def) {\r\n    if (v) {\r\n        if (v instanceof Vec3_Vec3) {\r\n            return v.clone();\r\n        } else if (v instanceof Array) {\r\n            return Vec3_Vec3.fromVec(v);\r\n        }\r\n    } else if (def) {\r\n        return def;\r\n    }\r\n    return new Vec3_Vec3();\r\n};\r\n\r\nfunction shared_createVector4(v, def) {\r\n    if (v) {\r\n        if (v instanceof Vec4_Vec4) {\r\n            return v.clone();\r\n        } else if (v instanceof Array) {\r\n            return Vec4_Vec4.fromVec(v);\r\n        }\r\n    } else if (def) {\r\n        return def;\r\n    }\r\n    return new Vec4_Vec4();\r\n};\r\n\r\nfunction shared_createColorRGBA(c, def) {\r\n    if (c) {\r\n        if (shared_isString(c)) {\r\n            return shared_htmlColorToRgba(c);\r\n        } else if (c instanceof Array) {\r\n            return new Vec4_Vec4.fromVec(c);\r\n        } else if (c instanceof Vec4_Vec4) {\r\n            return c.clone();\r\n        }\r\n    } else if (def) {\r\n        return def;\r\n    }\r\n    return new Vec4_Vec4(1.0, 1.0, 1.0, 1.0);\r\n};\r\n\r\nfunction shared_createColorRGB(c, def) {\r\n    if (c) {\r\n        if (shared_isString(c)) {\r\n            return shared_htmlColorToRgb(c);\r\n        } else if (c instanceof Array) {\r\n            return new Vec3_Vec3.fromVec(c);\r\n        } else if (c instanceof Vec3_Vec3) {\r\n            return c.clone();\r\n        }\r\n    } else if (def) {\r\n        return def;\r\n    }\r\n    return new Vec3_Vec3(1.0, 1.0, 1.0);\r\n};\r\n\r\nfunction shared_createExtent(e, def) {\r\n    if (e) {\r\n        if (e instanceof Array) {\r\n            return new Extent_Extent(\r\n                shared_createLonLat(e[0]),\r\n                shared_createLonLat(e[1]));\r\n        } else if (e instanceof Extent_Extent) {\r\n            return e.clone();\r\n        }\r\n    } else if (def) {\r\n        return def;\r\n    }\r\n    return new Extent_Extent();\r\n};\r\n\r\nfunction shared_createLonLat(l, def) {\r\n    if (l) {\r\n        if (l instanceof Array) {\r\n            return new LonLat_LonLat(l[0], l[1], l[2]);\r\n        } else if (l instanceof LonLat_LonLat) {\r\n            return l.clone();\r\n        }\r\n    } else if (def) {\r\n        return def;\r\n    }\r\n    return new LonLat_LonLat();\r\n};\r\n\r\n\r\n/**\r\n * Finds an item in a sorted array.\r\n * @param {Array} ar The sorted array to search.\r\n * @param {Object} el The item to find in the array.\r\n * @param {og.utils.binarySearch~compare_fn} compare_fn comparator The function to use to compare the item to\r\n *        elements in the array.\r\n * @returns {Number} a negative number  if a is less than b; 0 if a is equal to b;a positive number of a is greater than b.\r\n *\r\n * @example\r\n * // Create a comparator function to search through an array of numbers.\r\n * function comparator(a, b) {\r\n *     return a - b;\r\n * };\r\n * var numbers = [0, 2, 4, 6, 8];\r\n * var index = og.utils.binarySearch(numbers, 6, comparator); // 3\r\n */\r\nfunction shared_binarySearch(ar, el, compare_fn) {\r\n    var m = 0;\r\n    var n = ar.length - 1;\r\n    while (m <= n) {\r\n        var k = (n + m) >> 1;\r\n        var cmp = compare_fn(el, ar[k], k);\r\n        if (cmp > 0) {\r\n            m = k + 1;\r\n        } else if (cmp < 0) {\r\n            n = k - 1;\r\n        } else {\r\n            return k;\r\n        }\r\n    }\r\n    return -m - 1;\r\n};\r\n\r\n/**\r\n * Binary insertion that uses binarySearch algorithm.\r\n * @param {Array} ar - The sorted array to insert.\r\n * @param {Object} el - The item to insert.\r\n * @param {og.utils.binarySearch~compare_fn} compare_fn - comparator The function to use to compare the item to\r\n *        elements in the array.\r\n * @returns {Number} Array index position in which item inserted in.\r\n */\r\nfunction shared_binaryInsert(ar, el, compare_fn) {\r\n    var i = shared_binarySearch(ar, el, compare_fn);\r\n    if (i < 0) {\r\n        i = ~i;\r\n    }\r\n    ar.splice(i, 0, el);\r\n    return i;\r\n};\r\n\r\n/**\r\n * Returns two segment lines intersection coordinate.\r\n * @static\r\n * @param {og.math.Vec2} start1 - First line first coordinate.\r\n * @param {og.math.Vec2} end1 - First line second coordinate.\r\n * @param {og.math.Vec2} start2 - Second line first coordinate.\r\n * @param {og.math.Vec2} end2 - Second line second coordinate.\r\n * @param {boolean} [isSegment] - Lines are segments.\r\n * @return {og.math.Vec2} - Intersection coordinate.\r\n */\r\nfunction shared_getLinesIntersection2v(start1, end1, start2, end2, isSegment) {\r\n    var dir1 = end1.sub(start1);\r\n    var dir2 = end2.sub(start2);\r\n\r\n    var a1 = -dir1.y;\r\n    var b1 = +dir1.x;\r\n    var d1 = -(a1 * start1.x + b1 * start1.y);\r\n\r\n    var a2 = -dir2.y;\r\n    var b2 = +dir2.x;\r\n    var d2 = -(a2 * start2.x + b2 * start2.y);\r\n\r\n    var seg1_line2_start = a2 * start1.x + b2 * start1.y + d2;\r\n    var seg1_line2_end = a2 * end1.x + b2 * end1.y + d2;\r\n\r\n    var seg2_line1_start = a1 * start2.x + b1 * start2.y + d1;\r\n    var seg2_line1_end = a1 * end2.x + b1 * end2.y + d1;\r\n\r\n    if (isSegment && (seg1_line2_start * seg1_line2_end > 0 || seg2_line1_start * seg2_line1_end > 0))\r\n        return null;\r\n\r\n    var u = seg1_line2_start / (seg1_line2_start - seg1_line2_end);\r\n\r\n    return new Vec2_Vec2(start1.x + u * dir1.x, start1.y + u * dir1.y);\r\n};\r\n\r\n/**\r\n * Returns two segment lines intersection coordinate.\r\n * @static\r\n * @param {og.math.Vec2} start1 - First line first coordinate.\r\n * @param {og.math.Vec2} end1 - First line second coordinate.\r\n * @param {og.math.Vec2} start2 - Second line first coordinate.\r\n * @param {og.math.Vec2} end2 - Second line second coordinate.\r\n * @param {boolean} [isSegment] - Lines are segments.\r\n * @return {og.math.Vec2} - Intersection coordinate.\r\n */\r\nfunction shared_getLinesIntersectionLonLat(start1, end1, start2, end2, isSegment) {\r\n    var dir1 = new LonLat_LonLat(end1.lon - start1.lon, end1.lat - start1.lat);\r\n    var dir2 = new LonLat_LonLat(end2.lon - start2.lon, end2.lat - start2.lat);\r\n\r\n    var a1 = -dir1.lat;\r\n    var b1 = +dir1.lon;\r\n    var d1 = -(a1 * start1.lon + b1 * start1.lat);\r\n\r\n    var a2 = -dir2.lat;\r\n    var b2 = +dir2.lon;\r\n    var d2 = -(a2 * start2.lon + b2 * start2.lat);\r\n\r\n    var seg1_line2_start = a2 * start1.lon + b2 * start1.lat + d2;\r\n    var seg1_line2_end = a2 * end1.lon + b2 * end1.lat + d2;\r\n\r\n    var seg2_line1_start = a1 * start2.lon + b1 * start2.lat + d1;\r\n    var seg2_line1_end = a1 * end2.lon + b1 * end2.lat + d1;\r\n\r\n    if (isSegment && (seg1_line2_start * seg1_line2_end > 0 || seg2_line1_start * seg2_line1_end > 0))\r\n        return null;\r\n\r\n    var u = seg1_line2_start / (seg1_line2_start - seg1_line2_end);\r\n\r\n    return new LonLat_LonLat(start1.lon + u * dir1.lon, start1.lat + u * dir1.lat);\r\n};\r\n\r\n/**\r\n * Converts XML to JSON\r\n * @static\r\n * @param {Object} xml - Xml object\r\n * @return {Object} - Json converted object.\r\n */\r\nfunction shared_xmlToJson(xml) {\r\n\r\n    // Create the return object\r\n    var obj = {};\r\n\r\n    if (xml.nodeType === 1) { // element\r\n        // do attributes\r\n        if (xml.attributes.length > 0) {\r\n            obj[\"@attributes\"] = {};\r\n            for (var j = 0; j < xml.attributes.length; j++) {\r\n                var attribute = xml.attributes.item(j);\r\n                obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) { // text\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    // do children\r\n    if (xml.hasChildNodes()) {\r\n        for (var i = 0; i < xml.childNodes.length; i++) {\r\n            var item = xml.childNodes.item(i);\r\n            var nodeName = item.nodeName;\r\n            if (typeof (obj[nodeName]) === \"undefined\") {\r\n                obj[nodeName] = shared_xmlToJson(item);\r\n            } else {\r\n                if (typeof (obj[nodeName].push) === \"undefined\") {\r\n                    var old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(shared_xmlToJson(item));\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n};\r\n\r\nconst shared_castType = {\r\n    \"string\": function (v) {\r\n        return shared_isEmpty(v) ? v : v.toString();\r\n    },\r\n\r\n    \"date\": function (v) {\r\n        return shared_isEmpty(v) ? v : new Date(v * 1000);\r\n    },\r\n\r\n    \"datetime\": function (v) {\r\n        return shared_isEmpty(v) ? v : new Date(v * 1000);\r\n    },\r\n\r\n    \"time\": function (v) {\r\n        return shared_isEmpty(v) ? v : parseInt(v);\r\n    },\r\n\r\n    \"integer\": function (v) {\r\n        return shared_isEmpty(v) ? v : parseInt(v);\r\n    },\r\n\r\n    \"float\": function (v) {\r\n        return shared_isEmpty(v) ? v : parseFloat(v);\r\n    },\r\n\r\n    \"boolean\": function (str) {\r\n        if (str === null)\r\n            return str;\r\n\r\n        if (typeof str === 'boolean') {\r\n            if (str === true)\r\n                return true;\r\n            return false;\r\n        }\r\n        if (typeof str === 'string') {\r\n            if (str === \"\")\r\n                return false;\r\n            str = str.replace(/^\\s+|\\s+$/g, '');\r\n            if (str.toLowerCase() === 'true' || str.toLowerCase() === 'yes')\r\n                return true;\r\n            str = str.replace(/,/g, '.');\r\n            str = str.replace(/^\\s*\\-\\s*/g, '-');\r\n        }\r\n        if (!isNaN(str))\r\n            return parseFloat(str) !== 0;\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction shared_base64toBlob(base64Data, contentType) {\r\n    contentType = contentType || '';\r\n    var sliceSize = 1024;\r\n    var byteCharacters = atob(base64Data);\r\n    var bytesLength = byteCharacters.length;\r\n    var slicesCount = Math.ceil(bytesLength / sliceSize);\r\n    var byteArrays = new Array(slicesCount);\r\n\r\n    for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n        var begin = sliceIndex * sliceSize;\r\n        var end = Math.min(begin + sliceSize, bytesLength);\r\n\r\n        var bytes = new Array(end - begin);\r\n        for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\r\n            bytes[i] = byteCharacters[offset].charCodeAt(0);\r\n        }\r\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\r\n    }\r\n    return new Blob(byteArrays, { type: contentType });\r\n}\n// CONCATENATED MODULE: ./src/og/Events.js\n/**\r\n * @module og/Events\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Base events class to handle custom events.\r\n * @class\r\n * @param {Array.<string>} [eventNames] - Event names that could be dispatched.\r\n */\r\nclass Events_Events {\r\n\r\n    constructor(eventNames, sender) {\r\n        /**\r\n         * Registered event names.\r\n         * @protected\r\n         * @type {Array.<string>}\r\n         */\r\n        this._eventNames = [];\r\n\r\n        eventNames && this.registerNames(eventNames);\r\n\r\n        this._sender = sender || this;\r\n\r\n        /**\r\n         * Event identifier.\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        this._counter = 0;\r\n\r\n        /**\r\n         * Stop propagation flag\r\n         * @protected\r\n         * @type {boolean}\r\n         */\r\n        this._stopPropagation = false;\r\n\r\n        this._stampCache = {};\r\n\r\n        this.__id = Events_Events.__staticCounter++;\r\n    }\r\n\r\n    static get _staticCounter() {\r\n        if (!this._counter && this._counter !== 0) {\r\n            this._counter = 0;\r\n        }\r\n        return this._counter;\r\n    }\r\n\r\n    static set _staticCounter(n) {\r\n        this._counter = n;\r\n    }\r\n\r\n    bindSender(sender) {\r\n        this._sender = sender || this;\r\n    }\r\n\r\n    /**\r\n     * Function that creates event object properties that would be dispatched.\r\n     * @public\r\n     * @param {Array.<string>} eventNames - Specified event names list.\r\n     */\r\n    registerNames(eventNames) {\r\n        for (var i = 0; i < eventNames.length; i++) {\r\n            this[eventNames[i]] = { \"active\": true, \"handlers\": [] };\r\n            this._eventNames.push(eventNames[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if event callback has stamped.\r\n     * @protected\r\n     * @param {Object} name - Event identifier.\r\n     * @param {Object} obj - Event callback.\r\n     * @return {boolean} -\r\n     */\r\n    _stamp(name, obj) {\r\n\r\n        var ogid = shared_stamp(obj);\r\n\r\n        var st = name + \"_\" + this.__id + \"_\" + ogid;\r\n\r\n        if (!this._stampCache[st]) {\r\n            this._stampCache[st] = ogid;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Attach listener.\r\n     * @public\r\n     * @param {string} name - Event name to listen.\r\n     * @param {eventCallback} callback - Event callback function.\r\n     * @param {Object} sender - Event callback function owner. \r\n     */\r\n    on(name, callback, sender) {\r\n        if (this._stamp(name, callback)) {\r\n            this[name] && this[name].handlers.unshift(callback.bind(sender || this._sender));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop listening event name with specified callback function.\r\n     * @public\r\n     * @param {string} name - Event name.\r\n     * @param {eventCallback} callback - Attached  event callback.\r\n     */\r\n    off(name, callback) {\r\n        var st = name + \"_\" + this.__id + \"_\" + callback._openglobus_id;\r\n        if (callback._openglobus_id && this._stampCache[st]) {\r\n            var h = this[name].handlers;\r\n            var i = h.length;\r\n            var indexToRemove = -1;\r\n            while (i--) {\r\n                var hi = h[i];\r\n                if (hi._openglobus_id === callback._openglobus_id) {\r\n                    indexToRemove = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (indexToRemove !== -1) {\r\n                h.splice(indexToRemove, 1);\r\n                this._stampCache[st] = undefined;\r\n                delete this._stampCache[st];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispatch event.\r\n     * @public\r\n     * @param {Object} event - Event instance property that created by event name.\r\n     * @param {Object} [obj] - Event object.\r\n     */\r\n    dispatch(event, obj) {\r\n        if (event && event.active) {\r\n            var h = event.handlers;\r\n            var i = h.length;\r\n            while (i-- && !this._stopPropagation) {\r\n                h[i](obj);\r\n            }\r\n        }\r\n        this._stopPropagation = false;\r\n    }\r\n\r\n    /**\r\n     * Brakes events propagation.\r\n     * @public\r\n     */\r\n    stopPropagation() {\r\n        this._stopPropagation = true;\r\n    }\r\n\r\n    /**\r\n     * Removes all events.\r\n     * @public\r\n     */\r\n    clear() {\r\n        for (var i = 0; i < this._eventNames.length; i++) {\r\n            var e = this[this._eventNames[i]];\r\n            e.handlers.length = 0;\r\n            e.handlers = [];\r\n        }\r\n        this._eventNames.length = 0;\r\n        this._eventNames = [];\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/astro/jd.js\n/**\r\n * @module og/astro/jd\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Seconds in millisecond.\r\n * @const\r\n * @default\r\n */\r\nconst jd_SECONDS_PER_MILLISECOND = 0.001;\r\n\r\n/**\r\n * Milliseconds in second.\r\n * @const\r\n * @default\r\n */\r\nconst jd_MILLISECONDS_PER_SECOND = 1000.0;\r\n\r\n/**\r\n * Seconds in minute.\r\n * @const\r\n * @default\r\n */\r\nconst jd_SECONDS_PER_MINUTE = 60.0;\r\n\r\n/**\r\n * One by seconds in minute.\r\n * @const\r\n * @default\r\n */\r\nconst jd_ONE_BY_SECONDS_PER_MINUTE = 1.0 / jd_SECONDS_PER_MINUTE;\r\n\r\n/**\r\n * Minutes in hour.\r\n * @const\r\n * @default\r\n */\r\nconst jd_MINUTES_PER_HOUR = 60.0;\r\n\r\n/**\r\n * Hours in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_HOURS_PER_DAY = 24.0;\r\n\r\n/**\r\n * One by hours in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_ONE_BY_HOURS_PER_DAY = 1.0 / jd_HOURS_PER_DAY;\r\n\r\n/**\r\n * Seconds in hour.\r\n * @const\r\n * @default\r\n */\r\nconst jd_SECONDS_PER_HOUR = 3600.0;\r\n\r\n/**\r\n * One by seconds in hour.\r\n * @const\r\n * @default\r\n */\r\nconst jd_ONE_BY_SECONDS_PER_HOUR = 1.0 / jd_SECONDS_PER_HOUR;\r\n\r\n/**\r\n * Seconds in 12 hours.\r\n * @const\r\n * @default\r\n */\r\nconst jd_SECONDS_PER_12_HOURS = 12.0 * jd_SECONDS_PER_HOUR;\r\n\r\n/**\r\n * Minutes in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_MINUTES_PER_DAY = 1440.0;\r\n\r\n/**\r\n * One by minutes in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_ONE_BY_MINUTES_PER_DAY = 1.0 / jd_MINUTES_PER_DAY;\r\n\r\n/**\r\n * Seconds in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_SECONDS_PER_DAY = 86400.0;\r\n\r\n/**\r\n * Milliseconds in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_MILLISECONDS_PER_DAY = 86400000.0;\r\n\r\n/**\r\n * One by milliseconds in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_ONE_BY_MILLISECONDS_PER_DAY = 1.0 / jd_MILLISECONDS_PER_DAY;\r\n\r\n/**\r\n * One by seconds in day.\r\n * @const\r\n * @default\r\n */\r\nconst jd_ONE_BY_SECONDS_PER_DAY = 1.0 / jd_SECONDS_PER_DAY;\r\n\r\n/**\r\n * Days in julian century.\r\n * @const\r\n * @default\r\n */\r\nconst jd_DAYS_PER_JULIAN_CENTURY = 36525.0;\r\n\r\n/**\r\n * Days in julian year.\r\n * @const\r\n * @default\r\n */\r\nconst jd_DAYS_PER_JULIAN_YEAR = 365.25;\r\n\r\n/**\r\n * Seconds in picosecond.\r\n * @const\r\n * @default\r\n */\r\nconst jd_PICOSECOND = 0.000000001;\r\n\r\n/**\r\n * Modified julian date difference.\r\n * @const\r\n * @default\r\n */\r\nconst jd_MODIFIED_JULIAN_DATE_DIFFERENCE = 2400000.5;\r\n\r\n/**\r\n * Julian date of 2000 year. Epoch.\r\n * @const\r\n * @default\r\n */\r\nconst jd_J2000 = 2451545.0;\r\n\r\n/**\r\n * Returns julian days from Epoch.\r\n * @param {number} jd - Julian date.\r\n * @returns {number} Days from epoch\r\n */\r\nfunction jd_T(jd) {\r\n    return (jd - jd_J2000) / jd_DAYS_PER_JULIAN_CENTURY;\r\n};\r\n\r\n/**\r\n * Gets the date's julian day.\r\n * @param {number} year - Year.\r\n * @param {number} month - Month.\r\n * @param {number} day - Day.\r\n * @returns {Number} Day number\r\n */\r\nfunction jd_getDayNumber(year, month, day) {\r\n    var a = ((month - 14) / 12) | 0;\r\n    var b = year + 4800 + a;\r\n    return (((1461 * b) / 4) | 0) + (((367 * (month - 2 - 12 * a)) / 12) | 0) -\r\n        (((3 * (((b + 100) / 100) | 0)) / 4) | 0) + day - 32075;\r\n};\r\n\r\n/**\r\n * Converts javascript date to the universal(UTC) julian date.\r\n * @param {Date} date - Date.\r\n * @returns {number} UTC julian date\r\n */\r\nfunction jd_DateToUTC(date) {\r\n    var dayNumber = jd_getDayNumber(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate());\r\n\r\n    var hour = date.getUTCHours() - 12;\r\n    if (hour < 0) {\r\n        hour += 24;\r\n    }\r\n\r\n    var secondsOfDay =\r\n        date.getUTCSeconds() + hour * jd_SECONDS_PER_HOUR +\r\n        date.getUTCMinutes() * jd_SECONDS_PER_MINUTE +\r\n        date.getUTCMilliseconds() * jd_SECONDS_PER_MILLISECOND;\r\n\r\n    if (secondsOfDay >= jd_SECONDS_PER_12_HOURS) {\r\n        dayNumber--;\r\n    }\r\n\r\n    var extraDays = secondsOfDay * jd_ONE_BY_SECONDS_PER_DAY | 0;\r\n    dayNumber += extraDays;\r\n    secondsOfDay -= jd_SECONDS_PER_DAY * extraDays;\r\n\r\n    if (secondsOfDay < 0) {\r\n        dayNumber--;\r\n        secondsOfDay += jd_SECONDS_PER_DAY;\r\n    }\r\n\r\n    return dayNumber + secondsOfDay * jd_ONE_BY_SECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Converts javascript date to the atomic(TAI) julian date.\r\n * @param {Date} date - Date.\r\n * @returns {number} TAI julian date\r\n */\r\nfunction jd_DateToTAI(date) {\r\n    return jd_UTCtoTAI(jd_DateToUTC(date));\r\n};\r\n\r\n/**\r\n * Converts coordinated universal(UTC) julian date to atomic(TAI) julian date.\r\n * @param {number} jd - UTC julian date.\r\n * @returns {number} TAI julian date\r\n */\r\nfunction jd_UTCtoTAI(jd) {\r\n    var leapSeconds = jd_leapSecondsTable;\r\n\r\n    var index = shared_binarySearch(leapSeconds, jd, function (a, b) {\r\n        return a - b.jd;\r\n    });\r\n\r\n    if (index < 0) {\r\n        index = ~index;\r\n    }\r\n\r\n    if (index >= leapSeconds.length) {\r\n        index = leapSeconds.length - 1;\r\n    }\r\n\r\n    var offset = leapSeconds[index].leapSeconds;\r\n\r\n    if (index !== 0) {\r\n        if ((leapSeconds[index].jd - jd) * jd_SECONDS_PER_DAY > offset) {\r\n            offset = leapSeconds[index - 1].leapSeconds;\r\n        }\r\n    }\r\n\r\n    return jd + offset * jd_ONE_BY_SECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Converts atomic julian date(TAI) to the coordinated universal(UTC) julian date.\r\n * @param {number} tai - TAI julian date.\r\n * @returns {number} UTC julian date\r\n */\r\nfunction jd_TAItoUTC(tai) {\r\n    var leapSeconds = jd_leapSecondsTable;\r\n    var index = shared_binarySearch(leapSeconds, tai, function (a, b) {\r\n        return a - b.jd;\r\n    });\r\n\r\n    if (index < 0) {\r\n        index = ~index;\r\n    }\r\n\r\n    if (index >= leapSeconds.length) {\r\n        return tai - leapSeconds[index - 1].leapSeconds * jd_ONE_BY_SECONDS_PER_DAY;\r\n    }\r\n\r\n    if (index === 0) {\r\n        return tai - leapSeconds[0].leapSeconds * jd_ONE_BY_SECONDS_PER_DAY;\r\n    }\r\n\r\n    var diff = (leapSeconds[index].jd - tai) * jd_SECONDS_PER_DAY;\r\n\r\n    if (diff === 0) {\r\n        return tai - leapSeconds[index].leapSeconds * jd_ONE_BY_SECONDS_PER_DAY;\r\n    }\r\n\r\n    if (diff <= 1.0) {\r\n        return null;\r\n    }\r\n\r\n    return tai - leapSeconds[index - 1].leapSeconds * jd_ONE_BY_SECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Converts UTC julian date to the javascript date object.\r\n * @param {number} utc - UTC julian date.\r\n * @returns {Date} JavaScript Date object\r\n */\r\nfunction jd_UTCtoDate(utc) {\r\n    var julianDayNumber = utc | 0;\r\n    var secondsOfDay = (utc - julianDayNumber) * jd_SECONDS_PER_DAY;\r\n\r\n    if (secondsOfDay >= jd_SECONDS_PER_12_HOURS) {\r\n        julianDayNumber++;\r\n    }\r\n\r\n    var L = (julianDayNumber + 68569) | 0;\r\n    var N = (4 * L / 146097) | 0;\r\n    L = (L - (((146097 * N + 3) / 4) | 0)) | 0;\r\n    var I = ((4000 * (L + 1)) / 1461001) | 0;\r\n    L = (L - (((1461 * I) / 4) | 0) + 31) | 0;\r\n    var J = ((80 * L) / 2447) | 0;\r\n    var day = (L - (((2447 * J) / 80) | 0)) | 0;\r\n    L = (J / 11) | 0;\r\n    var month = (J + 2 - 12 * L) | 0;\r\n    var year = (100 * (N - 49) + I + L) | 0;\r\n\r\n    var hour = secondsOfDay * jd_ONE_BY_SECONDS_PER_HOUR | 0;\r\n    var remainingSeconds = secondsOfDay - hour * jd_SECONDS_PER_HOUR;\r\n    var minute = remainingSeconds * jd_ONE_BY_SECONDS_PER_MINUTE | 0;\r\n    remainingSeconds = remainingSeconds - minute * jd_SECONDS_PER_MINUTE;\r\n    var second = remainingSeconds | 0;\r\n    var millisecond = (remainingSeconds - second) * jd_MILLISECONDS_PER_SECOND | 0;\r\n\r\n    hour += 12;\r\n    if (hour > 23) {\r\n        hour -= 24;\r\n    }\r\n\r\n    return new Date(Date.UTC(year, month - 1, day, hour, minute, second, millisecond));\r\n};\r\n\r\n/**\r\n * Converts TAI julian date to the javascript date object.\r\n * @param {number} tai - TAI julian date.\r\n * @returns {Date} JavaScript Date object\r\n */\r\nfunction jd_TAItoDate(tai) {\r\n\r\n    var utc = jd_TAItoUTC(tai);\r\n    if (!utc) {\r\n        utc = jd_TAItoUTC(jd_addSeconds(tai, -1));\r\n        og.console.logWrn(\"TAItoDate:336 - can't conv utc.\");\r\n    }\r\n\r\n    return jd_UTCtoDate(utc);\r\n};\r\n\r\n/**\r\n * Adds milliseconds to the julian date.\r\n * @param {number} jd - Julian date.\r\n * @param {number} milliseconds - Milliseconds to add.\r\n * @returns {number} Julian date\r\n */\r\nfunction jd_addMilliseconds(jd, milliseconds) {\r\n    return jd + milliseconds * jd_ONE_BY_MILLISECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Adds seconds to the julian date.\r\n * @param {number} jd - Julian date.\r\n * @param {number} seconds - Seconds to add.\r\n * @returns {number} Julian date\r\n */\r\nfunction jd_addSeconds(jd, seconds) {\r\n    return jd + seconds * jd_ONE_BY_SECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Adds hours to the julian date.\r\n * @param {number} jd - Julian date.\r\n * @param {number} hours - Hours to add.\r\n * @returns {number} Julian date\r\n */\r\nfunction jd_addHours(jd, hours) {\r\n    return jd + hours * jd_ONE_BY_HOURS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Adds minutes to the julian date.\r\n * @param {number} jd - Julian date.\r\n * @param {number} minutes - Minutes to add.\r\n * @returns {number} Julian date\r\n */\r\nfunction jd_addMinutes(jd, minutes) {\r\n    return jd + minutes * jd_MINUTES_PER_DAY;\r\n};\r\n\r\n/**\r\n * Adds days to the julian date.\r\n * @param {number} jd - Julian date.\r\n * @param {number} days - Days to add.\r\n * @returns {number} Julian date\r\n */\r\nfunction jd_addDays(jd, days) {\r\n    return jd + days;\r\n};\r\n\r\n/**\r\n * Gets milliseconds of a julian date.\r\n * @param {number} js - julian date.\r\n * @returns {number} Milliseconds\r\n */\r\nfunction jd_getMilliseconds(jd) {\r\n    var s = jd - (jd | 0);\r\n    s *= jd_SECONDS_PER_DAY;\r\n    return (s - (s | 0)) * jd_MILLISECONDS_PER_SECOND | 0;\r\n};\r\n\r\n/**\r\n * Gets seconds of a julian date.\r\n * @param {number} js - julian date.\r\n * @returns {number} Seconds\r\n */\r\nfunction jd_getSeconds(jd) {\r\n    var s = jd - (jd | 0);\r\n    return s * jd_SECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Gets hours of a julian date.\r\n * @param {number} js - julian date.\r\n * @returns {number} Hours\r\n */\r\nfunction jd_getHours(jd) {\r\n    var julianDayNumber = jd | 0;\r\n    var secondsOfDay = (jd - julianDayNumber) * jd_SECONDS_PER_DAY;\r\n\r\n    var hour = secondsOfDay * jd_ONE_BY_SECONDS_PER_HOUR | 0;\r\n    var remainingSeconds = secondsOfDay - hour * jd_SECONDS_PER_HOUR;\r\n    var minute = remainingSeconds * jd_ONE_BY_SECONDS_PER_MINUTE | 0;\r\n    remainingSeconds = remainingSeconds - minute * jd_SECONDS_PER_MINUTE;\r\n    var second = remainingSeconds | 0;\r\n    var millisecond = (remainingSeconds - second) * jd_MILLISECONDS_PER_SECOND | 0;\r\n\r\n    hour += 12 + minute / 60 + second / 3600 + millisecond / 1000;\r\n    if (hour > 23) {\r\n        hour -= 24;\r\n    }\r\n\r\n    return hour;\r\n};\r\n\r\n/**\r\n * Gets minutes of a julian date.\r\n * @param {number} js - julian date.\r\n * @returns {number} Minutes\r\n */\r\nfunction jd_getMinutes(jd) {\r\n    var s = jd - (jd | 0);\r\n    return s * jd_MINUTES_PER_DAY | 0;\r\n};\r\n\r\n/**\r\n * Gets days of a julian date.\r\n * @param {number} js - julian date.\r\n * @returns {number} Days\r\n */\r\nfunction jd_getDays(jd) {\r\n    return jd | 0;\r\n};\r\n\r\n/**\r\n * Returns days in seconds.\r\n * @param {number} s - Seconds.\r\n * @returns {number} Days\r\n */\r\nfunction jd_secondsToDays(s) {\r\n    return s * jd_ONE_BY_SECONDS_PER_DAY;\r\n};\r\n\r\n/**\r\n * Returns seconds in days.\r\n * @param {number} d - Days.\r\n * @returns {number} Seconds\r\n */\r\nfunction jd_daysToSeconds(d) {\r\n    return d * jd_SECONDS_PER_DAY;\r\n};\r\n\r\nfunction jd_ls(jd, leapSeconds) {\r\n    return {\r\n        \"jd\": jd,\r\n        \"leapSeconds\": leapSeconds\r\n    };\r\n};\r\n\r\nconst jd_leapSecondsTable = [\r\n    jd_ls(2441317.5, 10.0),  // 1972-01-01T00:00:00.000Z\r\n    jd_ls(2441499.5, 11.0),  // 1972-07-01T00:00:00.000Z\r\n    jd_ls(2441683.5, 12.0),  // 1973-01-01T00:00:00.000Z\r\n    jd_ls(2442048.5, 13.0),  // 1974-01-01T00:00:00.000Z\r\n    jd_ls(2442413.5, 14.0),  // 1975-01-01T00:00:00.000Z\r\n    jd_ls(2442778.5, 15.0),  // 1976-01-01T00:00:00.000Z\r\n    jd_ls(2443144.5, 16.0),  // 1977-01-01T00:00:00.000Z\r\n    jd_ls(2443509.5, 17.0),  // 1978-01-01T00:00:00.000Z\r\n    jd_ls(2443874.5, 18.0),  // 1979-01-01T00:00:00.000Z\r\n    jd_ls(2444239.5, 19.0),  // 1980-01-01T00:00:00.000Z\r\n    jd_ls(2444786.5, 20.0),  // 1981-07-01T00:00:00.000Z\r\n    jd_ls(2445151.5, 21.0),  // 1982-07-01T00:00:00.000Z\r\n    jd_ls(2445516.5, 22.0),  // 1983-01-01T00:00:00.000Z\r\n    jd_ls(2446247.5, 23.0),  // 1985-07-01T00:00:00.000Z\r\n    jd_ls(2447161.5, 24.0),  // 1988-01-01T00:00:00.000Z\r\n    jd_ls(2447892.5, 25.0),  // 1990-01-01T00:00:00.000Z\r\n    jd_ls(2448257.5, 26.0),  // 1991-01-01T00:00:00.000Z\r\n    jd_ls(2448804.5, 27.0),  // 1992-07-01T00:00:00.000Z\r\n    jd_ls(2449169.5, 28.0),  // 1993-07-01T00:00:00.000Z\r\n    jd_ls(2449534.5, 29.0),  // 1994-07-01T00:00:00.000Z\r\n    jd_ls(2450083.5, 30.0),  // 1996-01-01T00:00:00.000Z\r\n    jd_ls(2450630.5, 31.0),  // 1997-07-01T00:00:00.000Z\r\n    jd_ls(2451179.5, 32.0),  // 1999-01-01T00:00:00.000Z\r\n    jd_ls(2453736.5, 33.0),  // 2006-01-01T00:00:00.000Z\r\n    jd_ls(2454832.5, 34.0),  // 2009-01-01T00:00:00.000Z\r\n    jd_ls(2456109.5, 35.0),  // 2012-07-01T00:00:00.000Z\r\n    jd_ls(2457204.5, 36.0)   // 2015-07-01T00:00:00.000Z\r\n];\r\n\r\nconst jd_J2000TAI = jd_UTCtoTAI(jd_J2000);\r\n\n// CONCATENATED MODULE: ./src/og/Clock.js\n/**\r\n * @module og/Clock\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents application timer that stores custom current julian datetime, and time speed multiplier.\r\n * @class\r\n * @param {Object} [params]: - Clock parameters:\r\n * @param {number} [params.startDate=0.0] - Julian start date.\r\n * @param {number} [params.endDate=0.0] - Julian end date.\r\n * @param {number} [params.currentDate] - Julian current date. Default: current date.\r\n * @param {number} [params.multiplier=1.0] - Time speed multiolier.\r\n */\r\nclass Clock_Clock {\r\n\r\n    static get _staticCounter() {\r\n        if (!this._counter && this._counter !== 0) {\r\n            this._counter = 0;\r\n        }\r\n        return this._counter;\r\n    }\r\n\r\n    static set _staticCounter(n) {\r\n        this._counter = n;\r\n    }\r\n\r\n    constructor(params) {\r\n        params = params || {};\r\n\r\n        this._id = Clock_Clock._staticCounter++;\r\n\r\n        /**\r\n         * Clock name.\r\n         * @public\r\n         * @type {string}\r\n         */\r\n        this.name = params.name || \"\";\r\n\r\n        /**\r\n         * Clock events.\r\n         * @public\r\n         * @type {Events}\r\n         */\r\n        this.events = new Events_Events([\r\n            \"tick\",\r\n            \"end\"\r\n        ], this);\r\n\r\n        /**\r\n         * Start julian date clock loop.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.startDate = params.startDate || 0;\r\n\r\n        /**\r\n         * End julian date clock loop.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.endDate = params.endDate || 0;\r\n\r\n        var currentDate = params.currentDate || jd_DateToUTC(new Date());\r\n        if (params.startDate && currentDate < params.startDate) {\r\n            currentDate = params.startDate;\r\n        }\r\n        if (params.endDate && currentDate > params.endDate) {\r\n            currentDate = params.endDate;\r\n        }\r\n\r\n        /**\r\n         * Current julian datetime.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.currentDate = currentDate;\r\n\r\n        /**\r\n         * Timer speed multiplier.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.multiplier = params.multiplier !== undefined ? params.multiplier : 1.0;\r\n\r\n        /**\r\n         * Animation frame delta time.\r\n         * @public\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        this.deltaTicks = 0;\r\n\r\n        /**\r\n         * Timer activity.\r\n         * @public\r\n         * @type {boolean}\r\n         */\r\n        this.active = true;\r\n    }\r\n\r\n    /**\r\n     * Sets current clock datetime.\r\n     * @public\r\n     * @param {Object} date - JavaScript Date object.\r\n     */\r\n    setDate(date) {\r\n        var d = jd_DateToUTC(date);\r\n        if (this.startDate && d < this.startDate) {\r\n            d = this.startDate;\r\n        }\r\n        if (this.endDate && d > this.endDate) {\r\n            d = this.endDate;\r\n        }\r\n        this.currentDate = d;\r\n    }\r\n\r\n    /**\r\n     * Returns current application date.\r\n     * @public\r\n     * @returns {Date} - Current date.\r\n     */\r\n    getDate() {\r\n        return jd_UTCtoDate(this.currentDate);\r\n    }\r\n\r\n    reset() {\r\n        if (this.startDate) {\r\n            this.currentDate = this.startDate;\r\n        }\r\n    }\r\n\r\n    _tick(dt) {\r\n        this.deltaTicks = dt * this.multiplier;\r\n        if (this.active) {\r\n            var cd = jd_addMilliseconds(this.currentDate, this.deltaTicks);\r\n            if (this.multiplier > 0) {\r\n                if (this.endDate && cd > this.endDate) {\r\n                    this.currentDate = this.startDate;\r\n                    this.events.dispatch(this.events.end, this);\r\n                } else {\r\n                    this.currentDate = cd;\r\n                }\r\n            } else {\r\n                if (this.startDate && cd < this.startDate) {\r\n                    this.currentDate = this.endDate;\r\n                    this.events.dispatch(this.events.end, this);\r\n                } else {\r\n                    this.currentDate = cd;\r\n                }\r\n            }\r\n            this.events.dispatch(this.events.tick, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Clock} clock - Clock instance to compare.\r\n     * @returns {boolean} - Returns true if a clock is the same instance.\r\n     */\r\n    equal(clock) {\r\n        return this._id === clock._id;\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/webgl/ProgramController.js\n/**\r\n * @module og/webgl/ProgramController\r\n */\r\n\r\n\r\n\r\n/**\r\n * This is shader program controller that used by hadler object to access the shader \r\n * program capabilities, like switching program during the rendering.\r\n * Get access to the program from ...handler.programs.<program name> etc.\r\n * @class\r\n * @param {og.webgl.Handler} handler - Handler.\r\n * @param {og.webgl.Program} Program - Shader program.\r\n */\r\nconst ProgramController = function (handler, Program) {\r\n\r\n    /**\r\n     * Shader program.\r\n     * @private\r\n     * @type {og.webgl.Program}\r\n     */\r\n    this._program = Program;\r\n\r\n    /**\r\n     * Handler.\r\n     * @private\r\n     * @type {og.webgl.Handler}\r\n     */\r\n    this._handler = handler;\r\n\r\n    /**\r\n     * Program current frame activation flag.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this._activated = false;\r\n};\r\n\r\n\r\n/**\r\n * Lazy create program call.\r\n * @public\r\n */\r\nProgramController.prototype.initialize = function () {\r\n    this._program.createProgram(this._handler.gl);\r\n}\r\n\r\n/**\r\n * Returns controller's shader program.\r\n * @public\r\n * @return {og.webgl.Program} -\r\n */\r\nProgramController.prototype.getProgram = function () {\r\n    return this._program;\r\n}\r\n\r\n/**\r\n * Activates current shader program.\r\n * @public\r\n * @returns {ProgramController} -\r\n */\r\nProgramController.prototype.activate = function () {\r\n    if (!this._activated) {\r\n        this._handler.activeProgram.deactivate();\r\n        this._handler.activeProgram = this;\r\n        var p = this._program;\r\n        this._activated = true;\r\n        p.enableAttribArrays();\r\n        p.use();\r\n    }\r\n    return this;\r\n}\r\n\r\n/**\r\n * Remove program from handler\r\n * @public\r\n */\r\nProgramController.prototype.remove = function () {\r\n    var p = this._handler.programs;\r\n    if (p[this._program.name]) {\r\n        if (this._activated) {\r\n            this.deactivate();\r\n        }\r\n        this._program.delete();\r\n        p[this._program.name] = null;\r\n        delete p[this._program.name];\r\n    }\r\n}\r\n\r\n/**\r\n * Deactivate shader program. This is not necessary while activae function used.\r\n * @public\r\n */\r\nProgramController.prototype.deactivate = function () {\r\n    this._program.disableAttribArrays();\r\n    this._activated = false;\r\n}\r\n\r\n/**\r\n * Returns program activity.\r\n * @public\r\n * @return {boolean} -\r\n */\r\nProgramController.prototype.isActive = function () {\r\n    return this._activated;\r\n}\r\n\r\n/**\r\n * Sets program uniforms and attributes values and return controller instance.\r\n * @public\r\n * @param {Object} params - Object with variable name and value like { value: 12, someArray:[1,2,3], uSampler: texture,... }\r\n * @return {og.webgl.ProgramController} -\r\n */\r\nProgramController.prototype.set = function (params) {\r\n    this.activate();\r\n    this._program.set(params);\r\n    return this;\r\n}\r\n\r\n/**\r\n * Draw index buffer with this program.\r\n * @public\r\n * @param {number} mode - Gl draw mode\r\n * @param {WEBGLBuffer} buffer - Buffer to draw.\r\n * @return {og.webgl.ProgramController} Returns current shader controller instance.\r\n */\r\nProgramController.prototype.drawIndexBuffer = function (mode, buffer) {\r\n    this._program.drawIndexBuffer(mode, buffer);\r\n    return this;\r\n}\r\n\r\n/**\r\n * Calls Gl drawArray function.\r\n * @param {number} mode - Gl draw mode.\r\n * @param {number} numItems - draw items count.\r\n * @return {og.webgl.ProgramController} Returns current shader controller instance.\r\n */\r\nProgramController.prototype.drawArray = function (mode, numItems) {\r\n    this._program.drawArray(mode, numItems);\r\n    return this;\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/og/Stack.js\n/**\r\n * @module og/Stack\r\n */\r\n\r\n\r\n\r\nclass Node {\r\n    constructor() {\r\n        this.next = null;\r\n        this.prev = null;\r\n        this.data = null;\r\n    }\r\n};\r\n\r\nclass Stack {\r\n    constructor(size = 256) {\r\n\r\n        this._current = new Node();\r\n        this._head = this._current;\r\n\r\n        for (var i = 0; i < size; i++) {\r\n            var n = new Node();\r\n            n.prev = this._current;\r\n            this._current.next = n;\r\n            this._current = n;\r\n        }\r\n        this._current = this._head;\r\n    }\r\n\r\n    current() {\r\n        return this._current;\r\n    }\r\n\r\n    push(data) {\r\n        this._current = this._current.next;\r\n        this._current.data = data;\r\n    };\r\n\r\n    pop(data) {\r\n        this._current = this._current.prev;\r\n        return this._current.next.data;\r\n    }\r\n\r\n    popPrev(data) {\r\n        this._current = this._current.prev;\r\n        return this._current.data;\r\n    }\r\n};\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/og/webgl/Handler.js\n/**\r\n * @module og/webgl/Handler\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Maximum texture image size.\r\n * @const\r\n * @type {number}\r\n */\r\nconst Handler_MAX_SIZE = 4096;\r\n\r\nconst Handler_vendorPrefixes = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n\r\n/**\r\n * A WebGL handler for accessing low-level WebGL capabilities.\r\n * @class\r\n * @param {string} id - Canvas element id that WebGL handler assing with. If it's null\r\n * or undefined creates hidden canvas and handler bacomes hidden.\r\n * @param {Object} [params] - Handler options:\r\n * @param {number} [params.anisotropy] - Anisitropy filter degree. 8 is default.\r\n * @param {number} [params.width] - Hidden handler width. 256 is default.\r\n * @param {number} [params.height] - Hidden handler height. 256 is default.\r\n * @param {Object} [param.scontext] - Native WebGL context attributes. See https://www.khronos.org/registry/webgl/specs/latest/1.0/#WEBGLCONTEXTATTRIBUTES\r\n * @param {Array.<string>} [params.extensions] - Additional WebGL extension list. Available by default: OES_standard_derivatives, EXT_texture_filter_anisotropic.\r\n */\r\nconst Handler_Handler = function (id, params) {\r\n\r\n    /**\r\n     * Application default timer.\r\n     * @public\r\n     * @type {og.Clock}\r\n     */\r\n    this.defaultClock = new Clock_Clock();\r\n\r\n    /**\r\n     * Custom timers.\r\n     * @protected\r\n     * @type{og.Clock[]}\r\n     */\r\n    this._clocks = [];\r\n\r\n    /**\r\n     * Draw frame time in milliseconds.\r\n     * @public\r\n     * @readonly\r\n     * @type {number}\r\n     */\r\n    this.deltaTime = 0;\r\n\r\n    /**\r\n     * WebGL rendering canvas element.\r\n     * @public\r\n     * @type {Object}\r\n     */\r\n    this.canvas = null;\r\n\r\n    /**\r\n     * WebGL context.\r\n     * @public\r\n     * @type {Object}\r\n     */\r\n    this.gl = null;\r\n\r\n    /**\r\n     * Shader program controller list.\r\n     * @public\r\n     * @type {Object.<og.webgl.ProgramController>}\r\n     */\r\n    this.programs = {};\r\n\r\n    /**\r\n     * Current active shader program controller.\r\n     * @public\r\n     * @type {og.webgl.ProgramController}\r\n     */\r\n    this.activeProgram = null;\r\n\r\n    /**\r\n     * Handler parameters.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._params = params || {};\r\n    this._params.anisotropy = this._params.anisotropy || 8;\r\n    var w = this._params.width;\r\n    if (w > Handler_MAX_SIZE) {\r\n        w = Handler_MAX_SIZE;\r\n    }\r\n    this._params.width = w || 256;\r\n\r\n    var h = this._params.height;\r\n    if (h > Handler_MAX_SIZE) {\r\n        h = Handler_MAX_SIZE;\r\n    }\r\n    this._params.height = h || 256;\r\n    this._params.context = this._params.context || {};\r\n    this._params.extensions = this._params.extensions || [];\r\n    this._oneByHeight = 1 / this._params.height;\r\n\r\n    /**\r\n     * Current WebGL extensions. Becomes here after context initialization.\r\n     * @public\r\n     * @type {Object}\r\n     */\r\n    this.extensions = {};\r\n\r\n    /**\r\n     * HTML Canvas object id.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._id = id;\r\n\r\n    this._lastAnimationFrameTime = 0;\r\n\r\n    this._initialized = false;\r\n\r\n    /**\r\n     * Animation frame function assigned from outside(Ex. from Renderer).\r\n     * @private\r\n     * @type {frameCallback}\r\n     */\r\n    this._frameCallback = function () { };\r\n\r\n    this.transparentTexture = null;\r\n\r\n    this.framebufferStack = new Stack();\r\n\r\n    if (params.autoActivate || shared_isEmpty(params.autoActivate)) {\r\n        this.initialize();\r\n    }\r\n}\r\n\r\n/**\r\n * The return value is null if the extension is not supported, or an extension object otherwise.\r\n * @param {Object} gl - WebGl context pointer.\r\n * @param {String} name - Extension name.\r\n * @returns {Object} -\r\n */\r\nHandler_Handler.getExtension = function (gl, name) {\r\n    var i, ext;\r\n    for (i in Handler_vendorPrefixes) {\r\n        ext = gl.getExtension(Handler_vendorPrefixes[i] + name);\r\n        if (ext) {\r\n            return ext;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Returns a drawing context on the canvas, or null if the context identifier is not supported.\r\n * @param {Object} canvas - HTML canvas object.\r\n * @param {Object} [contextAttributes] - See canvas.getContext contextAttributes.\r\n * @returns {Object} -\r\n */\r\nHandler_Handler.getContext = function (canvas, contextAttributes) {\r\n    var ctx;\r\n    try {\r\n        ctx = canvas.getContext(\"webgl\", contextAttributes) ||\r\n            canvas.getContext(\"experimental-webgl\", contextAttributes);\r\n    }\r\n    catch (ex) {\r\n        cons.logErr(\"exception during the GL context initialization\");\r\n    }\r\n    if (!ctx) {\r\n        cons.logErr(\"could not initialise WebGL\");\r\n    }\r\n    return ctx;\r\n}\r\n\r\n/**\r\n * Sets animation frame function.\r\n * @public\r\n * @param {callback} callback - Frame callback.\r\n */\r\nHandler_Handler.prototype.setFrameCallback = function (callback) {\r\n    callback && (this._frameCallback = callback);\r\n}\r\n\r\n/**\r\n * Creates NEAREST filter texture.\r\n * @public\r\n * @param {Object} image - Image or Canvas object.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createTexture_n = function (image) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates Empty half float texture.\r\n * @public\r\n * @param {number} width - Empty texture width.\r\n * @param {number} height - Empty texture height.\r\n * @returns {Object} - WebGL half float texture object.\r\n */\r\nHandler_Handler.prototype.createEmptyTexture_hf = function (width, height) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.HALF_FLOAT_OES, null);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates Empty float texture.\r\n * @public\r\n * @param {number} width - Empty texture width.\r\n * @param {number} height - Empty texture height.\r\n * @returns {Object} - WebGL float texture object.\r\n */\r\nHandler_Handler.prototype.createEmptyTexture_f = function (width, height) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.FLOAT, null);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates Empty NEAREST filtered texture.\r\n * @public\r\n * @param {number} width - Empty texture width.\r\n * @param {number} height - Empty texture height.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createEmptyTexture_n = function (width, height) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates empty LINEAR filtered texture.\r\n * @public\r\n * @param {number} width - Empty texture width.\r\n * @param {number} height - Empty texture height.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createEmptyTexture_l = function (width, height) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates LINEAR filter texture.\r\n * @public\r\n * @param {Object} image - Image or Canvas object.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createTexture_l = function (image) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates MIPMAP filter texture.\r\n * @public\r\n * @param {Object} image - Image or Canvas object.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createTexture_mm = function (image) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.generateMipmap(gl.TEXTURE_2D);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates ANISOTROPY filter texture.\r\n * @public\r\n * @param {Object} image - Image or Canvas object.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createTexture_a = function (image) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.generateMipmap(gl.TEXTURE_2D);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n    gl.texParameterf(gl.TEXTURE_2D, this.extensions.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, this._params.anisotropy);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Creates DEFAULT filter texture, ANISOTROPY is default.\r\n * @public\r\n * @param {Object} image - Image or Canvas object.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.createTexture = function (image) {\r\n    return this.createTexture_a(image)\r\n}\r\n\r\n/**\r\n * Creates cube texture.\r\n * @public\r\n * @param {Object.<string>} params - Face image urls:\r\n * @param {string} params.px - Positive X or right image url.\r\n * @param {string} params.nx - Negative X or left image url.\r\n * @param {string} params.py - Positive Y or up image url.\r\n * @param {string} params.ny - Negative Y or bottom image url.\r\n * @param {string} params.pz - Positive Z or face image url.\r\n * @param {string} params.nz - Negative Z or back image url.\r\n * @returns {Object} - WebGL texture object.\r\n */\r\nHandler_Handler.prototype.loadCubeMapTexture = function (params) {\r\n    var gl = this.gl;\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n    var faces = [[params.px, gl.TEXTURE_CUBE_MAP_POSITIVE_X],\r\n    [params.nx, gl.TEXTURE_CUBE_MAP_NEGATIVE_X],\r\n    [params.py, gl.TEXTURE_CUBE_MAP_POSITIVE_Y],\r\n    [params.ny, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y],\r\n    [params.pz, gl.TEXTURE_CUBE_MAP_POSITIVE_Z],\r\n    [params.nz, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]];\r\n\r\n    var imageCanvas = new ImageCanvas();\r\n    imageCanvas.fillEmpty();\r\n    var emptyImage = imageCanvas.getImage();\r\n\r\n    for (let i = 0; i < faces.length; i++) {\r\n        let face = faces[i][1];\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        gl.texImage2D(face, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, emptyImage);\r\n    }\r\n\r\n    for (let i = 0; i < faces.length; i++) {\r\n        let face = faces[i][1];\r\n        let image = new Image();\r\n        image.crossOrigin = '';\r\n        image.onload = function (texture, face, image) {\r\n            return function () {\r\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n                gl.texImage2D(face, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            }\r\n        }(texture, face, image);\r\n        image.src = faces[i][0];\r\n    }\r\n    return texture;\r\n}\r\n\r\n/**\r\n * Adds shader program to the handler.\r\n * @public\r\n * @param {og.webgl.Program} program - Shader program.\r\n * @param {boolean} [notActivate] - If it's true program will not compile.\r\n * @return {og.webgl.Program} -\r\n */\r\nHandler_Handler.prototype.addProgram = function (program, notActivate) {\r\n    if (!this.programs[program.name]) {\r\n        var sc = new ProgramController(this, program);\r\n        this.programs[program.name] = sc;\r\n        this._initProgramController(sc);\r\n        if (notActivate)\r\n            sc._activated = false;\r\n    } else {\r\n        !COMPILED && cons.logWrn(\"og.webgl.Handler:284 - shader program: '\" + program.name + \"' is allready exists.\");\r\n    }\r\n    return program;\r\n}\r\n\r\n/**\r\n * Removes shader program from handler.\r\n * @public\r\n * @param {String} name - Shader program name.\r\n */\r\nHandler_Handler.prototype.removeProgram = function (name) {\r\n    this.programs[name] && this.programs[name].remove();\r\n}\r\n\r\n/**\r\n * Adds shader programs to the handler.\r\n * @public\r\n * @param {Array.<og.webgl.Program>} programsArr - Shader program array.\r\n */\r\nHandler_Handler.prototype.addPrograms = function (programsArr) {\r\n    for (var i = 0; i < programsArr.length; i++) {\r\n        this.addProgram(programsArr[i]);\r\n    }\r\n}\r\n\r\n/**\r\n * Used in addProgram\r\n * @private\r\n * @param {og.webgl.ProgramController} sc - Program controller\r\n */\r\nHandler_Handler.prototype._initProgramController = function (sc) {\r\n    if (this._initialized) {\r\n        sc.initialize();\r\n        if (!this.activeProgram) {\r\n            this.activeProgram = sc;\r\n            sc.activate();\r\n        } else {\r\n            sc.deactivate();\r\n            this.activeProgram._program.enableAttribArrays();\r\n            this.activeProgram._program.use();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Used in init function.\r\n * @private\r\n */\r\nHandler_Handler.prototype._initPrograms = function () {\r\n    for (var p in this.programs) {\r\n        this._initProgramController(this.programs[p]);\r\n    }\r\n}\r\n\r\n/**\r\n * Initialize additional WebGL extensions.\r\n * @public\r\n * @param {string} extensionStr - Extension name.\r\n * @param {boolean} showLog - Show logging.\r\n * @return {Object} -\r\n */\r\nHandler_Handler.prototype.initializeExtension = function (extensionStr, showLog) {\r\n    if (!(this.extensions && this.extensions[extensionStr])) {\r\n        var ext = Handler_Handler.getExtension(this.gl, extensionStr);\r\n        if (ext) {\r\n            this.extensions[extensionStr] = ext;\r\n        } else if (showLog) {\r\n            !COMPILED && cons.logWrn(\"og.webgl.Handler: extension '\" + extensionStr + \"' doesn't initialize.\");\r\n        }\r\n    }\r\n    return this.extensions && this.extensions[extensionStr];\r\n}\r\n\r\n/**\r\n * Main function that initialize handler.\r\n * @public\r\n */\r\nHandler_Handler.prototype.initialize = function () {\r\n\r\n    if (this._id) {\r\n        this.canvas = document.getElementById(this._id);\r\n    } else {\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = this._params.width;\r\n        this.canvas.height = this._params.height;\r\n    }\r\n\r\n    this.gl = Handler_Handler.getContext(this.canvas, this._params.context);\r\n    this._initialized = true;\r\n\r\n    /** Sets deafult extensions */\r\n    this._params.extensions.push(\"OES_standard_derivatives\");\r\n    this._params.extensions.push(\"EXT_texture_filter_anisotropic\");\r\n    this._params.extensions.push(\"OES_element_index_uint\");\r\n\r\n    //this._params.extensions.push('OES_texture_half_float');\r\n    //this._params.extensions.push('OES_texture_half_float_linear');\r\n\r\n    //this._params.extensions.push('OES_texture_float');\r\n    //this._params.extensions.push('OES_texture_float_linear');\r\n\r\n    var i = this._params.extensions.length;\r\n    while (i--) {\r\n        this.initializeExtension(this._params.extensions[i], true);\r\n    }\r\n\r\n    if (!this.extensions.EXT_texture_filter_anisotropic)\r\n        this.createTexture = this.createTexture_mm;\r\n\r\n    /** Initilalize shaders and rendering parameters*/\r\n    this._initPrograms();\r\n    this._setDefaults();\r\n}\r\n\r\n/**\r\n * Sets default gl render parameters. Used in init function.\r\n * @private\r\n */\r\nHandler_Handler.prototype._setDefaults = function () {\r\n    this.activateDepthTest();\r\n    this.setSize(this._params.width, this._params.height);\r\n    this.gl.frontFace(this.gl.CCW);\r\n    this.gl.cullFace(this.gl.BACK);\r\n    this.activateFaceCulling();\r\n    this.deactivateBlending();\r\n    var that = this;\r\n    this.createDefaultTexture({ color: \"rgba(0,0,0,0.0)\" }, function (t) {\r\n        that.transparentTexture = t;\r\n    });\r\n}\r\n\r\n/**\r\n * Activate depth test.\r\n * @public\r\n */\r\nHandler_Handler.prototype.activateDepthTest = function () {\r\n    this.gl.enable(this.gl.DEPTH_TEST);\r\n}\r\n\r\n/**\r\n * Deactivate depth test.\r\n * @public\r\n */\r\nHandler_Handler.prototype.deactivateDepthTest = function () {\r\n    this.gl.disable(this.gl.DEPTH_TEST);\r\n}\r\n\r\n/**\r\n * Activate face culling.\r\n * @public\r\n */\r\nHandler_Handler.prototype.activateFaceCulling = function () {\r\n    this.gl.enable(this.gl.CULL_FACE);\r\n}\r\n\r\n/**\r\n * Deactivate face cullting.\r\n * @public\r\n */\r\nHandler_Handler.prototype.deactivateFaceCulling = function () {\r\n    this.gl.disable(this.gl.CULL_FACE);\r\n}\r\n\r\n/**\r\n * Activate blending.\r\n * @public\r\n */\r\nHandler_Handler.prototype.activateBlending = function () {\r\n    this.gl.enable(this.gl.BLEND);\r\n}\r\n\r\n/**\r\n * Deactivate blending.\r\n * @public\r\n */\r\nHandler_Handler.prototype.deactivateBlending = function () {\r\n    this.gl.disable(this.gl.BLEND);\r\n}\r\n\r\n/**\r\n * Creates ARRAY buffer.\r\n * @public\r\n * @param {Array.<number>} array - Input array.\r\n * @param {number} itemSize - Array item size.\r\n * @param {number} numItems - Items quantity.\r\n * @param {number} [usage=STATIC_DRAW] - Parameter of the bufferData call can be one of STATIC_DRAW, DYNAMIC_DRAW, or STREAM_DRAW.\r\n * @return {Object} -\r\n */\r\nHandler_Handler.prototype.createArrayBuffer = function (array, itemSize, numItems, usage) {\r\n    //\r\n    //TODO: What about binding created buffer\r\n    //\r\n    var buffer = this.gl.createBuffer();\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\r\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, array, usage || this.gl.STATIC_DRAW);\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\r\n    buffer.itemSize = itemSize;\r\n    buffer.numItems = numItems;\r\n    return buffer;\r\n}\r\n\r\n/**\r\n * Creates ELEMENT ARRAY buffer.\r\n * @public\r\n * @param {Array.<number>} array - Input array.\r\n * @param {number} itemSize - Array item size.\r\n * @param {number} numItems - Items quantity.\r\n * @param {number} [usage=STATIC_DRAW] - Parameter of the bufferData call can be one of STATIC_DRAW, DYNAMIC_DRAW, or STREAM_DRAW.\r\n * @return {Object} -\r\n */\r\nHandler_Handler.prototype.createElementArrayBuffer = function (array, itemSize, numItems, usage) {\r\n    var buffer = this.gl.createBuffer();\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, array, usage || this.gl.STATIC_DRAW);\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\r\n    buffer.itemSize = itemSize;\r\n    buffer.numItems = numItems || array.length;\r\n    return buffer;\r\n}\r\n\r\n/**\r\n * Sets handler canvas size.\r\n * @public\r\n * @param {number} w - Canvas width.\r\n * @param {number} h - Canvas height.\r\n */\r\nHandler_Handler.prototype.setSize = function (w, h) {\r\n\r\n    if (w > Handler_MAX_SIZE) {\r\n        w = Handler_MAX_SIZE;\r\n    }\r\n\r\n    if (h > Handler_MAX_SIZE) {\r\n        h = Handler_MAX_SIZE;\r\n    }\r\n\r\n    this._params.width = w;\r\n    this._params.height = h;\r\n    this.canvas.width = w;\r\n    this.canvas.height = h;\r\n    this._oneByHeight = 1 / h;\r\n\r\n    this.gl && this.gl.viewport(0, 0, w, h);\r\n    this.onCanvasResize && this.onCanvasResize(this.canvas);\r\n}\r\n\r\n/**\r\n * Returns context screen width.\r\n * @public\r\n * @returns {number} -\r\n */\r\nHandler_Handler.prototype.getWidth = function () {\r\n    return this.canvas.width;\r\n};\r\n\r\n/**\r\n * Returns context screen height.\r\n * @public\r\n * @returns {number} -\r\n */\r\nHandler_Handler.prototype.getHeight = function () {\r\n    return this.canvas.height;\r\n}\r\n\r\n/**\r\n * Returns canvas aspect ratio.\r\n * @public\r\n * @returns {number} -\r\n */\r\nHandler_Handler.prototype.getClientAspect = function () {\r\n    return this.canvas.clientWidth / this.canvas.clientHeight;\r\n}\r\n\r\n/**\r\n * Returns screen center coordinates.\r\n * @public\r\n * @returns {number} -\r\n */\r\nHandler_Handler.prototype.getCenter = function () {\r\n    var c = this.canvas;\r\n    return new Vec2_Vec2(Math.round(c.width * 0.5), Math.round(c.height * 0.5));\r\n}\r\n\r\n/**\r\n * Draw single frame.\r\n * @public\r\n * @param {number} now - Frame current time milliseconds.\r\n */\r\nHandler_Handler.prototype.drawFrame = function () {\r\n\r\n    /** Calculate frame time */\r\n    var now = new Date().getTime();\r\n    this.deltaTime = now - this._lastAnimationFrameTime;\r\n    this._lastAnimationFrameTime = now;\r\n\r\n    this.defaultClock._tick(this.deltaTime);\r\n\r\n    for (var i = 0; i < this._clocks.length; i++) {\r\n        this._clocks[i]._tick(this.deltaTime);\r\n    }\r\n\r\n    /** Canvas resize checking */\r\n    var canvas = this.canvas;\r\n    if (canvas.clientWidth !== canvas.width ||\r\n        canvas.clientHeight !== canvas.height) {\r\n        this.setSize(canvas.clientWidth, canvas.clientHeight);\r\n    }\r\n\r\n    /** Draw frame */\r\n    this._frameCallback();\r\n}\r\n\r\n/**\r\n * Clearing gl frame.\r\n * @public\r\n */\r\nHandler_Handler.prototype.clearFrame = function () {\r\n    var gl = this.gl;\r\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\n/**\r\n * Starts animation loop.\r\n * @public\r\n */\r\nHandler_Handler.prototype.start = function () {\r\n    if (!this._requestAnimationFrameId && this._initialized) {\r\n        var d = new Date();\r\n        this._lastAnimationFrameTime = d.getTime();\r\n        this.defaultClock.setDate(d);\r\n        this._animationFrameCallback();\r\n    }\r\n}\r\n\r\nHandler_Handler.prototype.stop = function () {\r\n    if (this._requestAnimationFrameId) {\r\n        window.cancelAnimationFrame(this._requestAnimationFrameId);\r\n        this._requestAnimationFrameId = null;\r\n    }\r\n}\r\n\r\n/**\r\n * Make animation.\r\n * @private\r\n */\r\nHandler_Handler.prototype._animationFrameCallback = function () {\r\n    this._requestAnimationFrameId = window.requestAnimationFrame(() => {\r\n        this.drawFrame();\r\n        this._animationFrameCallback();\r\n    });\r\n}\r\n\r\n/**\r\n * Creates default texture object\r\n * @public\r\n * @param {Object} [params] - Texture parameters:\r\n * @param {Array.<number, number, number, number>} [params.color] - Texture RGBA color\r\n * @param {number} [params.url] - Texture source url\r\n * @param {callback} success - Creation callback\r\n */\r\nHandler_Handler.prototype.createDefaultTexture = function (params, success) {\r\n    var imgCnv;\r\n    var texture;\r\n    if (params && params.color) {\r\n        imgCnv = new ImageCanvas(2, 2);\r\n        imgCnv.fillColor(params.color);\r\n        texture = this.createTexture_n(imgCnv._canvas);\r\n        texture.default = true;\r\n        success(texture);\r\n    } else if (params && params.url) {\r\n        var img = new Image();\r\n        var that = this;\r\n        img.onload = function () {\r\n            texture = that.createTexture(this);\r\n            texture.default = true;\r\n            success(texture);\r\n        };\r\n        img.src = params.url;\r\n    } else {\r\n        imgCnv = new ImageCanvas(2, 2);\r\n        imgCnv.fillColor(\"#C5C5C5\");\r\n        texture = this.createTexture_n(imgCnv._canvas);\r\n        texture.default = true;\r\n        success(texture);\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nHandler_Handler.prototype.destroy = function () {\r\n\r\n    var gl = this.gl;\r\n\r\n    this.stop();\r\n\r\n    for (var p in this.programs) {\r\n        this.removeProgram(p);\r\n    }\r\n\r\n    gl.deleteTexture(this.transparentTexture);\r\n    this.transparentTexture = null;\r\n\r\n    this.framebufferStack = null;\r\n    this.framebufferStack = new Stack();\r\n\r\n    if (this.canvas.parentNode) {\r\n        this.canvas.parentNode.removeChild(this.canvas);\r\n    }\r\n    this.canvas.width = 1;\r\n    this.canvas.height = 1;\r\n    this.canvas = null;\r\n\r\n    var numAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n    var tmp = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, tmp);\r\n    for (let ii = 0; ii < numAttribs; ++ii) {\r\n        gl.disableVertexAttribArray(ii);\r\n        gl.vertexAttribPointer(ii, 4, gl.FLOAT, false, 0, 0);\r\n        gl.vertexAttrib1f(ii, 0);\r\n    }\r\n    gl.deleteBuffer(tmp);\r\n\r\n    var numTextureUnits = gl.getParameter(gl.MAX_TEXTlURE_IMAGE_UNITS);\r\n    for (let ii = 0; ii < numTextureUnits; ++ii) {\r\n        gl.activeTexture(gl.TEXTURE0 + ii);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.useProgram(null);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    gl.disable(gl.BLEND);\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.DITHER);\r\n    gl.disable(gl.SCISSOR_TEST);\r\n    gl.blendColor(0, 0, 0, 0);\r\n    gl.blendEquation(gl.FUNC_ADD);\r\n    gl.blendFunc(gl.ONE, gl.ZERO);\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.clearDepth(1);\r\n    gl.clearStencil(-1);\r\n\r\n    this.gl = null;\r\n\r\n    this._initialized = false;\r\n}\r\n\r\nHandler_Handler.prototype.addClock = function (clock) {\r\n    if (!clock.__handler) {\r\n        clock.__handler = this;\r\n        this._clocks.push(clock);\r\n    }\r\n}\r\n\r\nHandler_Handler.prototype.addClocks = function (clockArr) {\r\n    for (var i = 0; i < clockArr.length; i++) {\r\n        this.addClock(clockArr[i]);\r\n    }\r\n}\r\n\r\nHandler_Handler.prototype.removeClock = function (clock) {\r\n    if (clock.__handler) {\r\n        var c = this._clocks;\r\n        var i = c.length;\r\n        while (i--) {\r\n            if (c[i].equal(clock)) {\r\n                clock.__handler = null;\r\n                c.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/og/webgl/MultiFramebuffer.js\n/**\r\n * @module og/webgl/Framebuffer\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class represents multiple render framebuffer.\r\n * @class\r\n * @param {og.webgl.Handler} handler - WebGL handler.\r\n * @param {Object} [options] - Framebuffer options:\r\n * @param {number} [options.width] - Framebuffer width. Default is handler canvas width.\r\n * @param {number} [options.height] - Framebuffer height. Default is handler canvas height.\r\n * @param {number} [options.size] - Buffer quantity.\r\n */\r\nconst MultiFramebuffer_MultiFramebuffer = function (handler, options) {\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * WebGL handler.\r\n     * @public\r\n     * @type {og.webgl.Handler}\r\n     */\r\n    this.handler = handler;\r\n\r\n    /**\r\n     * Framebuffer object.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._fbo = null;\r\n\r\n    /**\r\n     * Picking color framebuffers.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this._pFbo = [];\r\n\r\n    /**\r\n     * Render buffer object.\r\n     * @private\r\n     */\r\n    this._rbo = null;\r\n\r\n    this._size = options.size || 1;\r\n\r\n    /**\r\n     * Framebuffer width.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this._width = options.width || 256;\r\n\r\n    /**\r\n     * Framebuffer width.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this._height = options.height || 256;\r\n\r\n    /**\r\n     * Buffer textures.\r\n     * @public\r\n     */\r\n    this.textures = [];\r\n\r\n    /**\r\n     * Framebuffer activity. \r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this._active = false;\r\n}\r\n\r\n/**\r\n * Destroy framebuffer instance.\r\n * @public\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.destroy = function () {\r\n    var gl = this.handler.gl;\r\n    gl.deleteFramebuffer(this._fbo);\r\n    this._fbo = null;\r\n    gl.deleteRenderbuffer(this._rbo);\r\n    this._rbo = null;\r\n    for (var i = 0; i < this._size; i++) {\r\n        gl.deleteTexture(this.textures[i]);\r\n        gl.deleteFramebuffer(this._pFbo[i]);\r\n    }\r\n    this.textures.length = 0;\r\n    this.textures = [];\r\n    this._pFbo.length = 0;\r\n    this._pFbo = [];\r\n}\r\n\r\n/**\r\n * Framebuffer initialization.\r\n * @virtual\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.init = function () {\r\n    var gl = this.handler.gl;\r\n    var ext = this.handler.extensions.WEBGL_draw_buffers;\r\n\r\n    this._fbo = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n\r\n    var fragDataArr = [];\r\n    for (let i = 0; i < this._size; i++) {\r\n        fragDataArr[i] = ext.COLOR_ATTACHMENT0_WEBGL + i;\r\n    }\r\n    ext.drawBuffersWEBGL(fragDataArr);\r\n\r\n    for (let i = 0; i < this._size; i++) {\r\n        this.textures[i] = this.handler.createEmptyTexture_l(this._width, this._height);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.textures[i]);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, ext.COLOR_ATTACHMENT0_WEBGL + i, gl.TEXTURE_2D, this.textures[i], 0);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        fragDataArr[i] = ext.COLOR_ATTACHMENT0_WEBGL + i;\r\n    }\r\n\r\n    this._rbo = gl.createRenderbuffer();\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this._rbo);\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this._width, this._height);\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this._rbo);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    for (var i = 0; i < this._size; i++) {\r\n        this._pFbo[i] = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._pFbo[i]);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.textures[i]);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textures[i], 0);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n}\r\n\r\n/**\r\n * Sets framebuffer size. Must be before the activate method.\r\n * @public\r\n * @param {number} width - Framebuffer width.\r\n * @param {number} height - Framebuffer height.\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.setSize = function (width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n    this.destroy();\r\n    this.init();\r\n}\r\n\r\n/**\r\n * Gets pixel RBGA color from framebuffer by coordinates.\r\n * @public\r\n * @param {UInt8Array} res - Result out array.\r\n * @param {number} nx - Normalized x - coordinate.\r\n * @param {number} ny - Normalized y - coordinate.\r\n * @param {number} [index=0] - Normalized x - coordinate.\r\n * @param {number} [w=1] - Normalized x - coordinate.\r\n * @param {number} [h=1] - Normalized y - coordinate.\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.readPixels = function (res, nx, ny, index, w, h) {\r\n    var gl = this.handler.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._pFbo[index || 0]);\r\n    gl.readPixels(nx * this._width, ny * this._height, w || 1, h || 1, gl.RGBA, gl.UNSIGNED_BYTE, res);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n}\r\n\r\n/**\r\n * Reads all pixels(RGBA colors) from framebuffer.\r\n * @public\r\n * @param {UInt8Array} res - Result array\r\n * @param {Number} [index] - Buffer index to read\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.readAllPixels = function (res, index) {\r\n    var gl = this.handler.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._pFbo[index || 0]);\r\n    gl.readPixels(0, 0, this._width, this._height, gl.RGBA, gl.UNSIGNED_BYTE, res);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n}\r\n\r\n/**\r\n * Returns framebuffer completed.\r\n * @public\r\n * @returns {boolean} -\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.isComplete = function () {\r\n    var gl = this.handler.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        return true;\r\n    }\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    return false;\r\n}\r\n\r\n/**\r\n * Activate framebuffer frame to draw.\r\n * @public\r\n * @returns {og.webgl.MultiFramebuffer} Returns current framebuffer.\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.activate = function () {\r\n    var h = this.handler,\r\n        gl = h.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n    gl.viewport(0, 0, this._width, this._height);\r\n    this._active = true;\r\n    var c = this.handler.framebufferStack.current().data;\r\n    c && (c._active = false);\r\n    h.framebufferStack.push(this);\r\n    return this;\r\n}\r\n\r\n/**\r\n * Deactivate framebuffer frame.\r\n * @public\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.deactivate = function () {\r\n    var h = this.handler,\r\n        gl = h.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.viewport(0, 0, h.canvas.width, h.canvas.height);\r\n    this._active = false;\r\n\r\n    var f = h.framebufferStack.popPrev();\r\n    if (f) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, f._fbo);\r\n        gl.viewport(0, 0, f._width, f._height);\r\n    } else {\r\n        gl.viewport(0, 0, h.canvas.width, h.canvas.height);\r\n    }\r\n}\r\n\r\n/**\r\n * Gets JavaScript image object that framebuffer has drawn.\r\n * @public\r\n * @param {number} [index] - Buffer index\r\n * @returns {Image} -\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.getImage = function (index) {\r\n    var data = new Uint8Array(4 * this._width * this._height);\r\n    this.readAllPixels(data, index);\r\n    var imageCanvas = new ImageCanvas(this._width, this._height);\r\n    imageCanvas.setData(data);\r\n    return imageCanvas.getImage();\r\n}\r\n\r\n/**\r\n * Open dialog window with framebuffer image.\r\n * @public\r\n * @param {number} [index] - Buffer index\r\n */\r\nMultiFramebuffer_MultiFramebuffer.prototype.openImage = function (index) {\r\n    var img = this.getImage(index);\r\n    var dataUrl = img.src;\r\n    var windowContent = '<!DOCTYPE html>';\r\n    windowContent += '<html>'\r\n    windowContent += '<head><title>Print</title></head>';\r\n    windowContent += '<body>'\r\n    windowContent += '<img src=\"' + dataUrl + '\">';\r\n    windowContent += '</body>';\r\n    windowContent += '</html>';\r\n    var printWin = window.open('', '', 'width=' + img.width + 'px ,height=' + img.height + 'px');\r\n    printWin.document.open();\r\n    printWin.document.write(windowContent);\r\n    printWin.document.close();\r\n    printWin.focus();\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/og/webgl/types.js\n/**\r\n * @module og/webgl/types\r\n */\r\n\r\n\r\n\r\nlet _declarations = [\r\n    \"FLOAT\", \"DOUBLE\", \"BOOL\", \"INT\", \"UINT\", \r\n    \"VEC2\", \"VEC3\", \"VEC4\", \"DVEC2\",\r\n    \"DVEC3\", \"DVEC4\", \r\n    \"BVEC2\", \"BVEC3\", \"BVEC4\", \r\n    \"IVEC2\", \"IVEC3\", \"IVEC4\",     \r\n    \"UVEC2\", \"UVEC3\", \"UVEC4\", \r\n    \"MAT2\", \"DMAT2\", \"MAT3\", \"DMAT3\", \"MAT4\", \"DMAT4\", \r\n    \"MAT2X3\", \"MAT2X4\", \"MAT3X2\", \"MAT3X4\", \"MAT4X2\", \r\n    \"MAT4X3\", \"DMAT2X3\", \"DMAT2X4\", \"DMAT3X2\", \"DMAT3X4\",\r\n    \"DMAT4X2\", \"DMAT4X3\", \r\n    \"SAMPLER1D\", \"SAMPLER2D\", \"SAMPLER3D\", \"SAMPLERCUBE\", \"SAMPLER2DSHADOW\",\r\n    \"SAMPLER2DXX\", \r\n    \"INTXX\", \"FLOATXX\"];\r\n\r\n\r\nconst types = {};\r\n\r\nfor (let i = 0; i < _declarations.length; i++) {\r\n    types[_declarations[i]] = i;\r\n}\r\n\r\nconst typeStr = {};\r\nfor (let i = 0; i < _declarations.length; i++) {\r\n    typeStr[_declarations[i].toLowerCase()] = types[_declarations[i]];\r\n}\r\n\n// CONCATENATED MODULE: ./src/og/webgl/callbacks.js\n/**\r\n * @module og/webgl/callbacks\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/*=========================\r\n   Uniforms callbacks\r\n =========================*/\r\nconst callbacks_callbacks = {\r\n    'u': [],\r\n    'a': []\r\n};\r\n\r\ncallbacks_callbacks.u[types.MAT4] = function (program, variable) {\r\n    program.gl.uniformMatrix4fv(variable._pName, false, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.MAT3] = function (program, variable) {\r\n    program.gl.uniformMatrix3fv(variable._pName, false, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.FLOAT] = function (program, variable) {\r\n    program.gl.uniform1f(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.INT] = function (program, variable) {\r\n    program.gl.uniform1i(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.VEC2] = function (program, variable) {\r\n    program.gl.uniform2fv(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.VEC3] = function (program, variable) {\r\n    program.gl.uniform3fv(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.VEC4] = function (program, variable) {\r\n    program.gl.uniform4fv(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.SAMPLER2D] = function (program, variable) {\r\n    let pgl = program.gl;\r\n    pgl.activeTexture(pgl.TEXTURE0 + program._textureID);\r\n    pgl.bindTexture(pgl.TEXTURE_2D, variable.value);\r\n    pgl.uniform1i(variable._pName, program._textureID);\r\n    program._textureID++;\r\n};\r\n\r\ncallbacks_callbacks.u[types.SAMPLERCUBE] = function (program, variable) {\r\n    let pgl = program.gl;\r\n    pgl.activeTexture(pgl.TEXTURE0 + program._textureID);\r\n    pgl.bindTexture(pgl.TEXTURE_CUBE_MAP, variable.value);\r\n    pgl.uniform1i(variable._pName, program._textureID);\r\n    program._textureID++;\r\n};\r\n\r\ncallbacks_callbacks.u[types.SAMPLER2DXX] = function (program, variable) {\r\n    let pgl = program.gl,\r\n        size = variable.value.length;\r\n    let samplerArr = new Int32Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n        pgl.activeTexture(pgl.TEXTURE0 + program._textureID + i);\r\n        pgl.bindTexture(pgl.TEXTURE_2D, variable.value[i]);\r\n        samplerArr[i] = i;\r\n    }\r\n    pgl.uniform1iv(variable._pName, samplerArr);\r\n};\r\n\r\ncallbacks_callbacks.u[types.INTXX] = function (program, variable) {\r\n    pgl.uniform1iv(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.u[types.FLOATXX] = function (program, variable) {\r\n    program.gl.uniform1fv(variable._pName, variable.value);\r\n};\r\n\r\n/*========================\r\n   Attributes callbacks\r\n ========================*/\r\ncallbacks_callbacks.a[types.FLOAT] = function (program, variable) {\r\n    program.gl.vertexAttrib1f(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.a[types.VEC2] = function (program, variable) {\r\n    program.gl.vertexAttrib2fv(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.a[types.VEC3] = function (program, variable) {\r\n    program.gl.vertexAttrib3fv(variable._pName, variable.value);\r\n};\r\n\r\ncallbacks_callbacks.a[types.VEC4] = function (program, variable) {\r\n    program.gl.vertexAttrib4fv(variable._pName, variable.value);\r\n};\n// CONCATENATED MODULE: ./src/og/webgl/Program.js\n/**\r\n * @module og/webgl/Program\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Represents more comfortable using WebGL shader program.\r\n * @class\r\n * @param {string} name - Shader program name identificator.\r\n * @param {object} material - Object stores uniforms, attributes and program codes:\r\n * @param {object} material.uniforms - Uniforms definition section.\r\n * @param {object} material.attributes - Attributes definition section.\r\n * @param {string} material.vertexShader - Vertex glsl code.\r\n * @param {string} material.fragmentShader - Fragment glsl code.\r\n */\r\nclass Program_Program {\r\n    constructor(name, material) {\r\n        /**\r\n         * Shader progarm name.\r\n         * @public\r\n         * @type {string}\r\n         */\r\n        this.name = name;\r\n\r\n        this.attributes = {};\r\n        this.uniforms = {};\r\n\r\n        /**\r\n         * Attributes.\r\n         * @public\r\n         * @type {Object}\r\n         */\r\n        this._attributes = {};\r\n        for (let t in material.attributes) {\r\n            if (typeof (material.attributes[t]) === \"string\" ||\r\n                typeof (material.attributes[t]) === \"number\") {\r\n                this._attributes[t] = { 'type': material.attributes[t] };\r\n            } else {\r\n                this._attributes[t] = material.attributes[t];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Uniforms.\r\n         * @public\r\n         * @type {Object}\r\n         */\r\n        this._uniforms = {};\r\n        for (let t in material.uniforms) {\r\n            if (typeof (material.uniforms[t]) === \"string\" ||\r\n                typeof (material.uniforms[t]) === \"number\") {\r\n                this._uniforms[t] = { 'type': material.uniforms[t] };\r\n            } else {\r\n                this._uniforms[t] = material.uniforms[t];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Vertex shader.\r\n         * @public\r\n         * @type {string}\r\n         */\r\n        this.vertexShader = material.vertexShader;\r\n\r\n        /**\r\n         * Fragment shader.\r\n         * @public\r\n         * @type {string}\r\n         */\r\n        this.fragmentShader = material.fragmentShader;\r\n\r\n        /**\r\n         * Webgl context.\r\n         * @public\r\n         * @type {Object}\r\n         */\r\n        this.gl = null;\r\n\r\n        /**\r\n         * All program variables.\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this._variables = {};\r\n\r\n        /**\r\n         * Program pointer.\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this._p = null;\r\n\r\n        /**\r\n         * Texture counter.\r\n         * @prvate\r\n         * @type {number}\r\n         */\r\n        this._textureID = 0;\r\n\r\n        /**\r\n         * Program attributes array.\r\n         * @private\r\n         * @type {Array.<Object>}\r\n         */\r\n        this._attribArrays = [];\r\n    }\r\n\r\n    /**\r\n     * Sets the current program frame.\r\n     * @public\r\n     */\r\n    use() {\r\n        this.gl.useProgram(this._p);\r\n    }\r\n\r\n    /**\r\n     * Sets program variables.\r\n     * @public\r\n     * @param {Object} material - Variables and values object.\r\n     */\r\n    set(material) {\r\n        this._textureID = 0;\r\n        for (var i in material) {\r\n            this._variables[i].value = material[i];\r\n            this._variables[i]._callback(this, this._variables[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply current variables.\r\n     * @public\r\n     */\r\n    apply() {\r\n        this._textureID = 0;\r\n        var v = this._variables;\r\n        for (var i in v) {\r\n            v[i]._callback(this, v[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls drawElements index buffer function.\r\n     * @public\r\n     * @param {number} mode - Draw mode(GL_TRIANGLES, GL_LINESTRING etc.).\r\n     * @param {Object} buffer - Index buffer.\r\n     */\r\n    drawIndexBuffer(mode, buffer) {\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n        this.gl.drawElements(mode, buffer.numItems, this.gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    /**\r\n     * Calls drawArrays function.\r\n     * @public\r\n     * @param {number} mode - Draw mode(GL_TRIANGLES, GL_LINESTRING etc.).\r\n     * @param {number} numItems - Curent binded buffer drawing items count.\r\n     */\r\n    drawArrays(mode, numItems) {\r\n        this.gl.drawArrays(mode, 0, numItems);\r\n    }\r\n\r\n    /**\r\n     * Check and log for an shader compile errors and warnings. Returns True - if no errors otherwise returns False.\r\n     * @private\r\n     * @param {Object} shader - WebGl shader program.\r\n     * @param {string} src - Shader program source.\r\n     * @returns {boolean} -\r\n     */\r\n    _getShaderCompileStatus(shader, src) {\r\n        this.gl.shaderSource(shader, src);\r\n        this.gl.compileShader(shader);\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            cons.logErr(\"og/Program/Program:\" + this.name + \" - \" + this.gl.getShaderInfoLog(shader) + \".\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns compiled vertex shader program pointer.\r\n     * @private\r\n     * @param {string} src - Vertex shader source code.\r\n     * @returns {Object} -\r\n     */\r\n    _createVertexShader(src) {\r\n        var shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        if (!this._getShaderCompileStatus(shader, src)) {\r\n            return null;\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**\r\n     * Returns compiled fragment shader program pointer.\r\n     * @private\r\n     * @param {string} src - Vertex shader source code.\r\n     * @returns {Object} -\r\n     */\r\n    _createFragmentShader(src) {\r\n        var shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        if (!this._getShaderCompileStatus(shader, src)) {\r\n            return null;\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**\r\n     * Disable current program vertexAttribArrays.\r\n     * @public\r\n     */\r\n    disableAttribArrays() {\r\n        var gl = this.gl;\r\n        var a = this._attribArrays;\r\n        var i = a.length;\r\n        while (i--) {\r\n            gl.disableVertexAttribArray(a[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable current program vertexAttribArrays.\r\n     * @public\r\n     */\r\n    enableAttribArrays() {\r\n        var gl = this.gl;\r\n        var a = this._attribArrays;\r\n        var i = a.length;\r\n        while (i--) {\r\n            gl.enableVertexAttribArray(a[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete program.\r\n     * @public\r\n     */\r\n    delete() {\r\n        this.gl.deleteProgram(this._p);\r\n    }\r\n\r\n    /**\r\n     * Creates program.\r\n     * @public\r\n     * @param {Object} gl - WebGl context.\r\n     */\r\n    createProgram(gl) {\r\n        this.gl = gl;\r\n        this._p = this.gl.createProgram();\r\n\r\n        var fs = this._createFragmentShader(this.fragmentShader);\r\n        var vs = this._createVertexShader(this.vertexShader);\r\n        gl.attachShader(this._p, fs);\r\n        gl.attachShader(this._p, vs);\r\n        gl.linkProgram(this._p);\r\n\r\n        if (!gl.getProgramParameter(this._p, gl.LINK_STATUS)) {\r\n            cons.logErr(\"og/Program/Program:\" + this.name + \" - couldn't initialise shaders. \" + gl.getProgramInfoLog(this._p) + \".\");\r\n            gl.deleteProgram(this._p);\r\n            return;\r\n        }\r\n\r\n        this.use();\r\n\r\n        for (var a in this._attributes) {\r\n            //this.attributes[a]._name = a;\r\n            this._variables[a] = this._attributes[a];\r\n\r\n            //Maybe, it will be better to remove enableArray option...\r\n            this._attributes[a].enableArray = (this._attributes[a].enableArray != undefined ? this._attributes[a].enableArray : true);\r\n            if (this._attributes[a].enableArray)\r\n                this._attributes[a]._callback = Program_Program.bindBuffer;\r\n            else {\r\n                if (typeof (this._attributes[a].type) === \"string\") {\r\n                    this._attributes[a]._callback = callbacks_callbacks.a[typeStr[this._attributes[a].type.trim().toLowerCase()]];\r\n                } else {\r\n                    this._attributes[a]._callback = callbacks_callbacks.a[this._attributes[a].type];\r\n                }\r\n            }\r\n\r\n            this._p[a] = gl.getAttribLocation(this._p, a);\r\n\r\n            if (this._p[a] == undefined) {\r\n                cons.logErr(\"og/Program/Program:\" + this.name + \" - attribute '\" + a + \"' is not exists.\");\r\n                gl.deleteProgram(this._p);\r\n                return;\r\n            }\r\n\r\n            if (this._attributes[a].enableArray) {\r\n                this._attribArrays.push(this._p[a]);\r\n                gl.enableVertexAttribArray(this._p[a]);\r\n            }\r\n\r\n            this._attributes[a]._pName = this._p[a];\r\n            this.attributes[a] = this._p[a];\r\n        }\r\n\r\n        for (var u in this._uniforms) {\r\n            //this.uniforms[u]._name = u;\r\n\r\n            if (typeof (this._uniforms[u].type) === \"string\") {\r\n                this._uniforms[u]._callback = callbacks_callbacks.u[typeStr[this._uniforms[u].type.trim().toLowerCase()]];\r\n            } else {\r\n                this._uniforms[u]._callback = callbacks_callbacks.u[this._uniforms[u].type];\r\n            }\r\n\r\n            this._variables[u] = this._uniforms[u];\r\n            this._p[u] = gl.getUniformLocation(this._p, u);\r\n\r\n            if (this._p[u] == undefined) {\r\n                cons.logErr(\"og/Program/Program:\" + this.name + \" - uniform '\" + u + \"' is not exists.\");\r\n                gl.deleteProgram(this._p);\r\n                return;\r\n            }\r\n\r\n            this._uniforms[u]._pName = this._p[u];\r\n            this.uniforms[u] = this._p[u];\r\n        }\r\n\r\n        //Maybe it will be better to deleteProgram...\r\n        gl.detachShader(this._p, fs);\r\n        gl.detachShader(this._p, vs);\r\n    }\r\n\r\n    /**\r\n     * Bind program buffer.\r\n     * @function\r\n     * @param {og.webgl.Program} program - Used program.\r\n     * @param {Object} variable - Variable represents buffer data.\r\n     */\r\n    static bindBuffer(program, variable) {\r\n        var gl = program.gl;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, variable.value);\r\n        gl.vertexAttribPointer(variable._pName, variable.value.itemSize, gl.FLOAT, false, 0, 0);\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/Rectangle.js\n\r\n\r\n/**\r\n * 2D Rectangle class.\r\n * @class\r\n * @param {number} [left] - Left coordinate. 0 - default.\r\n * @param {number} [top] - Top coordinate. 0 - default.\r\n * @param {number} [right] - Right coordinate. 0 - default.\r\n * @param {number} [bottom] - Bottom coordinate. 0 - default.\r\n*/\r\nclass Rectangle {\r\n    constructor(left, top, right, bottom) {\r\n\r\n        /**\r\n         * Left coordinate.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.left = left || 0;\r\n\r\n        /**\r\n         * Right coordinate.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.right = right || 0;\r\n\r\n        /**\r\n         * Top coordinate.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.top = top || 0;\r\n\r\n        /**\r\n         * Top coordinate.\r\n         * @public\r\n         * @type {number}\r\n         */\r\n        this.bottom = bottom || 0;\r\n    }\r\n\r\n    /**\r\n     * Clone rectangle object.\r\n     * @public\r\n     * @returns {og.Rectangle}\r\n     */\r\n    clone() {\r\n        return new Rectangle(this.left, this.top, this.right, this.bottom);\r\n    }\r\n\r\n    /**\r\n     * Returns rectangle width.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    getWidth() {\r\n        return Math.abs(this.right - this.left);\r\n    }\r\n\r\n    /**\r\n     * Returns rectangle height.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    getHeight() {\r\n        return Math.abs(this.bottom - this.top);\r\n    }\r\n\r\n    /**\r\n     * Returns rectangle area.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    getSquare() {\r\n        return this.getHeight() * this.getWidth();\r\n    }\r\n\r\n    /**\r\n     * Returns rectangle diagonal size.\r\n     * @public\r\n     * @type {number}\r\n     */\r\n    getDiagonal() {\r\n        var w = this.getWidth(),\r\n            h = this.getHeight();\r\n        return Math.sqrt(h * h + w * w);\r\n    }\r\n\r\n    /**\r\n     * Returns true if rectangle fits their size in width and height.\r\n     * @public\r\n     * @param {number} width - Width.\r\n     * @param {number} height - Height.\r\n     * @type {boolean}\r\n     */\r\n    fit(width, height) {\r\n        return (this.getWidth() == width && this.getHeight() == height);\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/og/QueueArray.js\n\r\n\r\nclass QueueArray {\r\n    constructor(size) {\r\n        this._size = size || 2048;\r\n        this._array = new Array(this._size);\r\n        this._popIndex = parseInt(this._size * 0.5);\r\n        this._shiftIndex = this._popIndex;\r\n        this.length = 0;\r\n    }\r\n\r\n    reset(){\r\n        this._popIndex = parseInt(this._size * 0.5);\r\n        this._shiftIndex = this._popIndex;\r\n        this.length = 0;\r\n    }\r\n\r\n    clear() {\r\n        this._array.length = 0;\r\n        this._array = new Array(this._size);\r\n        this._popIndex = parseInt(this._size * 0.5);\r\n        this._shiftIndex = this._popIndex;\r\n        this.length = 0;\r\n    }\r\n\r\n    push(data) {\r\n        this.length++;\r\n        this._array[this._popIndex++] = data;\r\n    }\r\n\r\n    pop() {\r\n        if (this.length) {\r\n            this.length--;\r\n            var res = this._array[--this._popIndex]\r\n            this._array[this._popIndex] = null;\r\n            if (!this._array[this._popIndex - 1]) {\r\n                this._popIndex = parseInt(this._size * 0.5);\r\n                this._shiftIndex = this._popIndex;\r\n            }\r\n            return res;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    unshift(data) {\r\n        this.length++;\r\n        this._array[--this._shiftIndex] = data;\r\n    }\r\n\r\n    shift() {\r\n        if (this.length) {\r\n            this.length--;\r\n            var res = this._array[this._shiftIndex];\r\n            this._array[this._shiftIndex++] = null;\r\n            if (!this._array[this._shiftIndex]) {\r\n                this._popIndex = parseInt(this._size * 0.5);\r\n                this._shiftIndex = this._popIndex;\r\n            }\r\n            return res;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    each(callback) {\r\n        for (var i = this._shiftIndex; i < this._popIndex; i++) {\r\n            callback(this._array[i]);\r\n        }\r\n    }\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/og/utils/ImagesCacheManager.js\n\r\n\r\n\r\n\r\nclass ImagesCacheManager_ImagesCacheManager {\r\n    constructor() {\r\n        this.imagesCache = {};\r\n\r\n        this._counter = 0;\r\n        this._pendingsQueue = new QueueArray();\r\n        this._imageIndexCounter = 0;\r\n    }\r\n\r\n    load(src, success) {\r\n        if (this.imagesCache[src]) {\r\n            success(this.imagesCache[src]);\r\n        } else {\r\n            var req = { \"src\": src, \"success\": success };\r\n            if (this._counter >= 1) {\r\n                this._pendingsQueue.push(req);\r\n            } else {\r\n                this._exec(req);\r\n            }\r\n        }\r\n    }\r\n\r\n    _exec(req) {\r\n        this._counter++;\r\n        var that = this;\r\n\r\n        var img = new Image();\r\n        img.crossOrigin = '';\r\n        img.onload = function () {\r\n            that.imagesCache[req.src] = img;\r\n            this.__nodeIndex = that._imageIndexCounter++;\r\n            req.success(this);\r\n            that._dequeueRequest();\r\n        };\r\n\r\n        img.onerror = function () {\r\n            that._dequeueRequest();\r\n        };\r\n\r\n        img.src = req.src;\r\n    }\r\n\r\n    _dequeueRequest() {\r\n        this._counter--;\r\n        if (this._pendingsQueue.length && this._counter < 1) {\r\n            while (this._pendingsQueue.length) {\r\n                var req = this._pendingsQueue.pop();\r\n                if (req) {\r\n                    if (this.imagesCache[req.src]) {\r\n                        if (this._counter <= 0)\r\n                            this._counter = 0;\r\n                        else\r\n                            this._counter--;\r\n                        req.success(this.imagesCache[req.src]);\r\n                    } else {\r\n                        this._exec(req);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/og/utils/TextureAtlas.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Border beetween stored images.\r\n * @type {number}\r\n * @const\r\n */\r\nconst TextureAtlas_BORDER_SIZE = 4;\r\n\r\n/**\r\n * Texture atlas stores images in one texture. Each image has its own \r\n * atlas texture coordinates.\r\n * @class\r\n * @param {number} [width] - Texture atlas width, if it hasn't 1024 default.\r\n * @param {number} [height] - Texture atlas height, if it hasn't 1024 default..\r\n */\r\nclass TextureAtlas_TextureAtlas {\r\n    constructor(width, height) {\r\n\r\n        /**\r\n         * Atlas nodes where input images store. It can be access by image.__nodeIndex.\r\n         * @public\r\n         * @type {Array.<og.utils.TextureAtlasNode >}\r\n         */\r\n        this.nodes = [];\r\n\r\n        /**\r\n         * Created gl texture.\r\n         * @public\r\n         */\r\n        this.texture = null;\r\n\r\n        /**\r\n         * Atlas canvas.\r\n         * @public\r\n         * @type {canvas}\r\n         */\r\n        this.canvas = new ImageCanvas(width || 1024, height || 1024);\r\n        this.clearCanvas();\r\n\r\n        this._handler = null;\r\n        this._images = [];\r\n        this._btree = null;\r\n        this._imagesCacheManager = new ImagesCacheManager_ImagesCacheManager();\r\n        this.borderSize = 4;\r\n    }\r\n\r\n    /**\r\n     * Returns atlas javascript image object.\r\n     * @public\r\n     * @returns {Object} -\r\n     */\r\n    getImage() {\r\n        return this.canvas.getImage();\r\n    }\r\n\r\n    /**\r\n     * Returns canvas object.\r\n     * @public\r\n     * @returns {Object} -\r\n     */\r\n    getCanvas() {\r\n        return this.canvas._canvas;\r\n    }\r\n\r\n    /**\r\n     * Clear atlas with black.\r\n     * @public\r\n     */\r\n    clearCanvas() {\r\n        this.canvas.fillEmpty(\"black\");\r\n    }\r\n\r\n    /**\r\n     * Sets openglobus gl handler that creates gl texture.\r\n     * @public\r\n     * @param {og.webgl.Handler} handler - WebGL handler.\r\n     */\r\n    assignHandler(handler) {\r\n        this._handler = handler;\r\n        this.createTexture();\r\n    }\r\n\r\n    /**\r\n     * Returns image diagonal size.\r\n     * @param {Object} image - JavaSript image object.\r\n     * @returns {number} -\r\n     */\r\n    getDiagonal(image) {\r\n        var w = image.atlasWidth || image.width,\r\n            h = image.atlasHeight || image.height;\r\n        return Math.sqrt(w * w + h * h);\r\n    }\r\n\r\n    /**\r\n     * Adds image to the atlas and returns creted node with texture coordinates of the stored image.\r\n     * @public\r\n     * @param {Object} image - Input javascript image object.\r\n     * @param {boolean} [fastInsert] - If it's true atlas doesnt restore all images again \r\n     * and store image in the curent atlas sheme.\r\n     * @returns {og.utils.TextureAtlasNode} -\r\n     */\r\n    addImage(image, fastInsert) {\r\n\r\n        if (!(image.width && image.height)) {\r\n            return;\r\n        }\r\n\r\n        this._images.push(image);\r\n\r\n        this._makeAtlas(fastInsert);\r\n\r\n        return this.nodes[image.__nodeIndex];\r\n    }\r\n\r\n    _completeNode(nodes, node) {\r\n        if (node) {\r\n            var w = this.canvas.getWidth(),\r\n                h = this.canvas.getHeight();\r\n            var im = node.image;\r\n            var r = node.rect;\r\n            var bs = Math.round(this.borderSize * 0.5);\r\n            this.canvas.drawImage(im, r.left + bs, r.top + bs, im.atlasWidth, im.atlasHeight);\r\n            var tc = node.texCoords;\r\n\r\n            tc[0] = (r.left + bs) / w;\r\n            tc[1] = (r.top + bs) / h;\r\n\r\n            tc[2] = (r.left + bs) / w;\r\n            tc[3] = (r.bottom - bs) / h;\r\n\r\n            tc[4] = (r.right - bs) / w;\r\n            tc[5] = (r.bottom - bs) / h;\r\n\r\n            tc[6] = (r.right - bs) / w;\r\n            tc[7] = (r.bottom - bs) / h;\r\n\r\n            tc[8] = (r.right - bs) / w;\r\n            tc[9] = (r.top + bs) / h;\r\n\r\n            tc[10] = (r.left + bs) / w;\r\n            tc[11] = (r.top + bs) / h;\r\n\r\n            nodes[im.__nodeIndex] = node;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main atlas making function.\r\n     * @private\r\n     * @param {boolean} [fastInsert] - If it's true atlas doesnt restore all images again \r\n     * and store image in the curent atlas sheme.\r\n     */\r\n    _makeAtlas(fastInsert) {\r\n\r\n        if (fastInsert && this._btree) {\r\n            let im = this._images[this._images.length - 1];\r\n            this._completeNode(this.nodes, this._btree.insert(im));\r\n        } else {\r\n            let im = this._images.slice(0);\r\n\r\n            im.sort(function (b, a) {\r\n                return ((a.atlasWidth || a.width) - (b.atlasWidth || b.width)) || ((a.atlasHeight || a.height) - (b.atlasHeight || b.height));\r\n            });\r\n\r\n            this._btree = new TextureAtlas_TextureAtlasNode(new Rectangle(0, 0, this.canvas.getWidth(), this.canvas.getHeight()));\r\n            this._btree.atlas = this;\r\n\r\n            this.clearCanvas();\r\n\r\n            var newNodes = [];\r\n            for (var i = 0; i < im.length; i++) {\r\n                this._completeNode(newNodes, this._btree.insert(im[i]));\r\n            }\r\n            this.nodes = [];\r\n            this.nodes = newNodes;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates atlas gl texture.\r\n     * @public\r\n     */\r\n    createTexture() {\r\n        if (this._handler) {\r\n            this._handler.gl.deleteTexture(this.texture);\r\n            this.texture = this._handler.createTexture_l(this.canvas._canvas);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Image handler callback. \r\n     * @callback Object~successCallback\r\n     * @param {Image} img - Loaded image.\r\n     */\r\n\r\n    /**\r\n     * Asynchronous function that loads and creates image to the image cache, and call success callback when it's done.\r\n     * @public\r\n     * @param {string} src - Image object src string.\r\n     * @param {Object~successCallback} success - The callback that handles the image loads done.\r\n     */\r\n    loadImage(src, success) {\r\n        this._imagesCacheManager.load(src, success);\r\n    }\r\n\r\n    getImageTexCoordinates(img) {\r\n        if (img.__nodeIndex != null && this.nodes[img.__nodeIndex]) {\r\n            return this.nodes[img.__nodeIndex].texCoords;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Atlas binary tree node.\r\n * @class\r\n * @param {og.Rectangle} rect - Node image rectangle.\r\n */\r\nclass TextureAtlas_TextureAtlasNode {\r\n    constructor(rect) {\r\n        this.childNodes = null;\r\n        this.image = null;\r\n        this.rect = rect;\r\n        this.texCoords = [];\r\n        this.atlas = null;\r\n    }\r\n\r\n    insert(img) {\r\n\r\n        if (this.childNodes) {\r\n\r\n            var newNode = this.childNodes[0].insert(img);\r\n\r\n            if (newNode != null)\r\n                return newNode;\r\n\r\n            return this.childNodes[1].insert(img);\r\n\r\n        } else {\r\n\r\n            if (this.image != null)\r\n                return null;\r\n\r\n            var rc = this.rect;\r\n            var w = (img.atlasWidth || img.width) + this.atlas.borderSize;\r\n            var h = (img.atlasHeight || img.height) + this.atlas.borderSize;\r\n\r\n            if (w > rc.getWidth() || h > rc.getHeight())\r\n                return null;\r\n\r\n            if (rc.fit(w, h)) {\r\n                this.image = img;\r\n                return this;\r\n            }\r\n\r\n            this.childNodes = new Array(2);\r\n            this.childNodes[0] = new TextureAtlas_TextureAtlasNode();\r\n            this.childNodes[0].atlas = this.atlas;\r\n            this.childNodes[1] = new TextureAtlas_TextureAtlasNode();\r\n            this.childNodes[1].atlas = this.atlas;\r\n\r\n            var dw = rc.getWidth() - w;\r\n            var dh = rc.getHeight() - h;\r\n\r\n            if (dw > dh) {\r\n                this.childNodes[0].rect = new Rectangle(rc.left, rc.top, rc.left + w, rc.bottom);\r\n                this.childNodes[1].rect = new Rectangle(rc.left + w, rc.top, rc.right, rc.bottom);\r\n            } else {\r\n                this.childNodes[0].rect = new Rectangle(rc.left, rc.top, rc.right, rc.top + h);\r\n                this.childNodes[1].rect = new Rectangle(rc.left, rc.top + h, rc.right, rc.bottom);\r\n            }\r\n\r\n            return this.childNodes[0].insert(img);\r\n        }\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/og/index.webgl.js\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Handler\", function() { return Handler_Handler; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Framebuffer\", function() { return Framebuffer_Framebuffer; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"MultiFramebuffer\", function() { return MultiFramebuffer_MultiFramebuffer; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"types\", function() { return types; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Program\", function() { return Program_Program; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"TextureAtlas\", function() { return TextureAtlas_TextureAtlas; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://og/./src/og/index.webgl.js_+_30_modules?");

/***/ })

/******/ });
});